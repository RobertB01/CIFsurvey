/** Tuples. */


/** spec code generated from a CIF specification. */
class spec_class {
    /** specEnum declaration. It contains the single merged enum from the CIF model. */
    specEnum = Object.freeze({
        /** Literal "againstDrivingDirection". */
        _againstDrivingDirection: Symbol("againstDrivingDirection"),

        /** Literal "auto". */
        _auto: Symbol("auto"),

        /** Literal "camera". */
        _camera: Symbol("camera"),

        /** Literal "camera1". */
        _camera1: Symbol("camera1"),

        /** Literal "camera2". */
        _camera2: Symbol("camera2"),

        /** Literal "camera3". */
        _camera3: Symbol("camera3"),

        /** Literal "camera4". */
        _camera4: Symbol("camera4"),

        /** Literal "camera5". */
        _camera5: Symbol("camera5"),

        /** Literal "camera6". */
        _camera6: Symbol("camera6"),

        /** Literal "closing". */
        _closing: Symbol("closing"),

        /** Literal "closingUnconditionally". */
        _closingUnconditionally: Symbol("closingUnconditionally"),

        /** Literal "downward". */
        _downward: Symbol("downward"),

        /** Literal "drivingDirection". */
        _drivingDirection: Symbol("drivingDirection"),

        /** Literal "emergency". */
        _emergency: Symbol("emergency"),

        /** Literal "emptying". */
        _emptying: Symbol("emptying"),

        /** Literal "evacuation". */
        _evacuation: Symbol("evacuation"),

        /** Literal "extinguish". */
        _extinguish: Symbol("extinguish"),

        /** Literal "finished". */
        _finished: Symbol("finished"),

        /** Literal "flash". */
        _flash: Symbol("flash"),

        /** Literal "guard". */
        _guard: Symbol("guard"),

        /** Literal "headDrainCellar1". */
        _headDrainCellar1: Symbol("headDrainCellar1"),

        /** Literal "headDrainCellar2". */
        _headDrainCellar2: Symbol("headDrainCellar2"),

        /** Literal "left". */
        _left: Symbol("left"),

        /** Literal "live". */
        _live: Symbol("live"),

        /** Literal "maintenance". */
        _maintenance: Symbol("maintenance"),

        /** Literal "manual". */
        _manual: Symbol("manual"),

        /** Literal "message". */
        _message: Symbol("message"),

        /** Literal "off". */
        _off: Symbol("off"),

        /** Literal "on". */
        _on: Symbol("on"),

        /** Literal "on1". */
        _on1: Symbol("on1"),

        /** Literal "on2". */
        _on2: Symbol("on2"),

        /** Literal "opening". */
        _opening: Symbol("opening"),

        /** Literal "operational". */
        _operational: Symbol("operational"),

        /** Literal "pressed". */
        _pressed: Symbol("pressed"),

        /** Literal "recovery". */
        _recovery: Symbol("recovery"),

        /** Literal "red". */
        _red: Symbol("red"),

        /** Literal "right". */
        _right: Symbol("right"),

        /** Literal "running". */
        _running: Symbol("running"),

        /** Literal "section". */
        _section: Symbol("section"),

        /** Literal "standby". */
        _standby: Symbol("standby"),

        /** Literal "standstill". */
        _standstill: Symbol("standstill"),

        /** Literal "stopped". */
        _stopped: Symbol("stopped"),

        /** Literal "storing". */
        _storing: Symbol("storing"),

        /** Literal "support". */
        _support: Symbol("support"),

        /** Literal "suppressed". */
        _suppressed: Symbol("suppressed"),

        /** Literal "suppressedManual". */
        _suppressedManual: Symbol("suppressedManual"),

        /** Literal "traffictube". */
        _traffictube: Symbol("traffictube"),

        /** Literal "unpressed". */
        _unpressed: Symbol("unpressed"),

        /** Literal "upward". */
        _upward: Symbol("upward"),

        /** Literal "wrongway". */
        _wrongway: Symbol("wrongway"),

        /** Literal "yellow". */
        _yellow: Symbol("yellow")
    })

    /** Should execution timing information be provided? */
    doInfoExec = true;

    /** Should executed event information be provided? */
    doInfoEvent = true;

    /** Should print output be provided? */
    doInfoPrintOutput = true;

    /** Should state output be provided? */
    doStateOutput = false;

    /** Should transition output be provided? */
    doTransitionOutput = true;

    /** Whether the constants have been initialized already. */
    constantsInitialized = false;

    /** Whether the SVG copy and move declarations have been applied already. */
    svgCopiesAndMovesApplied = false;

    /** Whether this is the first time the code is (to be) executed. */
    firstExec;

    /** The names of all the events. */
    EVENT_NAMES = [
        "Tunnel_BroadcastButtons1.c_evacuation",
        "Tunnel_BroadcastButtons1.c_off",
        "Tunnel_BroadcastButtons2.c_evacuation",
        "Tunnel_BroadcastButtons2.c_off",
        "Tunnel_HeadDrainCellar1_ButtonEmptying_Button.u_push",
        "Tunnel_HeadDrainCellar1_ButtonEmptying_Observer.c_cancel",
        "Tunnel_HeadDrainCellar1_ButtonEmptying_Observer.c_done",
        "Tunnel_HeadDrainCellar1_ButtonOff_Button.u_push",
        "Tunnel_HeadDrainCellar1_ButtonOff_Observer.c_cancel",
        "Tunnel_HeadDrainCellar1_ButtonOff_Observer.c_done",
        "Tunnel_HeadDrainCellar1_ButtonStoring_Button.u_push",
        "Tunnel_HeadDrainCellar1_ButtonStoring_Observer.c_cancel",
        "Tunnel_HeadDrainCellar1_ButtonStoring_Observer.c_done",
        "Tunnel_HeadDrainCellar1_Control_ButtonAuto_Button.u_push",
        "Tunnel_HeadDrainCellar1_Control_ButtonAuto_Observer.c_cancel",
        "Tunnel_HeadDrainCellar1_Control_ButtonAuto_Observer.c_done",
        "Tunnel_HeadDrainCellar1_Control_ButtonManual_Button.u_push",
        "Tunnel_HeadDrainCellar1_Control_ButtonManual_Observer.c_cancel",
        "Tunnel_HeadDrainCellar1_Control_ButtonManual_Observer.c_done",
        "Tunnel_HeadDrainCellar1_Control_Mode.c_auto",
        "Tunnel_HeadDrainCellar1_Control_Mode.c_manual",
        "Tunnel_HeadDrainCellar1_Pump1.c_off",
        "Tunnel_HeadDrainCellar1_Pump1.c_on",
        "Tunnel_HeadDrainCellar1_Pump2.c_off",
        "Tunnel_HeadDrainCellar1_Pump2.c_on",
        "Tunnel_HeadDrainCellar1_Regime.c_empty",
        "Tunnel_HeadDrainCellar1_Regime.c_off",
        "Tunnel_HeadDrainCellar1_Regime.c_store",
        "Tunnel_HeadDrainCellar1_Sensor1.u_off",
        "Tunnel_HeadDrainCellar1_Sensor1.u_on",
        "Tunnel_HeadDrainCellar1_Sensor2.u_off",
        "Tunnel_HeadDrainCellar1_Sensor2.u_on",
        "Tunnel_HeadDrainCellar1_Sensor3.u_off",
        "Tunnel_HeadDrainCellar1_Sensor3.u_on",
        "Tunnel_HeadDrainCellar1_Sensor4.u_off",
        "Tunnel_HeadDrainCellar1_Sensor4.u_on",
        "Tunnel_HeadDrainCellar1_Sensor5.u_off",
        "Tunnel_HeadDrainCellar1_Sensor5.u_on",
        "Tunnel_HeadDrainCellar2_ButtonEmptying_Button.u_push",
        "Tunnel_HeadDrainCellar2_ButtonEmptying_Observer.c_cancel",
        "Tunnel_HeadDrainCellar2_ButtonEmptying_Observer.c_done",
        "Tunnel_HeadDrainCellar2_ButtonOff_Button.u_push",
        "Tunnel_HeadDrainCellar2_ButtonOff_Observer.c_cancel",
        "Tunnel_HeadDrainCellar2_ButtonOff_Observer.c_done",
        "Tunnel_HeadDrainCellar2_ButtonStoring_Button.u_push",
        "Tunnel_HeadDrainCellar2_ButtonStoring_Observer.c_cancel",
        "Tunnel_HeadDrainCellar2_ButtonStoring_Observer.c_done",
        "Tunnel_HeadDrainCellar2_Control_ButtonAuto_Button.u_push",
        "Tunnel_HeadDrainCellar2_Control_ButtonAuto_Observer.c_cancel",
        "Tunnel_HeadDrainCellar2_Control_ButtonAuto_Observer.c_done",
        "Tunnel_HeadDrainCellar2_Control_ButtonManual_Button.u_push",
        "Tunnel_HeadDrainCellar2_Control_ButtonManual_Observer.c_cancel",
        "Tunnel_HeadDrainCellar2_Control_ButtonManual_Observer.c_done",
        "Tunnel_HeadDrainCellar2_Control_Mode.c_auto",
        "Tunnel_HeadDrainCellar2_Control_Mode.c_manual",
        "Tunnel_HeadDrainCellar2_Pump1.c_off",
        "Tunnel_HeadDrainCellar2_Pump1.c_on",
        "Tunnel_HeadDrainCellar2_Pump2.c_off",
        "Tunnel_HeadDrainCellar2_Pump2.c_on",
        "Tunnel_HeadDrainCellar2_Regime.c_empty",
        "Tunnel_HeadDrainCellar2_Regime.c_off",
        "Tunnel_HeadDrainCellar2_Regime.c_store",
        "Tunnel_HeadDrainCellar2_Sensor1.u_off",
        "Tunnel_HeadDrainCellar2_Sensor1.u_on",
        "Tunnel_HeadDrainCellar2_Sensor2.u_off",
        "Tunnel_HeadDrainCellar2_Sensor2.u_on",
        "Tunnel_HeadDrainCellar2_Sensor3.u_off",
        "Tunnel_HeadDrainCellar2_Sensor3.u_on",
        "Tunnel_HeadDrainCellar2_Sensor4.u_off",
        "Tunnel_HeadDrainCellar2_Sensor4.u_on",
        "Tunnel_HeadDrainCellar2_Sensor5.u_off",
        "Tunnel_HeadDrainCellar2_Sensor5.u_on",
        "Tunnel_MiddleDrainCellar_ButtonEmptying_Button.u_push",
        "Tunnel_MiddleDrainCellar_ButtonEmptying_Observer.c_cancel",
        "Tunnel_MiddleDrainCellar_ButtonEmptying_Observer.c_done",
        "Tunnel_MiddleDrainCellar_ButtonOff_Button.u_push",
        "Tunnel_MiddleDrainCellar_ButtonOff_Observer.c_cancel",
        "Tunnel_MiddleDrainCellar_ButtonOff_Observer.c_done",
        "Tunnel_MiddleDrainCellar_ButtonStoring_Button.u_push",
        "Tunnel_MiddleDrainCellar_ButtonStoring_Observer.c_cancel",
        "Tunnel_MiddleDrainCellar_ButtonStoring_Observer.c_done",
        "Tunnel_MiddleDrainCellar_Control_ButtonAuto_Button.u_push",
        "Tunnel_MiddleDrainCellar_Control_ButtonAuto_Observer.c_cancel",
        "Tunnel_MiddleDrainCellar_Control_ButtonAuto_Observer.c_done",
        "Tunnel_MiddleDrainCellar_Control_ButtonManual_Button.u_push",
        "Tunnel_MiddleDrainCellar_Control_ButtonManual_Observer.c_cancel",
        "Tunnel_MiddleDrainCellar_Control_ButtonManual_Observer.c_done",
        "Tunnel_MiddleDrainCellar_Control_Mode.c_auto",
        "Tunnel_MiddleDrainCellar_Control_Mode.c_manual",
        "Tunnel_MiddleDrainCellar_Pump1.c_off",
        "Tunnel_MiddleDrainCellar_Pump1.c_on",
        "Tunnel_MiddleDrainCellar_Pump2.c_off",
        "Tunnel_MiddleDrainCellar_Pump2.c_on",
        "Tunnel_MiddleDrainCellar_PumpDirection.c_headDrainCellar1",
        "Tunnel_MiddleDrainCellar_PumpDirection.c_headDrainCellar2",
        "Tunnel_MiddleDrainCellar_Regime.c_empty",
        "Tunnel_MiddleDrainCellar_Regime.c_off",
        "Tunnel_MiddleDrainCellar_Regime.c_store",
        "Tunnel_MiddleDrainCellar_Sensor1.u_off",
        "Tunnel_MiddleDrainCellar_Sensor1.u_on",
        "Tunnel_MiddleDrainCellar_Sensor2.u_off",
        "Tunnel_MiddleDrainCellar_Sensor2.u_on",
        "Tunnel_MiddleDrainCellar_Sensor3.u_off",
        "Tunnel_MiddleDrainCellar_Sensor3.u_on",
        "Tunnel_MiddleDrainCellar_Sensor4.u_off",
        "Tunnel_MiddleDrainCellar_Sensor4.u_on",
        "Tunnel_MiddleDrainCellar_Sensor5.u_off",
        "Tunnel_MiddleDrainCellar_Sensor5.u_on",
        "Tunnel_MiddleTunnelChannel_Broadcast.c_off",
        "Tunnel_MiddleTunnelChannel_Broadcast.c_on",
        "Tunnel_MiddleTunnelChannel_Broadcast.c_onManual",
        "Tunnel_MiddleTunnelChannel_Broadcast.c_suppressed",
        "Tunnel_MiddleTunnelChannel_Broadcast.c_suppressedManual",
        "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_Button.u_push",
        "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_Observer.c_cancel",
        "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_Observer.c_done",
        "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_Button.u_push",
        "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_Observer.c_cancel",
        "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_Observer.c_done",
        "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_Button.u_push",
        "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_Observer.c_cancel",
        "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_Observer.c_done",
        "Tunnel_MiddleTunnelChannel_ButtonLightingOff_Button.u_push",
        "Tunnel_MiddleTunnelChannel_ButtonLightingOff_Observer.c_cancel",
        "Tunnel_MiddleTunnelChannel_ButtonLightingOff_Observer.c_done",
        "Tunnel_MiddleTunnelChannel_ButtonLightingOn_Button.u_push",
        "Tunnel_MiddleTunnelChannel_ButtonLightingOn_Observer.c_cancel",
        "Tunnel_MiddleTunnelChannel_ButtonLightingOn_Observer.c_done",
        "Tunnel_MiddleTunnelChannel_ButtonPressureLeft_Button.u_push",
        "Tunnel_MiddleTunnelChannel_ButtonPressureLeft_Observer.c_cancel",
        "Tunnel_MiddleTunnelChannel_ButtonPressureLeft_Observer.c_done",
        "Tunnel_MiddleTunnelChannel_ButtonPressureOff_Button.u_push",
        "Tunnel_MiddleTunnelChannel_ButtonPressureOff_Observer.c_cancel",
        "Tunnel_MiddleTunnelChannel_ButtonPressureOff_Observer.c_done",
        "Tunnel_MiddleTunnelChannel_ButtonPressureRight_Button.u_push",
        "Tunnel_MiddleTunnelChannel_ButtonPressureRight_Observer.c_cancel",
        "Tunnel_MiddleTunnelChannel_ButtonPressureRight_Observer.c_done",
        "Tunnel_MiddleTunnelChannel_ButtonStartMessage_Button.u_push",
        "Tunnel_MiddleTunnelChannel_ButtonStartMessage_Observer.c_cancel",
        "Tunnel_MiddleTunnelChannel_ButtonStartMessage_Observer.c_done",
        "Tunnel_MiddleTunnelChannel_ButtonStopMessage_Button.u_push",
        "Tunnel_MiddleTunnelChannel_ButtonStopMessage_Observer.c_cancel",
        "Tunnel_MiddleTunnelChannel_ButtonStopMessage_Observer.c_done",
        "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_Button.u_push",
        "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_Observer.c_cancel",
        "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_Observer.c_done",
        "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_Button.u_push",
        "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_Observer.c_cancel",
        "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_Observer.c_done",
        "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_Mode.c_auto",
        "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_Mode.c_manual",
        "Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_Button.u_push",
        "Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_Observer.c_cancel",
        "Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_Observer.c_done",
        "Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_Button.u_push",
        "Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_Observer.c_cancel",
        "Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_Observer.c_done",
        "Tunnel_MiddleTunnelChannel_ControlLighting_Mode.c_auto",
        "Tunnel_MiddleTunnelChannel_ControlLighting_Mode.c_manual",
        "Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_Button.u_push",
        "Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_Observer.c_cancel",
        "Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_Observer.c_done",
        "Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_Button.u_push",
        "Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_Observer.c_cancel",
        "Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_Observer.c_done",
        "Tunnel_MiddleTunnelChannel_ControlPressure_Mode.c_auto",
        "Tunnel_MiddleTunnelChannel_ControlPressure_Mode.c_manual",
        "Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication.c_downward",
        "Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication.c_off",
        "Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication.c_upward",
        "Tunnel_MiddleTunnelChannel_Lighting.c_off",
        "Tunnel_MiddleTunnelChannel_Lighting.c_on",
        "Tunnel_MiddleTunnelChannel_Pressure.c_left",
        "Tunnel_MiddleTunnelChannel_Pressure.c_off",
        "Tunnel_MiddleTunnelChannel_Pressure.c_right",
        "Tunnel_Traffictube1_AccessBoombarriers.c_close",
        "Tunnel_Traffictube1_AccessBoombarriers.c_closeUnconditionally",
        "Tunnel_Traffictube1_AccessBoombarriers.c_open",
        "Tunnel_Traffictube1_AccessBoombarriers.c_stop",
        "Tunnel_Traffictube1_AccessTrafficlights.c_flash",
        "Tunnel_Traffictube1_AccessTrafficlights.c_off",
        "Tunnel_Traffictube1_AccessTrafficlights.c_red",
        "Tunnel_Traffictube1_Boombarrier1_ActuatorDown.c_off",
        "Tunnel_Traffictube1_Boombarrier1_ActuatorDown.c_offEmergency",
        "Tunnel_Traffictube1_Boombarrier1_ActuatorDown.c_on",
        "Tunnel_Traffictube1_Boombarrier1_ActuatorUp.c_off",
        "Tunnel_Traffictube1_Boombarrier1_ActuatorUp.c_offEmergency",
        "Tunnel_Traffictube1_Boombarrier1_ActuatorUp.c_on",
        "Tunnel_Traffictube1_Boombarrier1_ObstacleDetection.u_off",
        "Tunnel_Traffictube1_Boombarrier1_ObstacleDetection.u_on",
        "Tunnel_Traffictube1_Boombarrier1_SensorClosed.u_off",
        "Tunnel_Traffictube1_Boombarrier1_SensorClosed.u_on",
        "Tunnel_Traffictube1_Boombarrier1_SensorOpen.u_off",
        "Tunnel_Traffictube1_Boombarrier1_SensorOpen.u_on",
        "Tunnel_Traffictube1_Boombarrier2_ActuatorDown.c_off",
        "Tunnel_Traffictube1_Boombarrier2_ActuatorDown.c_offEmergency",
        "Tunnel_Traffictube1_Boombarrier2_ActuatorDown.c_on",
        "Tunnel_Traffictube1_Boombarrier2_ActuatorUp.c_off",
        "Tunnel_Traffictube1_Boombarrier2_ActuatorUp.c_offEmergency",
        "Tunnel_Traffictube1_Boombarrier2_ActuatorUp.c_on",
        "Tunnel_Traffictube1_Boombarrier2_ObstacleDetection.u_off",
        "Tunnel_Traffictube1_Boombarrier2_ObstacleDetection.u_on",
        "Tunnel_Traffictube1_Boombarrier2_SensorClosed.u_off",
        "Tunnel_Traffictube1_Boombarrier2_SensorClosed.u_on",
        "Tunnel_Traffictube1_Boombarrier2_SensorOpen.u_off",
        "Tunnel_Traffictube1_Boombarrier2_SensorOpen.u_on",
        "Tunnel_Traffictube1_Broadcast.c_live",
        "Tunnel_Traffictube1_Broadcast.c_message",
        "Tunnel_Traffictube1_Broadcast.c_suppressed",
        "Tunnel_Traffictube1_ButtonCamera1_Button.u_push",
        "Tunnel_Traffictube1_ButtonCamera1_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonCamera1_Observer.c_done",
        "Tunnel_Traffictube1_ButtonCamera2_Button.u_push",
        "Tunnel_Traffictube1_ButtonCamera2_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonCamera2_Observer.c_done",
        "Tunnel_Traffictube1_ButtonCamera3_Button.u_push",
        "Tunnel_Traffictube1_ButtonCamera3_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonCamera3_Observer.c_done",
        "Tunnel_Traffictube1_ButtonCamera4_Button.u_push",
        "Tunnel_Traffictube1_ButtonCamera4_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonCamera4_Observer.c_done",
        "Tunnel_Traffictube1_ButtonCamera5_Button.u_push",
        "Tunnel_Traffictube1_ButtonCamera5_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonCamera5_Observer.c_done",
        "Tunnel_Traffictube1_ButtonCamera6_Button.u_push",
        "Tunnel_Traffictube1_ButtonCamera6_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonCamera6_Observer.c_done",
        "Tunnel_Traffictube1_ButtonCameraStopView_Button.u_push",
        "Tunnel_Traffictube1_ButtonCameraStopView_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonCameraStopView_Observer.c_done",
        "Tunnel_Traffictube1_ButtonCameraView_Button.u_push",
        "Tunnel_Traffictube1_ButtonCameraView_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonCameraView_Observer.c_done",
        "Tunnel_Traffictube1_ButtonCloseBoombarriers_Button.u_push",
        "Tunnel_Traffictube1_ButtonCloseBoombarriers_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonCloseBoombarriers_Observer.c_done",
        "Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_Button.u_push",
        "Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_Observer.c_done",
        "Tunnel_Traffictube1_ButtonEmergency_Button.u_push",
        "Tunnel_Traffictube1_ButtonEmergency_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonEmergency_Observer.c_done",
        "Tunnel_Traffictube1_ButtonEvacuation_Button.u_push",
        "Tunnel_Traffictube1_ButtonEvacuation_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonEvacuation_Observer.c_done",
        "Tunnel_Traffictube1_ButtonFlashTrafficlights_Button.u_push",
        "Tunnel_Traffictube1_ButtonFlashTrafficlights_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonFlashTrafficlights_Observer.c_done",
        "Tunnel_Traffictube1_ButtonLighting0_Button.u_push",
        "Tunnel_Traffictube1_ButtonLighting0_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonLighting0_Observer.c_done",
        "Tunnel_Traffictube1_ButtonLighting1_Button.u_push",
        "Tunnel_Traffictube1_ButtonLighting1_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonLighting1_Observer.c_done",
        "Tunnel_Traffictube1_ButtonLighting2_Button.u_push",
        "Tunnel_Traffictube1_ButtonLighting2_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonLighting2_Observer.c_done",
        "Tunnel_Traffictube1_ButtonLighting3_Button.u_push",
        "Tunnel_Traffictube1_ButtonLighting3_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonLighting3_Observer.c_done",
        "Tunnel_Traffictube1_ButtonLighting4_Button.u_push",
        "Tunnel_Traffictube1_ButtonLighting4_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonLighting4_Observer.c_done",
        "Tunnel_Traffictube1_ButtonLighting5_Button.u_push",
        "Tunnel_Traffictube1_ButtonLighting5_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonLighting5_Observer.c_done",
        "Tunnel_Traffictube1_ButtonLighting6_Button.u_push",
        "Tunnel_Traffictube1_ButtonLighting6_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonLighting6_Observer.c_done",
        "Tunnel_Traffictube1_ButtonLighting7_Button.u_push",
        "Tunnel_Traffictube1_ButtonLighting7_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonLighting7_Observer.c_done",
        "Tunnel_Traffictube1_ButtonLighting8_Button.u_push",
        "Tunnel_Traffictube1_ButtonLighting8_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonLighting8_Observer.c_done",
        "Tunnel_Traffictube1_ButtonLive_Button.u_push",
        "Tunnel_Traffictube1_ButtonLive_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonLive_Observer.c_done",
        "Tunnel_Traffictube1_ButtonMaintenance_Button.u_push",
        "Tunnel_Traffictube1_ButtonMaintenance_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonMaintenance_Observer.c_done",
        "Tunnel_Traffictube1_ButtonMessage_Button.u_push",
        "Tunnel_Traffictube1_ButtonMessage_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonMessage_Observer.c_done",
        "Tunnel_Traffictube1_ButtonOffTrafficlights_Button.u_push",
        "Tunnel_Traffictube1_ButtonOffTrafficlights_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonOffTrafficlights_Observer.c_done",
        "Tunnel_Traffictube1_ButtonOpenBoombarriers_Button.u_push",
        "Tunnel_Traffictube1_ButtonOpenBoombarriers_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonOpenBoombarriers_Observer.c_done",
        "Tunnel_Traffictube1_ButtonOperational_Button.u_push",
        "Tunnel_Traffictube1_ButtonOperational_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonOperational_Observer.c_done",
        "Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_Button.u_push",
        "Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_Observer.c_done",
        "Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_Button.u_push",
        "Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_Observer.c_done",
        "Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_Button.u_push",
        "Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_Observer.c_done",
        "Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_Button.u_push",
        "Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_Observer.c_done",
        "Tunnel_Traffictube1_ButtonRecovery_Button.u_push",
        "Tunnel_Traffictube1_ButtonRecovery_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonRecovery_Observer.c_done",
        "Tunnel_Traffictube1_ButtonRedTrafficlights_Button.u_push",
        "Tunnel_Traffictube1_ButtonRedTrafficlights_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonRedTrafficlights_Observer.c_done",
        "Tunnel_Traffictube1_ButtonStopBoombarriers_Button.u_push",
        "Tunnel_Traffictube1_ButtonStopBoombarriers_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonStopBoombarriers_Observer.c_done",
        "Tunnel_Traffictube1_ButtonVentilation0_Button.u_push",
        "Tunnel_Traffictube1_ButtonVentilation0_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonVentilation0_Observer.c_done",
        "Tunnel_Traffictube1_ButtonVentilation1_Button.u_push",
        "Tunnel_Traffictube1_ButtonVentilation1_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonVentilation1_Observer.c_done",
        "Tunnel_Traffictube1_ButtonVentilation2_Button.u_push",
        "Tunnel_Traffictube1_ButtonVentilation2_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonVentilation2_Observer.c_done",
        "Tunnel_Traffictube1_ButtonVentilation3_Button.u_push",
        "Tunnel_Traffictube1_ButtonVentilation3_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonVentilation3_Observer.c_done",
        "Tunnel_Traffictube1_ButtonVentilation4_Button.u_push",
        "Tunnel_Traffictube1_ButtonVentilation4_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonVentilation4_Observer.c_done",
        "Tunnel_Traffictube1_ButtonVentilation5_Button.u_push",
        "Tunnel_Traffictube1_ButtonVentilation5_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonVentilation5_Observer.c_done",
        "Tunnel_Traffictube1_ButtonVentilation6_Button.u_push",
        "Tunnel_Traffictube1_ButtonVentilation6_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonVentilation6_Observer.c_done",
        "Tunnel_Traffictube1_ButtonVentilation7_Button.u_push",
        "Tunnel_Traffictube1_ButtonVentilation7_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonVentilation7_Observer.c_done",
        "Tunnel_Traffictube1_ButtonVentilation8_Button.u_push",
        "Tunnel_Traffictube1_ButtonVentilation8_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonVentilation8_Observer.c_done",
        "Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_Button.u_push",
        "Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_Observer.c_done",
        "Tunnel_Traffictube1_ButtonVentilationDrivingDirection_Button.u_push",
        "Tunnel_Traffictube1_ButtonVentilationDrivingDirection_Observer.c_cancel",
        "Tunnel_Traffictube1_ButtonVentilationDrivingDirection_Observer.c_done",
        "Tunnel_Traffictube1_CCTV.c_off1",
        "Tunnel_Traffictube1_CCTV.c_off2",
        "Tunnel_Traffictube1_CCTV.c_off3",
        "Tunnel_Traffictube1_CCTV.c_off4",
        "Tunnel_Traffictube1_CCTV.c_off5",
        "Tunnel_Traffictube1_CCTV.c_off6",
        "Tunnel_Traffictube1_CCTV.c_on1",
        "Tunnel_Traffictube1_CCTV.c_on2",
        "Tunnel_Traffictube1_CCTV.c_on3",
        "Tunnel_Traffictube1_CCTV.c_on4",
        "Tunnel_Traffictube1_CCTV.c_on5",
        "Tunnel_Traffictube1_CCTV.c_on6",
        "Tunnel_Traffictube1_CCTV.c_start",
        "Tunnel_Traffictube1_CCTV.c_stop",
        "Tunnel_Traffictube1_CCTV.c_view",
        "Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_Button.u_push",
        "Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_Observer.c_cancel",
        "Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_Observer.c_done",
        "Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_Button.u_push",
        "Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_Observer.c_cancel",
        "Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_Observer.c_done",
        "Tunnel_Traffictube1_ControlBoombarriers_Mode.c_auto",
        "Tunnel_Traffictube1_ControlBoombarriers_Mode.c_manual",
        "Tunnel_Traffictube1_ControlLighting_ButtonAuto_Button.u_push",
        "Tunnel_Traffictube1_ControlLighting_ButtonAuto_Observer.c_cancel",
        "Tunnel_Traffictube1_ControlLighting_ButtonAuto_Observer.c_done",
        "Tunnel_Traffictube1_ControlLighting_ButtonManual_Button.u_push",
        "Tunnel_Traffictube1_ControlLighting_ButtonManual_Observer.c_cancel",
        "Tunnel_Traffictube1_ControlLighting_ButtonManual_Observer.c_done",
        "Tunnel_Traffictube1_ControlLighting_Mode.c_auto",
        "Tunnel_Traffictube1_ControlLighting_Mode.c_manual",
        "Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_Button.u_push",
        "Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_Observer.c_cancel",
        "Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_Observer.c_done",
        "Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_Button.u_push",
        "Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_Observer.c_cancel",
        "Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_Observer.c_done",
        "Tunnel_Traffictube1_ControlTrafficlights_Mode.c_auto",
        "Tunnel_Traffictube1_ControlTrafficlights_Mode.c_manual",
        "Tunnel_Traffictube1_ControlVentilation_ButtonAuto_Button.u_push",
        "Tunnel_Traffictube1_ControlVentilation_ButtonAuto_Observer.c_cancel",
        "Tunnel_Traffictube1_ControlVentilation_ButtonAuto_Observer.c_done",
        "Tunnel_Traffictube1_ControlVentilation_ButtonManual_Button.u_push",
        "Tunnel_Traffictube1_ControlVentilation_ButtonManual_Observer.c_cancel",
        "Tunnel_Traffictube1_ControlVentilation_ButtonManual_Observer.c_done",
        "Tunnel_Traffictube1_ControlVentilation_Mode.c_auto",
        "Tunnel_Traffictube1_ControlVentilation_Mode.c_manual",
        "Tunnel_Traffictube1_EmergencyCabinetA_Firehose.u_off",
        "Tunnel_Traffictube1_EmergencyCabinetA_Firehose.u_on",
        "Tunnel_Traffictube1_EmergencyCabinetA_HandheldExtinguisher.u_off",
        "Tunnel_Traffictube1_EmergencyCabinetA_HandheldExtinguisher.u_on",
        "Tunnel_Traffictube1_EmergencyCabinetA_Phone.u_off",
        "Tunnel_Traffictube1_EmergencyCabinetA_Phone.u_on",
        "Tunnel_Traffictube1_EmergencyCabinetA_SensorOpen.u_off",
        "Tunnel_Traffictube1_EmergencyCabinetA_SensorOpen.u_on",
        "Tunnel_Traffictube1_EmergencyCabinetC_HandheldExtinguisher.u_off",
        "Tunnel_Traffictube1_EmergencyCabinetC_HandheldExtinguisher.u_on",
        "Tunnel_Traffictube1_EmergencyCabinetC_Phone.u_off",
        "Tunnel_Traffictube1_EmergencyCabinetC_Phone.u_on",
        "Tunnel_Traffictube1_EmergencyCabinetC_SensorOpen.u_off",
        "Tunnel_Traffictube1_EmergencyCabinetC_SensorOpen.u_on",
        "Tunnel_Traffictube1_EscapeDoor_Broadcast.c_off",
        "Tunnel_Traffictube1_EscapeDoor_Broadcast.c_on",
        "Tunnel_Traffictube1_EscapeDoor_Broadcast.c_suppressed",
        "Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_Button.u_push",
        "Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_Observer.c_cancel",
        "Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_Observer.c_done",
        "Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_Button.u_push",
        "Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_Observer.c_cancel",
        "Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_Observer.c_done",
        "Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_Button.u_push",
        "Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_Observer.c_cancel",
        "Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_Observer.c_done",
        "Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_Button.u_push",
        "Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_Observer.c_cancel",
        "Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_Observer.c_done",
        "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_Button.u_push",
        "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_Observer.c_cancel",
        "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_Observer.c_done",
        "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_Button.u_push",
        "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_Observer.c_cancel",
        "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_Observer.c_done",
        "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_Mode.c_auto",
        "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_Mode.c_manual",
        "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_Button.u_push",
        "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer.c_cancel",
        "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer.c_done",
        "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_Button.u_push",
        "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_Observer.c_cancel",
        "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_Observer.c_done",
        "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_Mode.c_auto",
        "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_Mode.c_manual",
        "Tunnel_Traffictube1_EscapeDoor_RouteIndication.c_off",
        "Tunnel_Traffictube1_EscapeDoor_RouteIndication.c_on",
        "Tunnel_Traffictube1_J32_Mode.c_off",
        "Tunnel_Traffictube1_J32_Mode.c_on",
        "Tunnel_Traffictube1_J32_TimerReleaseSignal.c_on",
        "Tunnel_Traffictube1_J32_TimerReleaseSignal.c_reset",
        "Tunnel_Traffictube1_J32_TimerReleaseSignal.u_timeout",
        "Tunnel_Traffictube1_Lighting.c_0",
        "Tunnel_Traffictube1_Lighting.c_1",
        "Tunnel_Traffictube1_Lighting.c_2",
        "Tunnel_Traffictube1_Lighting.c_3",
        "Tunnel_Traffictube1_Lighting.c_4",
        "Tunnel_Traffictube1_Lighting.c_5",
        "Tunnel_Traffictube1_Lighting.c_6",
        "Tunnel_Traffictube1_Lighting.c_7",
        "Tunnel_Traffictube1_Lighting.c_8",
        "Tunnel_Traffictube1_Lightsensor.u_0",
        "Tunnel_Traffictube1_Lightsensor.u_1",
        "Tunnel_Traffictube1_Lightsensor.u_2",
        "Tunnel_Traffictube1_Lightsensor.u_3",
        "Tunnel_Traffictube1_Lightsensor.u_4",
        "Tunnel_Traffictube1_Lightsensor.u_5",
        "Tunnel_Traffictube1_Lightsensor.u_6",
        "Tunnel_Traffictube1_Lightsensor.u_7",
        "Tunnel_Traffictube1_Lightsensor.u_8",
        "Tunnel_Traffictube1_MatrixsignTrafficlight.c_off",
        "Tunnel_Traffictube1_MatrixsignTrafficlight.c_on",
        "Tunnel_Traffictube1_MatrixsignUnpressed.c_off",
        "Tunnel_Traffictube1_MatrixsignUnpressed.c_on",
        "Tunnel_Traffictube1_ModeTraffictube.c_emergency",
        "Tunnel_Traffictube1_ModeTraffictube.c_evacuation",
        "Tunnel_Traffictube1_ModeTraffictube.c_evacuationEmergency",
        "Tunnel_Traffictube1_ModeTraffictube.c_maintenance",
        "Tunnel_Traffictube1_ModeTraffictube.c_operational",
        "Tunnel_Traffictube1_ModeTraffictube.c_recovery",
        "Tunnel_Traffictube1_ModeTraffictube.c_standby",
        "Tunnel_Traffictube1_ModeTraffictube.c_support",
        "Tunnel_Traffictube1_PopUp_ButtonAccept_Button.u_push",
        "Tunnel_Traffictube1_PopUp_ButtonAccept_Observer.c_cancel",
        "Tunnel_Traffictube1_PopUp_ButtonAccept_Observer.c_done",
        "Tunnel_Traffictube1_PopUp_ButtonReject_Button.u_push",
        "Tunnel_Traffictube1_PopUp_ButtonReject_Observer.c_cancel",
        "Tunnel_Traffictube1_PopUp_ButtonReject_Observer.c_done",
        "Tunnel_Traffictube1_PopUp_Timer.c_on",
        "Tunnel_Traffictube1_PopUp_Timer.c_reset",
        "Tunnel_Traffictube1_PopUp_Timer.u_timeout",
        "Tunnel_Traffictube1_PopUp_Window.c_off",
        "Tunnel_Traffictube1_PopUp_Window.c_on",
        "Tunnel_Traffictube1_Recorder.c_off",
        "Tunnel_Traffictube1_Recorder.c_on",
        "Tunnel_Traffictube1_Smokedetection.u_0",
        "Tunnel_Traffictube1_Smokedetection.u_1",
        "Tunnel_Traffictube1_Smokedetection.u_2",
        "Tunnel_Traffictube1_Smokedetection.u_3",
        "Tunnel_Traffictube1_Smokedetection.u_4",
        "Tunnel_Traffictube1_Smokedetection.u_5",
        "Tunnel_Traffictube1_Smokedetection.u_6",
        "Tunnel_Traffictube1_Smokedetection.u_7",
        "Tunnel_Traffictube1_Smokedetection.u_8",
        "Tunnel_Traffictube1_Standstilldetection.u_off",
        "Tunnel_Traffictube1_Standstilldetection.u_standstill",
        "Tunnel_Traffictube1_Standstilldetection.u_wrongway",
        "Tunnel_Traffictube1_SwitchTimerAudio.c_off",
        "Tunnel_Traffictube1_SwitchTimerAudio.c_on",
        "Tunnel_Traffictube1_SwitchTimerAudio.u_timeout",
        "Tunnel_Traffictube1_TimerCameraViewEven.c_on",
        "Tunnel_Traffictube1_TimerCameraViewEven.c_reset",
        "Tunnel_Traffictube1_TimerCameraViewEven.u_timeout",
        "Tunnel_Traffictube1_TimerCameraViewUneven.c_on",
        "Tunnel_Traffictube1_TimerCameraViewUneven.c_reset",
        "Tunnel_Traffictube1_TimerCameraViewUneven.u_timeout",
        "Tunnel_Traffictube1_Trafficlight1_Mode.c_flash",
        "Tunnel_Traffictube1_Trafficlight1_Mode.c_off",
        "Tunnel_Traffictube1_Trafficlight1_Mode.c_red",
        "Tunnel_Traffictube1_Trafficlight1_Mode.c_yellow",
        "Tunnel_Traffictube1_Trafficlight1_ReleaseSignal.u_off",
        "Tunnel_Traffictube1_Trafficlight1_ReleaseSignal.u_on",
        "Tunnel_Traffictube1_Trafficlight1_TimerReleaseSignal.c_on",
        "Tunnel_Traffictube1_Trafficlight1_TimerReleaseSignal.c_reset",
        "Tunnel_Traffictube1_Trafficlight1_TimerReleaseSignal.u_timeout",
        "Tunnel_Traffictube1_Trafficlight2_Mode.c_flash",
        "Tunnel_Traffictube1_Trafficlight2_Mode.c_off",
        "Tunnel_Traffictube1_Trafficlight2_Mode.c_red",
        "Tunnel_Traffictube1_Trafficlight2_Mode.c_yellow",
        "Tunnel_Traffictube1_Trafficlight2_ReleaseSignal.u_off",
        "Tunnel_Traffictube1_Trafficlight2_ReleaseSignal.u_on",
        "Tunnel_Traffictube1_Trafficlight2_TimerReleaseSignal.c_on",
        "Tunnel_Traffictube1_Trafficlight2_TimerReleaseSignal.c_reset",
        "Tunnel_Traffictube1_Trafficlight2_TimerReleaseSignal.u_timeout",
        "Tunnel_Traffictube1_Trafficlight3_Mode.c_flash",
        "Tunnel_Traffictube1_Trafficlight3_Mode.c_off",
        "Tunnel_Traffictube1_Trafficlight3_Mode.c_red",
        "Tunnel_Traffictube1_Trafficlight3_Mode.c_yellow",
        "Tunnel_Traffictube1_Trafficlight3_ReleaseSignal.u_off",
        "Tunnel_Traffictube1_Trafficlight3_ReleaseSignal.u_on",
        "Tunnel_Traffictube1_Trafficlight3_TimerReleaseSignal.c_on",
        "Tunnel_Traffictube1_Trafficlight3_TimerReleaseSignal.c_reset",
        "Tunnel_Traffictube1_Trafficlight3_TimerReleaseSignal.u_timeout",
        "Tunnel_Traffictube1_Ventilation.c_0",
        "Tunnel_Traffictube1_Ventilation.c_1",
        "Tunnel_Traffictube1_Ventilation.c_2",
        "Tunnel_Traffictube1_Ventilation.c_3",
        "Tunnel_Traffictube1_Ventilation.c_4",
        "Tunnel_Traffictube1_Ventilation.c_5",
        "Tunnel_Traffictube1_Ventilation.c_6",
        "Tunnel_Traffictube1_Ventilation.c_7",
        "Tunnel_Traffictube1_Ventilation.c_8",
        "Tunnel_Traffictube1_VentilationDirection.c_againstDrivingDirection",
        "Tunnel_Traffictube1_VentilationDirection.c_drivingDirection",
        "Tunnel_Traffictube1_VentilationEntrance.c_0",
        "Tunnel_Traffictube1_VentilationEntrance.c_1",
        "Tunnel_Traffictube1_VentilationEntrance.c_2",
        "Tunnel_Traffictube1_VentilationEntrance.c_3",
        "Tunnel_Traffictube1_VentilationEntrance.c_4",
        "Tunnel_Traffictube1_VentilationEntrance.c_5",
        "Tunnel_Traffictube1_VentilationEntrance.c_6",
        "Tunnel_Traffictube1_VentilationEntrance.c_7",
        "Tunnel_Traffictube1_VentilationEntrance.c_8",
        "Tunnel_Traffictube2_AccessBoombarriers.c_close",
        "Tunnel_Traffictube2_AccessBoombarriers.c_closeUnconditionally",
        "Tunnel_Traffictube2_AccessBoombarriers.c_open",
        "Tunnel_Traffictube2_AccessBoombarriers.c_stop",
        "Tunnel_Traffictube2_AccessTrafficlights.c_flash",
        "Tunnel_Traffictube2_AccessTrafficlights.c_off",
        "Tunnel_Traffictube2_AccessTrafficlights.c_red",
        "Tunnel_Traffictube2_Boombarrier1_ActuatorDown.c_off",
        "Tunnel_Traffictube2_Boombarrier1_ActuatorDown.c_offEmergency",
        "Tunnel_Traffictube2_Boombarrier1_ActuatorDown.c_on",
        "Tunnel_Traffictube2_Boombarrier1_ActuatorUp.c_off",
        "Tunnel_Traffictube2_Boombarrier1_ActuatorUp.c_offEmergency",
        "Tunnel_Traffictube2_Boombarrier1_ActuatorUp.c_on",
        "Tunnel_Traffictube2_Boombarrier1_ObstacleDetection.u_off",
        "Tunnel_Traffictube2_Boombarrier1_ObstacleDetection.u_on",
        "Tunnel_Traffictube2_Boombarrier1_SensorClosed.u_off",
        "Tunnel_Traffictube2_Boombarrier1_SensorClosed.u_on",
        "Tunnel_Traffictube2_Boombarrier1_SensorOpen.u_off",
        "Tunnel_Traffictube2_Boombarrier1_SensorOpen.u_on",
        "Tunnel_Traffictube2_Boombarrier2_ActuatorDown.c_off",
        "Tunnel_Traffictube2_Boombarrier2_ActuatorDown.c_offEmergency",
        "Tunnel_Traffictube2_Boombarrier2_ActuatorDown.c_on",
        "Tunnel_Traffictube2_Boombarrier2_ActuatorUp.c_off",
        "Tunnel_Traffictube2_Boombarrier2_ActuatorUp.c_offEmergency",
        "Tunnel_Traffictube2_Boombarrier2_ActuatorUp.c_on",
        "Tunnel_Traffictube2_Boombarrier2_ObstacleDetection.u_off",
        "Tunnel_Traffictube2_Boombarrier2_ObstacleDetection.u_on",
        "Tunnel_Traffictube2_Boombarrier2_SensorClosed.u_off",
        "Tunnel_Traffictube2_Boombarrier2_SensorClosed.u_on",
        "Tunnel_Traffictube2_Boombarrier2_SensorOpen.u_off",
        "Tunnel_Traffictube2_Boombarrier2_SensorOpen.u_on",
        "Tunnel_Traffictube2_Broadcast.c_live",
        "Tunnel_Traffictube2_Broadcast.c_message",
        "Tunnel_Traffictube2_Broadcast.c_suppressed",
        "Tunnel_Traffictube2_ButtonCamera1_Button.u_push",
        "Tunnel_Traffictube2_ButtonCamera1_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonCamera1_Observer.c_done",
        "Tunnel_Traffictube2_ButtonCamera2_Button.u_push",
        "Tunnel_Traffictube2_ButtonCamera2_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonCamera2_Observer.c_done",
        "Tunnel_Traffictube2_ButtonCamera3_Button.u_push",
        "Tunnel_Traffictube2_ButtonCamera3_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonCamera3_Observer.c_done",
        "Tunnel_Traffictube2_ButtonCamera4_Button.u_push",
        "Tunnel_Traffictube2_ButtonCamera4_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonCamera4_Observer.c_done",
        "Tunnel_Traffictube2_ButtonCamera5_Button.u_push",
        "Tunnel_Traffictube2_ButtonCamera5_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonCamera5_Observer.c_done",
        "Tunnel_Traffictube2_ButtonCamera6_Button.u_push",
        "Tunnel_Traffictube2_ButtonCamera6_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonCamera6_Observer.c_done",
        "Tunnel_Traffictube2_ButtonCameraStopView_Button.u_push",
        "Tunnel_Traffictube2_ButtonCameraStopView_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonCameraStopView_Observer.c_done",
        "Tunnel_Traffictube2_ButtonCameraView_Button.u_push",
        "Tunnel_Traffictube2_ButtonCameraView_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonCameraView_Observer.c_done",
        "Tunnel_Traffictube2_ButtonCloseBoombarriers_Button.u_push",
        "Tunnel_Traffictube2_ButtonCloseBoombarriers_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonCloseBoombarriers_Observer.c_done",
        "Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_Button.u_push",
        "Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_Observer.c_done",
        "Tunnel_Traffictube2_ButtonEmergency_Button.u_push",
        "Tunnel_Traffictube2_ButtonEmergency_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonEmergency_Observer.c_done",
        "Tunnel_Traffictube2_ButtonEvacuation_Button.u_push",
        "Tunnel_Traffictube2_ButtonEvacuation_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonEvacuation_Observer.c_done",
        "Tunnel_Traffictube2_ButtonFlashTrafficlights_Button.u_push",
        "Tunnel_Traffictube2_ButtonFlashTrafficlights_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonFlashTrafficlights_Observer.c_done",
        "Tunnel_Traffictube2_ButtonLighting0_Button.u_push",
        "Tunnel_Traffictube2_ButtonLighting0_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonLighting0_Observer.c_done",
        "Tunnel_Traffictube2_ButtonLighting1_Button.u_push",
        "Tunnel_Traffictube2_ButtonLighting1_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonLighting1_Observer.c_done",
        "Tunnel_Traffictube2_ButtonLighting2_Button.u_push",
        "Tunnel_Traffictube2_ButtonLighting2_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonLighting2_Observer.c_done",
        "Tunnel_Traffictube2_ButtonLighting3_Button.u_push",
        "Tunnel_Traffictube2_ButtonLighting3_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonLighting3_Observer.c_done",
        "Tunnel_Traffictube2_ButtonLighting4_Button.u_push",
        "Tunnel_Traffictube2_ButtonLighting4_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonLighting4_Observer.c_done",
        "Tunnel_Traffictube2_ButtonLighting5_Button.u_push",
        "Tunnel_Traffictube2_ButtonLighting5_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonLighting5_Observer.c_done",
        "Tunnel_Traffictube2_ButtonLighting6_Button.u_push",
        "Tunnel_Traffictube2_ButtonLighting6_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonLighting6_Observer.c_done",
        "Tunnel_Traffictube2_ButtonLighting7_Button.u_push",
        "Tunnel_Traffictube2_ButtonLighting7_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonLighting7_Observer.c_done",
        "Tunnel_Traffictube2_ButtonLighting8_Button.u_push",
        "Tunnel_Traffictube2_ButtonLighting8_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonLighting8_Observer.c_done",
        "Tunnel_Traffictube2_ButtonLive_Button.u_push",
        "Tunnel_Traffictube2_ButtonLive_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonLive_Observer.c_done",
        "Tunnel_Traffictube2_ButtonMaintenance_Button.u_push",
        "Tunnel_Traffictube2_ButtonMaintenance_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonMaintenance_Observer.c_done",
        "Tunnel_Traffictube2_ButtonMessage_Button.u_push",
        "Tunnel_Traffictube2_ButtonMessage_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonMessage_Observer.c_done",
        "Tunnel_Traffictube2_ButtonOffTrafficlights_Button.u_push",
        "Tunnel_Traffictube2_ButtonOffTrafficlights_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonOffTrafficlights_Observer.c_done",
        "Tunnel_Traffictube2_ButtonOpenBoombarriers_Button.u_push",
        "Tunnel_Traffictube2_ButtonOpenBoombarriers_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonOpenBoombarriers_Observer.c_done",
        "Tunnel_Traffictube2_ButtonOperational_Button.u_push",
        "Tunnel_Traffictube2_ButtonOperational_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonOperational_Observer.c_done",
        "Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_Button.u_push",
        "Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_Observer.c_done",
        "Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_Button.u_push",
        "Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_Observer.c_done",
        "Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_Button.u_push",
        "Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_Observer.c_done",
        "Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_Button.u_push",
        "Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_Observer.c_done",
        "Tunnel_Traffictube2_ButtonRecovery_Button.u_push",
        "Tunnel_Traffictube2_ButtonRecovery_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonRecovery_Observer.c_done",
        "Tunnel_Traffictube2_ButtonRedTrafficlights_Button.u_push",
        "Tunnel_Traffictube2_ButtonRedTrafficlights_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonRedTrafficlights_Observer.c_done",
        "Tunnel_Traffictube2_ButtonStopBoombarriers_Button.u_push",
        "Tunnel_Traffictube2_ButtonStopBoombarriers_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonStopBoombarriers_Observer.c_done",
        "Tunnel_Traffictube2_ButtonVentilation0_Button.u_push",
        "Tunnel_Traffictube2_ButtonVentilation0_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonVentilation0_Observer.c_done",
        "Tunnel_Traffictube2_ButtonVentilation1_Button.u_push",
        "Tunnel_Traffictube2_ButtonVentilation1_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonVentilation1_Observer.c_done",
        "Tunnel_Traffictube2_ButtonVentilation2_Button.u_push",
        "Tunnel_Traffictube2_ButtonVentilation2_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonVentilation2_Observer.c_done",
        "Tunnel_Traffictube2_ButtonVentilation3_Button.u_push",
        "Tunnel_Traffictube2_ButtonVentilation3_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonVentilation3_Observer.c_done",
        "Tunnel_Traffictube2_ButtonVentilation4_Button.u_push",
        "Tunnel_Traffictube2_ButtonVentilation4_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonVentilation4_Observer.c_done",
        "Tunnel_Traffictube2_ButtonVentilation5_Button.u_push",
        "Tunnel_Traffictube2_ButtonVentilation5_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonVentilation5_Observer.c_done",
        "Tunnel_Traffictube2_ButtonVentilation6_Button.u_push",
        "Tunnel_Traffictube2_ButtonVentilation6_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonVentilation6_Observer.c_done",
        "Tunnel_Traffictube2_ButtonVentilation7_Button.u_push",
        "Tunnel_Traffictube2_ButtonVentilation7_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonVentilation7_Observer.c_done",
        "Tunnel_Traffictube2_ButtonVentilation8_Button.u_push",
        "Tunnel_Traffictube2_ButtonVentilation8_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonVentilation8_Observer.c_done",
        "Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_Button.u_push",
        "Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_Observer.c_done",
        "Tunnel_Traffictube2_ButtonVentilationDrivingDirection_Button.u_push",
        "Tunnel_Traffictube2_ButtonVentilationDrivingDirection_Observer.c_cancel",
        "Tunnel_Traffictube2_ButtonVentilationDrivingDirection_Observer.c_done",
        "Tunnel_Traffictube2_CCTV.c_off1",
        "Tunnel_Traffictube2_CCTV.c_off2",
        "Tunnel_Traffictube2_CCTV.c_off3",
        "Tunnel_Traffictube2_CCTV.c_off4",
        "Tunnel_Traffictube2_CCTV.c_off5",
        "Tunnel_Traffictube2_CCTV.c_off6",
        "Tunnel_Traffictube2_CCTV.c_on1",
        "Tunnel_Traffictube2_CCTV.c_on2",
        "Tunnel_Traffictube2_CCTV.c_on3",
        "Tunnel_Traffictube2_CCTV.c_on4",
        "Tunnel_Traffictube2_CCTV.c_on5",
        "Tunnel_Traffictube2_CCTV.c_on6",
        "Tunnel_Traffictube2_CCTV.c_start",
        "Tunnel_Traffictube2_CCTV.c_stop",
        "Tunnel_Traffictube2_CCTV.c_view",
        "Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_Button.u_push",
        "Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_Observer.c_cancel",
        "Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_Observer.c_done",
        "Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_Button.u_push",
        "Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_Observer.c_cancel",
        "Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_Observer.c_done",
        "Tunnel_Traffictube2_ControlBoombarriers_Mode.c_auto",
        "Tunnel_Traffictube2_ControlBoombarriers_Mode.c_manual",
        "Tunnel_Traffictube2_ControlLighting_ButtonAuto_Button.u_push",
        "Tunnel_Traffictube2_ControlLighting_ButtonAuto_Observer.c_cancel",
        "Tunnel_Traffictube2_ControlLighting_ButtonAuto_Observer.c_done",
        "Tunnel_Traffictube2_ControlLighting_ButtonManual_Button.u_push",
        "Tunnel_Traffictube2_ControlLighting_ButtonManual_Observer.c_cancel",
        "Tunnel_Traffictube2_ControlLighting_ButtonManual_Observer.c_done",
        "Tunnel_Traffictube2_ControlLighting_Mode.c_auto",
        "Tunnel_Traffictube2_ControlLighting_Mode.c_manual",
        "Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_Button.u_push",
        "Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_Observer.c_cancel",
        "Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_Observer.c_done",
        "Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_Button.u_push",
        "Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_Observer.c_cancel",
        "Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_Observer.c_done",
        "Tunnel_Traffictube2_ControlTrafficlights_Mode.c_auto",
        "Tunnel_Traffictube2_ControlTrafficlights_Mode.c_manual",
        "Tunnel_Traffictube2_ControlVentilation_ButtonAuto_Button.u_push",
        "Tunnel_Traffictube2_ControlVentilation_ButtonAuto_Observer.c_cancel",
        "Tunnel_Traffictube2_ControlVentilation_ButtonAuto_Observer.c_done",
        "Tunnel_Traffictube2_ControlVentilation_ButtonManual_Button.u_push",
        "Tunnel_Traffictube2_ControlVentilation_ButtonManual_Observer.c_cancel",
        "Tunnel_Traffictube2_ControlVentilation_ButtonManual_Observer.c_done",
        "Tunnel_Traffictube2_ControlVentilation_Mode.c_auto",
        "Tunnel_Traffictube2_ControlVentilation_Mode.c_manual",
        "Tunnel_Traffictube2_EmergencyCabinetA_Firehose.u_off",
        "Tunnel_Traffictube2_EmergencyCabinetA_Firehose.u_on",
        "Tunnel_Traffictube2_EmergencyCabinetA_HandheldExtinguisher.u_off",
        "Tunnel_Traffictube2_EmergencyCabinetA_HandheldExtinguisher.u_on",
        "Tunnel_Traffictube2_EmergencyCabinetA_Phone.u_off",
        "Tunnel_Traffictube2_EmergencyCabinetA_Phone.u_on",
        "Tunnel_Traffictube2_EmergencyCabinetA_SensorOpen.u_off",
        "Tunnel_Traffictube2_EmergencyCabinetA_SensorOpen.u_on",
        "Tunnel_Traffictube2_EmergencyCabinetC_HandheldExtinguisher.u_off",
        "Tunnel_Traffictube2_EmergencyCabinetC_HandheldExtinguisher.u_on",
        "Tunnel_Traffictube2_EmergencyCabinetC_Phone.u_off",
        "Tunnel_Traffictube2_EmergencyCabinetC_Phone.u_on",
        "Tunnel_Traffictube2_EmergencyCabinetC_SensorOpen.u_off",
        "Tunnel_Traffictube2_EmergencyCabinetC_SensorOpen.u_on",
        "Tunnel_Traffictube2_EscapeDoor_Broadcast.c_off",
        "Tunnel_Traffictube2_EscapeDoor_Broadcast.c_on",
        "Tunnel_Traffictube2_EscapeDoor_Broadcast.c_suppressed",
        "Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_Button.u_push",
        "Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_Observer.c_cancel",
        "Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_Observer.c_done",
        "Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_Button.u_push",
        "Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_Observer.c_cancel",
        "Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_Observer.c_done",
        "Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_Button.u_push",
        "Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_Observer.c_cancel",
        "Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_Observer.c_done",
        "Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_Button.u_push",
        "Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_Observer.c_cancel",
        "Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_Observer.c_done",
        "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_Button.u_push",
        "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_Observer.c_cancel",
        "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_Observer.c_done",
        "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_Button.u_push",
        "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_Observer.c_cancel",
        "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_Observer.c_done",
        "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_Mode.c_auto",
        "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_Mode.c_manual",
        "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_Button.u_push",
        "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer.c_cancel",
        "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer.c_done",
        "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_Button.u_push",
        "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_Observer.c_cancel",
        "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_Observer.c_done",
        "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_Mode.c_auto",
        "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_Mode.c_manual",
        "Tunnel_Traffictube2_EscapeDoor_RouteIndication.c_off",
        "Tunnel_Traffictube2_EscapeDoor_RouteIndication.c_on",
        "Tunnel_Traffictube2_J32_Mode.c_off",
        "Tunnel_Traffictube2_J32_Mode.c_on",
        "Tunnel_Traffictube2_J32_TimerReleaseSignal.c_on",
        "Tunnel_Traffictube2_J32_TimerReleaseSignal.c_reset",
        "Tunnel_Traffictube2_J32_TimerReleaseSignal.u_timeout",
        "Tunnel_Traffictube2_Lighting.c_0",
        "Tunnel_Traffictube2_Lighting.c_1",
        "Tunnel_Traffictube2_Lighting.c_2",
        "Tunnel_Traffictube2_Lighting.c_3",
        "Tunnel_Traffictube2_Lighting.c_4",
        "Tunnel_Traffictube2_Lighting.c_5",
        "Tunnel_Traffictube2_Lighting.c_6",
        "Tunnel_Traffictube2_Lighting.c_7",
        "Tunnel_Traffictube2_Lighting.c_8",
        "Tunnel_Traffictube2_Lightsensor.u_0",
        "Tunnel_Traffictube2_Lightsensor.u_1",
        "Tunnel_Traffictube2_Lightsensor.u_2",
        "Tunnel_Traffictube2_Lightsensor.u_3",
        "Tunnel_Traffictube2_Lightsensor.u_4",
        "Tunnel_Traffictube2_Lightsensor.u_5",
        "Tunnel_Traffictube2_Lightsensor.u_6",
        "Tunnel_Traffictube2_Lightsensor.u_7",
        "Tunnel_Traffictube2_Lightsensor.u_8",
        "Tunnel_Traffictube2_MatrixsignTrafficlight.c_off",
        "Tunnel_Traffictube2_MatrixsignTrafficlight.c_on",
        "Tunnel_Traffictube2_MatrixsignUnpressed.c_off",
        "Tunnel_Traffictube2_MatrixsignUnpressed.c_on",
        "Tunnel_Traffictube2_ModeTraffictube.c_emergency",
        "Tunnel_Traffictube2_ModeTraffictube.c_evacuation",
        "Tunnel_Traffictube2_ModeTraffictube.c_evacuationEmergency",
        "Tunnel_Traffictube2_ModeTraffictube.c_maintenance",
        "Tunnel_Traffictube2_ModeTraffictube.c_operational",
        "Tunnel_Traffictube2_ModeTraffictube.c_recovery",
        "Tunnel_Traffictube2_ModeTraffictube.c_standby",
        "Tunnel_Traffictube2_ModeTraffictube.c_support",
        "Tunnel_Traffictube2_PopUp_ButtonAccept_Button.u_push",
        "Tunnel_Traffictube2_PopUp_ButtonAccept_Observer.c_cancel",
        "Tunnel_Traffictube2_PopUp_ButtonAccept_Observer.c_done",
        "Tunnel_Traffictube2_PopUp_ButtonReject_Button.u_push",
        "Tunnel_Traffictube2_PopUp_ButtonReject_Observer.c_cancel",
        "Tunnel_Traffictube2_PopUp_ButtonReject_Observer.c_done",
        "Tunnel_Traffictube2_PopUp_Timer.c_on",
        "Tunnel_Traffictube2_PopUp_Timer.c_reset",
        "Tunnel_Traffictube2_PopUp_Timer.u_timeout",
        "Tunnel_Traffictube2_PopUp_Window.c_off",
        "Tunnel_Traffictube2_PopUp_Window.c_on",
        "Tunnel_Traffictube2_Recorder.c_off",
        "Tunnel_Traffictube2_Recorder.c_on",
        "Tunnel_Traffictube2_Smokedetection.u_0",
        "Tunnel_Traffictube2_Smokedetection.u_1",
        "Tunnel_Traffictube2_Smokedetection.u_2",
        "Tunnel_Traffictube2_Smokedetection.u_3",
        "Tunnel_Traffictube2_Smokedetection.u_4",
        "Tunnel_Traffictube2_Smokedetection.u_5",
        "Tunnel_Traffictube2_Smokedetection.u_6",
        "Tunnel_Traffictube2_Smokedetection.u_7",
        "Tunnel_Traffictube2_Smokedetection.u_8",
        "Tunnel_Traffictube2_Standstilldetection.u_off",
        "Tunnel_Traffictube2_Standstilldetection.u_standstill",
        "Tunnel_Traffictube2_Standstilldetection.u_wrongway",
        "Tunnel_Traffictube2_SwitchTimerAudio.c_off",
        "Tunnel_Traffictube2_SwitchTimerAudio.c_on",
        "Tunnel_Traffictube2_SwitchTimerAudio.u_timeout",
        "Tunnel_Traffictube2_TimerCameraViewEven.c_on",
        "Tunnel_Traffictube2_TimerCameraViewEven.c_reset",
        "Tunnel_Traffictube2_TimerCameraViewEven.u_timeout",
        "Tunnel_Traffictube2_TimerCameraViewUneven.c_on",
        "Tunnel_Traffictube2_TimerCameraViewUneven.c_reset",
        "Tunnel_Traffictube2_TimerCameraViewUneven.u_timeout",
        "Tunnel_Traffictube2_Trafficlight1_Mode.c_flash",
        "Tunnel_Traffictube2_Trafficlight1_Mode.c_off",
        "Tunnel_Traffictube2_Trafficlight1_Mode.c_red",
        "Tunnel_Traffictube2_Trafficlight1_Mode.c_yellow",
        "Tunnel_Traffictube2_Trafficlight1_ReleaseSignal.u_off",
        "Tunnel_Traffictube2_Trafficlight1_ReleaseSignal.u_on",
        "Tunnel_Traffictube2_Trafficlight1_TimerReleaseSignal.c_on",
        "Tunnel_Traffictube2_Trafficlight1_TimerReleaseSignal.c_reset",
        "Tunnel_Traffictube2_Trafficlight1_TimerReleaseSignal.u_timeout",
        "Tunnel_Traffictube2_Trafficlight2_Mode.c_flash",
        "Tunnel_Traffictube2_Trafficlight2_Mode.c_off",
        "Tunnel_Traffictube2_Trafficlight2_Mode.c_red",
        "Tunnel_Traffictube2_Trafficlight2_Mode.c_yellow",
        "Tunnel_Traffictube2_Trafficlight2_ReleaseSignal.u_off",
        "Tunnel_Traffictube2_Trafficlight2_ReleaseSignal.u_on",
        "Tunnel_Traffictube2_Trafficlight2_TimerReleaseSignal.c_on",
        "Tunnel_Traffictube2_Trafficlight2_TimerReleaseSignal.c_reset",
        "Tunnel_Traffictube2_Trafficlight2_TimerReleaseSignal.u_timeout",
        "Tunnel_Traffictube2_Trafficlight3_Mode.c_flash",
        "Tunnel_Traffictube2_Trafficlight3_Mode.c_off",
        "Tunnel_Traffictube2_Trafficlight3_Mode.c_red",
        "Tunnel_Traffictube2_Trafficlight3_Mode.c_yellow",
        "Tunnel_Traffictube2_Trafficlight3_ReleaseSignal.u_off",
        "Tunnel_Traffictube2_Trafficlight3_ReleaseSignal.u_on",
        "Tunnel_Traffictube2_Trafficlight3_TimerReleaseSignal.c_on",
        "Tunnel_Traffictube2_Trafficlight3_TimerReleaseSignal.c_reset",
        "Tunnel_Traffictube2_Trafficlight3_TimerReleaseSignal.u_timeout",
        "Tunnel_Traffictube2_Ventilation.c_0",
        "Tunnel_Traffictube2_Ventilation.c_1",
        "Tunnel_Traffictube2_Ventilation.c_2",
        "Tunnel_Traffictube2_Ventilation.c_3",
        "Tunnel_Traffictube2_Ventilation.c_4",
        "Tunnel_Traffictube2_Ventilation.c_5",
        "Tunnel_Traffictube2_Ventilation.c_6",
        "Tunnel_Traffictube2_Ventilation.c_7",
        "Tunnel_Traffictube2_Ventilation.c_8",
        "Tunnel_Traffictube2_VentilationDirection.c_againstDrivingDirection",
        "Tunnel_Traffictube2_VentilationDirection.c_drivingDirection",
        "Tunnel_Traffictube2_VentilationEntrance.c_0",
        "Tunnel_Traffictube2_VentilationEntrance.c_1",
        "Tunnel_Traffictube2_VentilationEntrance.c_2",
        "Tunnel_Traffictube2_VentilationEntrance.c_3",
        "Tunnel_Traffictube2_VentilationEntrance.c_4",
        "Tunnel_Traffictube2_VentilationEntrance.c_5",
        "Tunnel_Traffictube2_VentilationEntrance.c_6",
        "Tunnel_Traffictube2_VentilationEntrance.c_7",
        "Tunnel_Traffictube2_VentilationEntrance.c_8",
        "Tunnel_u_broadcastBothTubes",
        "Tunnel_u_broadcastCamera1",
        "Tunnel_u_broadcastCamera2",
        "Tunnel_u_broadcastSection1",
        "Tunnel_u_broadcastSection2",
        "Tunnel_u_broadcastStop",
        "Tunnel_u_broadcastTraffictube1",
        "Tunnel_u_broadcastTraffictube2",
        "Tunnel_WatercellarFirehoses_ButtonExtinguish_Button.u_push",
        "Tunnel_WatercellarFirehoses_ButtonExtinguish_Observer.c_cancel",
        "Tunnel_WatercellarFirehoses_ButtonExtinguish_Observer.c_done",
        "Tunnel_WatercellarFirehoses_ButtonGuard_Button.u_push",
        "Tunnel_WatercellarFirehoses_ButtonGuard_Observer.c_cancel",
        "Tunnel_WatercellarFirehoses_ButtonGuard_Observer.c_done",
        "Tunnel_WatercellarFirehoses_Control_ButtonAuto_Button.u_push",
        "Tunnel_WatercellarFirehoses_Control_ButtonAuto_Observer.c_cancel",
        "Tunnel_WatercellarFirehoses_Control_ButtonAuto_Observer.c_done",
        "Tunnel_WatercellarFirehoses_Control_ButtonManual_Button.u_push",
        "Tunnel_WatercellarFirehoses_Control_ButtonManual_Observer.c_cancel",
        "Tunnel_WatercellarFirehoses_Control_ButtonManual_Observer.c_done",
        "Tunnel_WatercellarFirehoses_Control_Mode.c_auto",
        "Tunnel_WatercellarFirehoses_Control_Mode.c_manual",
        "Tunnel_WatercellarFirehoses_Pump.c_off",
        "Tunnel_WatercellarFirehoses_Pump.c_on",
        "Tunnel_WatercellarFirehoses_Regime.c_extinguish",
        "Tunnel_WatercellarFirehoses_Regime.c_guard",
        "Tunnel_WatercellarFirehoses_SensorHigh.u_off",
        "Tunnel_WatercellarFirehoses_SensorHigh.u_on",
        "Tunnel_WatercellarFirehoses_SensorLow.u_off",
        "Tunnel_WatercellarFirehoses_SensorLow.u_on"
    ];


    /** Variable 'time', tracks elapsed time for a session. */
    time;

    /**
     * The frequency in times per second, that the code should
     * be executed (if positive), or execute as fast as possible, that is
     * as many times per second as possible (if negative or zero).
     */
    frequency = 60;

    /**
     * Whether the next execution is the first execution of the session.
     * Used to initialize time-related variables for starting, pausing,
     * resuming or resetting each session.
     */
    first;

    /**
     * Whether the simulation is currently running, and should process
     * user input, or is paused.
     */
    playing;

    /** The start time of the current session. */
    startMilli;

    /**
     * The targeted end time of the current/next cycle, to ensure
     * that the duration of the cycle matches with the configured
     * frequency.
     */
    targetMilli;


    /** Discrete variable "Tunnel_BroadcastButtons1". */
    Tunnel_BroadcastButtons1_;

    /** Discrete variable "Tunnel_BroadcastButtons2". */
    Tunnel_BroadcastButtons2_;

    /** Discrete variable "Tunnel_HeadDrainCellar1_ButtonEmptying_Observer". */
    Tunnel_HeadDrainCellar1_ButtonEmptying_Observer_;

    /** Discrete variable "Tunnel_HeadDrainCellar1_ButtonOff_Observer". */
    Tunnel_HeadDrainCellar1_ButtonOff_Observer_;

    /** Discrete variable "Tunnel_HeadDrainCellar1_ButtonStoring_Observer". */
    Tunnel_HeadDrainCellar1_ButtonStoring_Observer_;

    /** Discrete variable "Tunnel_HeadDrainCellar1_Control_ButtonAuto_Observer". */
    Tunnel_HeadDrainCellar1_Control_ButtonAuto_Observer_;

    /** Discrete variable "Tunnel_HeadDrainCellar1_Control_ButtonManual_Observer". */
    Tunnel_HeadDrainCellar1_Control_ButtonManual_Observer_;

    /** Discrete variable "Tunnel_HeadDrainCellar1_Control_Mode". */
    Tunnel_HeadDrainCellar1_Control_Mode_;

    /** Discrete variable "Tunnel_HeadDrainCellar1_Pump1". */
    Tunnel_HeadDrainCellar1_Pump1_;

    /** Discrete variable "Tunnel_HeadDrainCellar1_Pump2". */
    Tunnel_HeadDrainCellar1_Pump2_;

    /** Discrete variable "Tunnel_HeadDrainCellar1_Regime". */
    Tunnel_HeadDrainCellar1_Regime_;

    /** Discrete variable "Tunnel_HeadDrainCellar1_Sensor1". */
    Tunnel_HeadDrainCellar1_Sensor1_;

    /** Discrete variable "Tunnel_HeadDrainCellar1_Sensor2". */
    Tunnel_HeadDrainCellar1_Sensor2_;

    /** Discrete variable "Tunnel_HeadDrainCellar1_Sensor3". */
    Tunnel_HeadDrainCellar1_Sensor3_;

    /** Discrete variable "Tunnel_HeadDrainCellar1_Sensor4". */
    Tunnel_HeadDrainCellar1_Sensor4_;

    /** Discrete variable "Tunnel_HeadDrainCellar1_Sensor5". */
    Tunnel_HeadDrainCellar1_Sensor5_;

    /** Discrete variable "Tunnel_HeadDrainCellar2_ButtonEmptying_Observer". */
    Tunnel_HeadDrainCellar2_ButtonEmptying_Observer_;

    /** Discrete variable "Tunnel_HeadDrainCellar2_ButtonOff_Observer". */
    Tunnel_HeadDrainCellar2_ButtonOff_Observer_;

    /** Discrete variable "Tunnel_HeadDrainCellar2_ButtonStoring_Observer". */
    Tunnel_HeadDrainCellar2_ButtonStoring_Observer_;

    /** Discrete variable "Tunnel_HeadDrainCellar2_Control_ButtonAuto_Observer". */
    Tunnel_HeadDrainCellar2_Control_ButtonAuto_Observer_;

    /** Discrete variable "Tunnel_HeadDrainCellar2_Control_ButtonManual_Observer". */
    Tunnel_HeadDrainCellar2_Control_ButtonManual_Observer_;

    /** Discrete variable "Tunnel_HeadDrainCellar2_Control_Mode". */
    Tunnel_HeadDrainCellar2_Control_Mode_;

    /** Discrete variable "Tunnel_HeadDrainCellar2_Pump1". */
    Tunnel_HeadDrainCellar2_Pump1_;

    /** Discrete variable "Tunnel_HeadDrainCellar2_Pump2". */
    Tunnel_HeadDrainCellar2_Pump2_;

    /** Discrete variable "Tunnel_HeadDrainCellar2_Regime". */
    Tunnel_HeadDrainCellar2_Regime_;

    /** Discrete variable "Tunnel_HeadDrainCellar2_Sensor1". */
    Tunnel_HeadDrainCellar2_Sensor1_;

    /** Discrete variable "Tunnel_HeadDrainCellar2_Sensor2". */
    Tunnel_HeadDrainCellar2_Sensor2_;

    /** Discrete variable "Tunnel_HeadDrainCellar2_Sensor3". */
    Tunnel_HeadDrainCellar2_Sensor3_;

    /** Discrete variable "Tunnel_HeadDrainCellar2_Sensor4". */
    Tunnel_HeadDrainCellar2_Sensor4_;

    /** Discrete variable "Tunnel_HeadDrainCellar2_Sensor5". */
    Tunnel_HeadDrainCellar2_Sensor5_;

    /** Discrete variable "Tunnel_MiddleDrainCellar_ButtonEmptying_Observer". */
    Tunnel_MiddleDrainCellar_ButtonEmptying_Observer_;

    /** Discrete variable "Tunnel_MiddleDrainCellar_ButtonOff_Observer". */
    Tunnel_MiddleDrainCellar_ButtonOff_Observer_;

    /** Discrete variable "Tunnel_MiddleDrainCellar_ButtonStoring_Observer". */
    Tunnel_MiddleDrainCellar_ButtonStoring_Observer_;

    /** Discrete variable "Tunnel_MiddleDrainCellar_Control_ButtonAuto_Observer". */
    Tunnel_MiddleDrainCellar_Control_ButtonAuto_Observer_;

    /** Discrete variable "Tunnel_MiddleDrainCellar_Control_ButtonManual_Observer". */
    Tunnel_MiddleDrainCellar_Control_ButtonManual_Observer_;

    /** Discrete variable "Tunnel_MiddleDrainCellar_Control_Mode". */
    Tunnel_MiddleDrainCellar_Control_Mode_;

    /** Discrete variable "Tunnel_MiddleDrainCellar_Pump1". */
    Tunnel_MiddleDrainCellar_Pump1_;

    /** Discrete variable "Tunnel_MiddleDrainCellar_Pump2". */
    Tunnel_MiddleDrainCellar_Pump2_;

    /** Discrete variable "Tunnel_MiddleDrainCellar_PumpDirection". */
    Tunnel_MiddleDrainCellar_PumpDirection_;

    /** Discrete variable "Tunnel_MiddleDrainCellar_Regime". */
    Tunnel_MiddleDrainCellar_Regime_;

    /** Discrete variable "Tunnel_MiddleDrainCellar_Sensor1". */
    Tunnel_MiddleDrainCellar_Sensor1_;

    /** Discrete variable "Tunnel_MiddleDrainCellar_Sensor2". */
    Tunnel_MiddleDrainCellar_Sensor2_;

    /** Discrete variable "Tunnel_MiddleDrainCellar_Sensor3". */
    Tunnel_MiddleDrainCellar_Sensor3_;

    /** Discrete variable "Tunnel_MiddleDrainCellar_Sensor4". */
    Tunnel_MiddleDrainCellar_Sensor4_;

    /** Discrete variable "Tunnel_MiddleDrainCellar_Sensor5". */
    Tunnel_MiddleDrainCellar_Sensor5_;

    /** Discrete variable "Tunnel_MiddleTunnelChannel_Broadcast". */
    Tunnel_MiddleTunnelChannel_Broadcast_;

    /** Discrete variable "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_Observer". */
    Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_Observer_;

    /** Discrete variable "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_Observer". */
    Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_Observer_;

    /** Discrete variable "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_Observer". */
    Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_Observer_;

    /** Discrete variable "Tunnel_MiddleTunnelChannel_ButtonLightingOff_Observer". */
    Tunnel_MiddleTunnelChannel_ButtonLightingOff_Observer_;

    /** Discrete variable "Tunnel_MiddleTunnelChannel_ButtonLightingOn_Observer". */
    Tunnel_MiddleTunnelChannel_ButtonLightingOn_Observer_;

    /** Discrete variable "Tunnel_MiddleTunnelChannel_ButtonPressureLeft_Observer". */
    Tunnel_MiddleTunnelChannel_ButtonPressureLeft_Observer_;

    /** Discrete variable "Tunnel_MiddleTunnelChannel_ButtonPressureOff_Observer". */
    Tunnel_MiddleTunnelChannel_ButtonPressureOff_Observer_;

    /** Discrete variable "Tunnel_MiddleTunnelChannel_ButtonPressureRight_Observer". */
    Tunnel_MiddleTunnelChannel_ButtonPressureRight_Observer_;

    /** Discrete variable "Tunnel_MiddleTunnelChannel_ButtonStartMessage_Observer". */
    Tunnel_MiddleTunnelChannel_ButtonStartMessage_Observer_;

    /** Discrete variable "Tunnel_MiddleTunnelChannel_ButtonStopMessage_Observer". */
    Tunnel_MiddleTunnelChannel_ButtonStopMessage_Observer_;

    /** Discrete variable "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_Observer". */
    Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_Observer_;

    /** Discrete variable "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_Observer". */
    Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_Observer_;

    /** Discrete variable "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_Mode". */
    Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_Mode_;

    /** Discrete variable "Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_Observer". */
    Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_Observer_;

    /** Discrete variable "Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_Observer". */
    Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_Observer_;

    /** Discrete variable "Tunnel_MiddleTunnelChannel_ControlLighting_Mode". */
    Tunnel_MiddleTunnelChannel_ControlLighting_Mode_;

    /** Discrete variable "Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_Observer". */
    Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_Observer_;

    /** Discrete variable "Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_Observer". */
    Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_Observer_;

    /** Discrete variable "Tunnel_MiddleTunnelChannel_ControlPressure_Mode". */
    Tunnel_MiddleTunnelChannel_ControlPressure_Mode_;

    /** Discrete variable "Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication". */
    Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication_;

    /** Discrete variable "Tunnel_MiddleTunnelChannel_Lighting". */
    Tunnel_MiddleTunnelChannel_Lighting_;

    /** Discrete variable "Tunnel_MiddleTunnelChannel_Pressure". */
    Tunnel_MiddleTunnelChannel_Pressure_;

    /** Discrete variable "Tunnel_Traffictube1_AccessBoombarriers". */
    Tunnel_Traffictube1_AccessBoombarriers_;

    /** Discrete variable "Tunnel_Traffictube1_AccessTrafficlights". */
    Tunnel_Traffictube1_AccessTrafficlights_;

    /** Discrete variable "Tunnel_Traffictube1_Boombarrier1_ActuatorDown". */
    Tunnel_Traffictube1_Boombarrier1_ActuatorDown_;

    /** Discrete variable "Tunnel_Traffictube1_Boombarrier1_ActuatorUp". */
    Tunnel_Traffictube1_Boombarrier1_ActuatorUp_;

    /** Discrete variable "Tunnel_Traffictube1_Boombarrier1_ObstacleDetection". */
    Tunnel_Traffictube1_Boombarrier1_ObstacleDetection_;

    /** Discrete variable "Tunnel_Traffictube1_Boombarrier1_SensorClosed". */
    Tunnel_Traffictube1_Boombarrier1_SensorClosed_;

    /** Discrete variable "Tunnel_Traffictube1_Boombarrier1_SensorOpen". */
    Tunnel_Traffictube1_Boombarrier1_SensorOpen_;

    /** Discrete variable "Tunnel_Traffictube1_Boombarrier2_ActuatorDown". */
    Tunnel_Traffictube1_Boombarrier2_ActuatorDown_;

    /** Discrete variable "Tunnel_Traffictube1_Boombarrier2_ActuatorUp". */
    Tunnel_Traffictube1_Boombarrier2_ActuatorUp_;

    /** Discrete variable "Tunnel_Traffictube1_Boombarrier2_ObstacleDetection". */
    Tunnel_Traffictube1_Boombarrier2_ObstacleDetection_;

    /** Discrete variable "Tunnel_Traffictube1_Boombarrier2_SensorClosed". */
    Tunnel_Traffictube1_Boombarrier2_SensorClosed_;

    /** Discrete variable "Tunnel_Traffictube1_Boombarrier2_SensorOpen". */
    Tunnel_Traffictube1_Boombarrier2_SensorOpen_;

    /** Discrete variable "Tunnel_Traffictube1_Broadcast". */
    Tunnel_Traffictube1_Broadcast_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonCamera1_Observer". */
    Tunnel_Traffictube1_ButtonCamera1_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonCamera2_Observer". */
    Tunnel_Traffictube1_ButtonCamera2_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonCamera3_Observer". */
    Tunnel_Traffictube1_ButtonCamera3_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonCamera4_Observer". */
    Tunnel_Traffictube1_ButtonCamera4_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonCamera5_Observer". */
    Tunnel_Traffictube1_ButtonCamera5_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonCamera6_Observer". */
    Tunnel_Traffictube1_ButtonCamera6_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonCameraStopView_Observer". */
    Tunnel_Traffictube1_ButtonCameraStopView_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonCameraView_Observer". */
    Tunnel_Traffictube1_ButtonCameraView_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonCloseBoombarriers_Observer". */
    Tunnel_Traffictube1_ButtonCloseBoombarriers_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_Observer". */
    Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonEmergency_Observer". */
    Tunnel_Traffictube1_ButtonEmergency_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonEvacuation_Observer". */
    Tunnel_Traffictube1_ButtonEvacuation_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonFlashTrafficlights_Observer". */
    Tunnel_Traffictube1_ButtonFlashTrafficlights_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonLighting0_Observer". */
    Tunnel_Traffictube1_ButtonLighting0_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonLighting1_Observer". */
    Tunnel_Traffictube1_ButtonLighting1_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonLighting2_Observer". */
    Tunnel_Traffictube1_ButtonLighting2_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonLighting3_Observer". */
    Tunnel_Traffictube1_ButtonLighting3_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonLighting4_Observer". */
    Tunnel_Traffictube1_ButtonLighting4_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonLighting5_Observer". */
    Tunnel_Traffictube1_ButtonLighting5_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonLighting6_Observer". */
    Tunnel_Traffictube1_ButtonLighting6_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonLighting7_Observer". */
    Tunnel_Traffictube1_ButtonLighting7_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonLighting8_Observer". */
    Tunnel_Traffictube1_ButtonLighting8_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonLive_Observer". */
    Tunnel_Traffictube1_ButtonLive_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonMaintenance_Observer". */
    Tunnel_Traffictube1_ButtonMaintenance_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonMessage_Observer". */
    Tunnel_Traffictube1_ButtonMessage_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonOffTrafficlights_Observer". */
    Tunnel_Traffictube1_ButtonOffTrafficlights_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonOpenBoombarriers_Observer". */
    Tunnel_Traffictube1_ButtonOpenBoombarriers_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonOperational_Observer". */
    Tunnel_Traffictube1_ButtonOperational_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_Observer". */
    Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_Observer". */
    Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_Observer". */
    Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_Observer". */
    Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonRecovery_Observer". */
    Tunnel_Traffictube1_ButtonRecovery_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonRedTrafficlights_Observer". */
    Tunnel_Traffictube1_ButtonRedTrafficlights_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonStopBoombarriers_Observer". */
    Tunnel_Traffictube1_ButtonStopBoombarriers_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonVentilation0_Observer". */
    Tunnel_Traffictube1_ButtonVentilation0_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonVentilation1_Observer". */
    Tunnel_Traffictube1_ButtonVentilation1_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonVentilation2_Observer". */
    Tunnel_Traffictube1_ButtonVentilation2_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonVentilation3_Observer". */
    Tunnel_Traffictube1_ButtonVentilation3_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonVentilation4_Observer". */
    Tunnel_Traffictube1_ButtonVentilation4_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonVentilation5_Observer". */
    Tunnel_Traffictube1_ButtonVentilation5_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonVentilation6_Observer". */
    Tunnel_Traffictube1_ButtonVentilation6_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonVentilation7_Observer". */
    Tunnel_Traffictube1_ButtonVentilation7_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonVentilation8_Observer". */
    Tunnel_Traffictube1_ButtonVentilation8_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_Observer". */
    Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ButtonVentilationDrivingDirection_Observer". */
    Tunnel_Traffictube1_ButtonVentilationDrivingDirection_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_CCTV". */
    Tunnel_Traffictube1_CCTV_;

    /** Discrete variable "Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_Observer". */
    Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_Observer". */
    Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ControlBoombarriers_Mode". */
    Tunnel_Traffictube1_ControlBoombarriers_Mode_;

    /** Discrete variable "Tunnel_Traffictube1_ControlLighting_ButtonAuto_Observer". */
    Tunnel_Traffictube1_ControlLighting_ButtonAuto_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ControlLighting_ButtonManual_Observer". */
    Tunnel_Traffictube1_ControlLighting_ButtonManual_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ControlLighting_Mode". */
    Tunnel_Traffictube1_ControlLighting_Mode_;

    /** Discrete variable "Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_Observer". */
    Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_Observer". */
    Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ControlTrafficlights_Mode". */
    Tunnel_Traffictube1_ControlTrafficlights_Mode_;

    /** Discrete variable "Tunnel_Traffictube1_ControlVentilation_ButtonAuto_Observer". */
    Tunnel_Traffictube1_ControlVentilation_ButtonAuto_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ControlVentilation_ButtonManual_Observer". */
    Tunnel_Traffictube1_ControlVentilation_ButtonManual_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_ControlVentilation_Mode". */
    Tunnel_Traffictube1_ControlVentilation_Mode_;

    /** Discrete variable "Tunnel_Traffictube1_EmergencyCabinetA_Firehose". */
    Tunnel_Traffictube1_EmergencyCabinetA_Firehose_;

    /** Discrete variable "Tunnel_Traffictube1_EmergencyCabinetA_HandheldExtinguisher". */
    Tunnel_Traffictube1_EmergencyCabinetA_HandheldExtinguisher_;

    /** Discrete variable "Tunnel_Traffictube1_EmergencyCabinetA_Phone". */
    Tunnel_Traffictube1_EmergencyCabinetA_Phone_;

    /** Discrete variable "Tunnel_Traffictube1_EmergencyCabinetA_SensorOpen". */
    Tunnel_Traffictube1_EmergencyCabinetA_SensorOpen_;

    /** Discrete variable "Tunnel_Traffictube1_EmergencyCabinetC_HandheldExtinguisher". */
    Tunnel_Traffictube1_EmergencyCabinetC_HandheldExtinguisher_;

    /** Discrete variable "Tunnel_Traffictube1_EmergencyCabinetC_Phone". */
    Tunnel_Traffictube1_EmergencyCabinetC_Phone_;

    /** Discrete variable "Tunnel_Traffictube1_EmergencyCabinetC_SensorOpen". */
    Tunnel_Traffictube1_EmergencyCabinetC_SensorOpen_;

    /** Discrete variable "Tunnel_Traffictube1_EscapeDoor_Broadcast". */
    Tunnel_Traffictube1_EscapeDoor_Broadcast_;

    /** Discrete variable "Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_Observer". */
    Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_Observer". */
    Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_Observer". */
    Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_Observer". */
    Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_Observer". */
    Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_Observer". */
    Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_Mode". */
    Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_Mode_;

    /** Discrete variable "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer". */
    Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_Observer". */
    Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_Mode". */
    Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_Mode_;

    /** Discrete variable "Tunnel_Traffictube1_EscapeDoor_RouteIndication". */
    Tunnel_Traffictube1_EscapeDoor_RouteIndication_;

    /** Discrete variable "Tunnel_Traffictube1_J32_Mode". */
    Tunnel_Traffictube1_J32_Mode_;

    /** Discrete variable "Tunnel_Traffictube1_J32_TimerReleaseSignal". */
    Tunnel_Traffictube1_J32_TimerReleaseSignal_;

    /** Discrete variable "Tunnel_Traffictube1_Lighting.setting". */
    Tunnel_Traffictube1_Lighting_setting_;

    /** Discrete variable "Tunnel_Traffictube1_Lightsensor.setting". */
    Tunnel_Traffictube1_Lightsensor_setting_;

    /** Discrete variable "Tunnel_Traffictube1_MatrixsignTrafficlight". */
    Tunnel_Traffictube1_MatrixsignTrafficlight_;

    /** Discrete variable "Tunnel_Traffictube1_MatrixsignUnpressed". */
    Tunnel_Traffictube1_MatrixsignUnpressed_;

    /** Discrete variable "Tunnel_Traffictube1_ModeTraffictube". */
    Tunnel_Traffictube1_ModeTraffictube_;

    /** Discrete variable "Tunnel_Traffictube1_PopUp_ButtonAccept_Observer". */
    Tunnel_Traffictube1_PopUp_ButtonAccept_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_PopUp_ButtonReject_Observer". */
    Tunnel_Traffictube1_PopUp_ButtonReject_Observer_;

    /** Discrete variable "Tunnel_Traffictube1_PopUp_Timer". */
    Tunnel_Traffictube1_PopUp_Timer_;

    /** Discrete variable "Tunnel_Traffictube1_PopUp_Window". */
    Tunnel_Traffictube1_PopUp_Window_;

    /** Discrete variable "Tunnel_Traffictube1_Recorder". */
    Tunnel_Traffictube1_Recorder_;

    /** Discrete variable "Tunnel_Traffictube1_Smokedetection.setting". */
    Tunnel_Traffictube1_Smokedetection_setting_;

    /** Discrete variable "Tunnel_Traffictube1_Standstilldetection". */
    Tunnel_Traffictube1_Standstilldetection_;

    /** Discrete variable "Tunnel_Traffictube1_SwitchTimerAudio". */
    Tunnel_Traffictube1_SwitchTimerAudio_;

    /** Discrete variable "Tunnel_Traffictube1_TimerCameraViewEven". */
    Tunnel_Traffictube1_TimerCameraViewEven_;

    /** Discrete variable "Tunnel_Traffictube1_TimerCameraViewUneven". */
    Tunnel_Traffictube1_TimerCameraViewUneven_;

    /** Discrete variable "Tunnel_Traffictube1_Trafficlight1_Mode". */
    Tunnel_Traffictube1_Trafficlight1_Mode_;

    /** Discrete variable "Tunnel_Traffictube1_Trafficlight1_ReleaseSignal". */
    Tunnel_Traffictube1_Trafficlight1_ReleaseSignal_;

    /** Discrete variable "Tunnel_Traffictube1_Trafficlight1_TimerReleaseSignal". */
    Tunnel_Traffictube1_Trafficlight1_TimerReleaseSignal_;

    /** Discrete variable "Tunnel_Traffictube1_Trafficlight2_Mode". */
    Tunnel_Traffictube1_Trafficlight2_Mode_;

    /** Discrete variable "Tunnel_Traffictube1_Trafficlight2_ReleaseSignal". */
    Tunnel_Traffictube1_Trafficlight2_ReleaseSignal_;

    /** Discrete variable "Tunnel_Traffictube1_Trafficlight2_TimerReleaseSignal". */
    Tunnel_Traffictube1_Trafficlight2_TimerReleaseSignal_;

    /** Discrete variable "Tunnel_Traffictube1_Trafficlight3_Mode". */
    Tunnel_Traffictube1_Trafficlight3_Mode_;

    /** Discrete variable "Tunnel_Traffictube1_Trafficlight3_ReleaseSignal". */
    Tunnel_Traffictube1_Trafficlight3_ReleaseSignal_;

    /** Discrete variable "Tunnel_Traffictube1_Trafficlight3_TimerReleaseSignal". */
    Tunnel_Traffictube1_Trafficlight3_TimerReleaseSignal_;

    /** Discrete variable "Tunnel_Traffictube1_Ventilation.setting". */
    Tunnel_Traffictube1_Ventilation_setting_;

    /** Discrete variable "Tunnel_Traffictube1_VentilationDirection". */
    Tunnel_Traffictube1_VentilationDirection_;

    /** Discrete variable "Tunnel_Traffictube1_VentilationEntrance.setting". */
    Tunnel_Traffictube1_VentilationEntrance_setting_;

    /** Discrete variable "Tunnel_Traffictube2_AccessBoombarriers". */
    Tunnel_Traffictube2_AccessBoombarriers_;

    /** Discrete variable "Tunnel_Traffictube2_AccessTrafficlights". */
    Tunnel_Traffictube2_AccessTrafficlights_;

    /** Discrete variable "Tunnel_Traffictube2_Boombarrier1_ActuatorDown". */
    Tunnel_Traffictube2_Boombarrier1_ActuatorDown_;

    /** Discrete variable "Tunnel_Traffictube2_Boombarrier1_ActuatorUp". */
    Tunnel_Traffictube2_Boombarrier1_ActuatorUp_;

    /** Discrete variable "Tunnel_Traffictube2_Boombarrier1_ObstacleDetection". */
    Tunnel_Traffictube2_Boombarrier1_ObstacleDetection_;

    /** Discrete variable "Tunnel_Traffictube2_Boombarrier1_SensorClosed". */
    Tunnel_Traffictube2_Boombarrier1_SensorClosed_;

    /** Discrete variable "Tunnel_Traffictube2_Boombarrier1_SensorOpen". */
    Tunnel_Traffictube2_Boombarrier1_SensorOpen_;

    /** Discrete variable "Tunnel_Traffictube2_Boombarrier2_ActuatorDown". */
    Tunnel_Traffictube2_Boombarrier2_ActuatorDown_;

    /** Discrete variable "Tunnel_Traffictube2_Boombarrier2_ActuatorUp". */
    Tunnel_Traffictube2_Boombarrier2_ActuatorUp_;

    /** Discrete variable "Tunnel_Traffictube2_Boombarrier2_ObstacleDetection". */
    Tunnel_Traffictube2_Boombarrier2_ObstacleDetection_;

    /** Discrete variable "Tunnel_Traffictube2_Boombarrier2_SensorClosed". */
    Tunnel_Traffictube2_Boombarrier2_SensorClosed_;

    /** Discrete variable "Tunnel_Traffictube2_Boombarrier2_SensorOpen". */
    Tunnel_Traffictube2_Boombarrier2_SensorOpen_;

    /** Discrete variable "Tunnel_Traffictube2_Broadcast". */
    Tunnel_Traffictube2_Broadcast_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonCamera1_Observer". */
    Tunnel_Traffictube2_ButtonCamera1_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonCamera2_Observer". */
    Tunnel_Traffictube2_ButtonCamera2_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonCamera3_Observer". */
    Tunnel_Traffictube2_ButtonCamera3_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonCamera4_Observer". */
    Tunnel_Traffictube2_ButtonCamera4_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonCamera5_Observer". */
    Tunnel_Traffictube2_ButtonCamera5_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonCamera6_Observer". */
    Tunnel_Traffictube2_ButtonCamera6_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonCameraStopView_Observer". */
    Tunnel_Traffictube2_ButtonCameraStopView_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonCameraView_Observer". */
    Tunnel_Traffictube2_ButtonCameraView_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonCloseBoombarriers_Observer". */
    Tunnel_Traffictube2_ButtonCloseBoombarriers_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_Observer". */
    Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonEmergency_Observer". */
    Tunnel_Traffictube2_ButtonEmergency_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonEvacuation_Observer". */
    Tunnel_Traffictube2_ButtonEvacuation_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonFlashTrafficlights_Observer". */
    Tunnel_Traffictube2_ButtonFlashTrafficlights_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonLighting0_Observer". */
    Tunnel_Traffictube2_ButtonLighting0_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonLighting1_Observer". */
    Tunnel_Traffictube2_ButtonLighting1_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonLighting2_Observer". */
    Tunnel_Traffictube2_ButtonLighting2_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonLighting3_Observer". */
    Tunnel_Traffictube2_ButtonLighting3_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonLighting4_Observer". */
    Tunnel_Traffictube2_ButtonLighting4_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonLighting5_Observer". */
    Tunnel_Traffictube2_ButtonLighting5_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonLighting6_Observer". */
    Tunnel_Traffictube2_ButtonLighting6_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonLighting7_Observer". */
    Tunnel_Traffictube2_ButtonLighting7_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonLighting8_Observer". */
    Tunnel_Traffictube2_ButtonLighting8_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonLive_Observer". */
    Tunnel_Traffictube2_ButtonLive_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonMaintenance_Observer". */
    Tunnel_Traffictube2_ButtonMaintenance_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonMessage_Observer". */
    Tunnel_Traffictube2_ButtonMessage_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonOffTrafficlights_Observer". */
    Tunnel_Traffictube2_ButtonOffTrafficlights_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonOpenBoombarriers_Observer". */
    Tunnel_Traffictube2_ButtonOpenBoombarriers_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonOperational_Observer". */
    Tunnel_Traffictube2_ButtonOperational_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_Observer". */
    Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_Observer". */
    Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_Observer". */
    Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_Observer". */
    Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonRecovery_Observer". */
    Tunnel_Traffictube2_ButtonRecovery_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonRedTrafficlights_Observer". */
    Tunnel_Traffictube2_ButtonRedTrafficlights_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonStopBoombarriers_Observer". */
    Tunnel_Traffictube2_ButtonStopBoombarriers_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonVentilation0_Observer". */
    Tunnel_Traffictube2_ButtonVentilation0_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonVentilation1_Observer". */
    Tunnel_Traffictube2_ButtonVentilation1_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonVentilation2_Observer". */
    Tunnel_Traffictube2_ButtonVentilation2_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonVentilation3_Observer". */
    Tunnel_Traffictube2_ButtonVentilation3_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonVentilation4_Observer". */
    Tunnel_Traffictube2_ButtonVentilation4_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonVentilation5_Observer". */
    Tunnel_Traffictube2_ButtonVentilation5_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonVentilation6_Observer". */
    Tunnel_Traffictube2_ButtonVentilation6_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonVentilation7_Observer". */
    Tunnel_Traffictube2_ButtonVentilation7_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonVentilation8_Observer". */
    Tunnel_Traffictube2_ButtonVentilation8_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_Observer". */
    Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ButtonVentilationDrivingDirection_Observer". */
    Tunnel_Traffictube2_ButtonVentilationDrivingDirection_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_CCTV". */
    Tunnel_Traffictube2_CCTV_;

    /** Discrete variable "Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_Observer". */
    Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_Observer". */
    Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ControlBoombarriers_Mode". */
    Tunnel_Traffictube2_ControlBoombarriers_Mode_;

    /** Discrete variable "Tunnel_Traffictube2_ControlLighting_ButtonAuto_Observer". */
    Tunnel_Traffictube2_ControlLighting_ButtonAuto_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ControlLighting_ButtonManual_Observer". */
    Tunnel_Traffictube2_ControlLighting_ButtonManual_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ControlLighting_Mode". */
    Tunnel_Traffictube2_ControlLighting_Mode_;

    /** Discrete variable "Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_Observer". */
    Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_Observer". */
    Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ControlTrafficlights_Mode". */
    Tunnel_Traffictube2_ControlTrafficlights_Mode_;

    /** Discrete variable "Tunnel_Traffictube2_ControlVentilation_ButtonAuto_Observer". */
    Tunnel_Traffictube2_ControlVentilation_ButtonAuto_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ControlVentilation_ButtonManual_Observer". */
    Tunnel_Traffictube2_ControlVentilation_ButtonManual_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_ControlVentilation_Mode". */
    Tunnel_Traffictube2_ControlVentilation_Mode_;

    /** Discrete variable "Tunnel_Traffictube2_EmergencyCabinetA_Firehose". */
    Tunnel_Traffictube2_EmergencyCabinetA_Firehose_;

    /** Discrete variable "Tunnel_Traffictube2_EmergencyCabinetA_HandheldExtinguisher". */
    Tunnel_Traffictube2_EmergencyCabinetA_HandheldExtinguisher_;

    /** Discrete variable "Tunnel_Traffictube2_EmergencyCabinetA_Phone". */
    Tunnel_Traffictube2_EmergencyCabinetA_Phone_;

    /** Discrete variable "Tunnel_Traffictube2_EmergencyCabinetA_SensorOpen". */
    Tunnel_Traffictube2_EmergencyCabinetA_SensorOpen_;

    /** Discrete variable "Tunnel_Traffictube2_EmergencyCabinetC_HandheldExtinguisher". */
    Tunnel_Traffictube2_EmergencyCabinetC_HandheldExtinguisher_;

    /** Discrete variable "Tunnel_Traffictube2_EmergencyCabinetC_Phone". */
    Tunnel_Traffictube2_EmergencyCabinetC_Phone_;

    /** Discrete variable "Tunnel_Traffictube2_EmergencyCabinetC_SensorOpen". */
    Tunnel_Traffictube2_EmergencyCabinetC_SensorOpen_;

    /** Discrete variable "Tunnel_Traffictube2_EscapeDoor_Broadcast". */
    Tunnel_Traffictube2_EscapeDoor_Broadcast_;

    /** Discrete variable "Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_Observer". */
    Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_Observer". */
    Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_Observer". */
    Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_Observer". */
    Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_Observer". */
    Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_Observer". */
    Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_Mode". */
    Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_Mode_;

    /** Discrete variable "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer". */
    Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_Observer". */
    Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_Mode". */
    Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_Mode_;

    /** Discrete variable "Tunnel_Traffictube2_EscapeDoor_RouteIndication". */
    Tunnel_Traffictube2_EscapeDoor_RouteIndication_;

    /** Discrete variable "Tunnel_Traffictube2_J32_Mode". */
    Tunnel_Traffictube2_J32_Mode_;

    /** Discrete variable "Tunnel_Traffictube2_J32_TimerReleaseSignal". */
    Tunnel_Traffictube2_J32_TimerReleaseSignal_;

    /** Discrete variable "Tunnel_Traffictube2_Lighting.setting". */
    Tunnel_Traffictube2_Lighting_setting_;

    /** Discrete variable "Tunnel_Traffictube2_Lightsensor.setting". */
    Tunnel_Traffictube2_Lightsensor_setting_;

    /** Discrete variable "Tunnel_Traffictube2_MatrixsignTrafficlight". */
    Tunnel_Traffictube2_MatrixsignTrafficlight_;

    /** Discrete variable "Tunnel_Traffictube2_MatrixsignUnpressed". */
    Tunnel_Traffictube2_MatrixsignUnpressed_;

    /** Discrete variable "Tunnel_Traffictube2_ModeTraffictube". */
    Tunnel_Traffictube2_ModeTraffictube_;

    /** Discrete variable "Tunnel_Traffictube2_PopUp_ButtonAccept_Observer". */
    Tunnel_Traffictube2_PopUp_ButtonAccept_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_PopUp_ButtonReject_Observer". */
    Tunnel_Traffictube2_PopUp_ButtonReject_Observer_;

    /** Discrete variable "Tunnel_Traffictube2_PopUp_Timer". */
    Tunnel_Traffictube2_PopUp_Timer_;

    /** Discrete variable "Tunnel_Traffictube2_PopUp_Window". */
    Tunnel_Traffictube2_PopUp_Window_;

    /** Discrete variable "Tunnel_Traffictube2_Recorder". */
    Tunnel_Traffictube2_Recorder_;

    /** Discrete variable "Tunnel_Traffictube2_Smokedetection.setting". */
    Tunnel_Traffictube2_Smokedetection_setting_;

    /** Discrete variable "Tunnel_Traffictube2_Standstilldetection". */
    Tunnel_Traffictube2_Standstilldetection_;

    /** Discrete variable "Tunnel_Traffictube2_SwitchTimerAudio". */
    Tunnel_Traffictube2_SwitchTimerAudio_;

    /** Discrete variable "Tunnel_Traffictube2_TimerCameraViewEven". */
    Tunnel_Traffictube2_TimerCameraViewEven_;

    /** Discrete variable "Tunnel_Traffictube2_TimerCameraViewUneven". */
    Tunnel_Traffictube2_TimerCameraViewUneven_;

    /** Discrete variable "Tunnel_Traffictube2_Trafficlight1_Mode". */
    Tunnel_Traffictube2_Trafficlight1_Mode_;

    /** Discrete variable "Tunnel_Traffictube2_Trafficlight1_ReleaseSignal". */
    Tunnel_Traffictube2_Trafficlight1_ReleaseSignal_;

    /** Discrete variable "Tunnel_Traffictube2_Trafficlight1_TimerReleaseSignal". */
    Tunnel_Traffictube2_Trafficlight1_TimerReleaseSignal_;

    /** Discrete variable "Tunnel_Traffictube2_Trafficlight2_Mode". */
    Tunnel_Traffictube2_Trafficlight2_Mode_;

    /** Discrete variable "Tunnel_Traffictube2_Trafficlight2_ReleaseSignal". */
    Tunnel_Traffictube2_Trafficlight2_ReleaseSignal_;

    /** Discrete variable "Tunnel_Traffictube2_Trafficlight2_TimerReleaseSignal". */
    Tunnel_Traffictube2_Trafficlight2_TimerReleaseSignal_;

    /** Discrete variable "Tunnel_Traffictube2_Trafficlight3_Mode". */
    Tunnel_Traffictube2_Trafficlight3_Mode_;

    /** Discrete variable "Tunnel_Traffictube2_Trafficlight3_ReleaseSignal". */
    Tunnel_Traffictube2_Trafficlight3_ReleaseSignal_;

    /** Discrete variable "Tunnel_Traffictube2_Trafficlight3_TimerReleaseSignal". */
    Tunnel_Traffictube2_Trafficlight3_TimerReleaseSignal_;

    /** Discrete variable "Tunnel_Traffictube2_Ventilation.setting". */
    Tunnel_Traffictube2_Ventilation_setting_;

    /** Discrete variable "Tunnel_Traffictube2_VentilationDirection". */
    Tunnel_Traffictube2_VentilationDirection_;

    /** Discrete variable "Tunnel_Traffictube2_VentilationEntrance.setting". */
    Tunnel_Traffictube2_VentilationEntrance_setting_;

    /** Discrete variable "Tunnel_WatercellarFirehoses_ButtonExtinguish_Observer". */
    Tunnel_WatercellarFirehoses_ButtonExtinguish_Observer_;

    /** Discrete variable "Tunnel_WatercellarFirehoses_ButtonGuard_Observer". */
    Tunnel_WatercellarFirehoses_ButtonGuard_Observer_;

    /** Discrete variable "Tunnel_WatercellarFirehoses_Control_ButtonAuto_Observer". */
    Tunnel_WatercellarFirehoses_Control_ButtonAuto_Observer_;

    /** Discrete variable "Tunnel_WatercellarFirehoses_Control_ButtonManual_Observer". */
    Tunnel_WatercellarFirehoses_Control_ButtonManual_Observer_;

    /** Discrete variable "Tunnel_WatercellarFirehoses_Control_Mode". */
    Tunnel_WatercellarFirehoses_Control_Mode_;

    /** Discrete variable "Tunnel_WatercellarFirehoses_Pump". */
    Tunnel_WatercellarFirehoses_Pump_;

    /** Discrete variable "Tunnel_WatercellarFirehoses_Regime". */
    Tunnel_WatercellarFirehoses_Regime_;

    /** Discrete variable "Tunnel_WatercellarFirehoses_SensorHigh". */
    Tunnel_WatercellarFirehoses_SensorHigh_;

    /** Discrete variable "Tunnel_WatercellarFirehoses_SensorLow". */
    Tunnel_WatercellarFirehoses_SensorLow_;


    /** SVG output elements. */


    /**
     * SVG input queue with functions for handling clicked SVG
     * input elements, from first clicked at the head of the array
     * to last clicked at the tail of the array.
     */
    svgInQueue;

    /**
     * The SVG input id corresponding to the SVG input element that
     * was clicked. Is 'null' if no SVG input element was clicked so
     * far, or all clicks have already been processed.
     */
    svgInId;

    /**
     * The 0-based index of the event corresponding to the SVG input
     * element that was clicked. Is '-1' if no SVG input element was
     * clicked so far, or all clicks have already been processed.
     */
    svgInEvent;

    /** SVG input click event handlers. */


    /** SVG input event setters. */


    /** Starts the simulation. */
    start() {
        if (!this.playing) {
            this.playing = true;
            this.exec();
        }
    }

    /** Stops the simulation. */
    stop() {
        if (this.playing) {
            this.playing = false;
        }
    }

    /** Resets the object to its initial state. */
    reset() {
        this.stop();
        this.firstExec = true;
        this.time = 0.0;
        this.first = true;
        this.timePaused = null;
        this.initState();
        this.initUI();
        this.updateUI();
    }

    /**
     * Execute the code once. Inputs are read, transitions are executed until
     * none are possible, outputs are written, etc.
     *
     * @param newTime The time in seconds, since the start of the first
     *      execution.
     * @throws specException In case of a runtime error caused by code
     *      generated from the CIF model.
     */
    execOnce(newTime) {
        // Pre execution notification.
        this.preExec();

        // Update values of input variables.
        this.updateInputs();

        // Initialize the state.
        if (this.firstExec) {
            this.initState();
        }

        // Calculate time delta.
        var delta = newTime - this.time;

        // Update values of continuous variables.
        if (!this.firstExec) {
                        // No continuous variables, except variable 'time'.
        }

        // Update time.
        this.time = newTime;

        // Apply print declarations.
        if (this.firstExec) {
            // For 'initial' transition.
            if (this.doInfoPrintOutput) this.printOutput(-3, true);
            if (this.doInfoPrintOutput) this.printOutput(-3, false);
            if (this.doStateOutput) spec.log('Initial state: ' + spec.getStateText());
            if (this.doStateOutput || this.doTransitionOutput) this.log('');

        } else {
            // For 'post' of time transition.
            if (this.doInfoPrintOutput) this.printOutput(-2, false);
        }

        // Execute SVG input edges as long as they are possible.
        while (true) {
            // Handle next element from SVG input queue, if not already already processing one.
            if (this.svgInEvent == -1 && this.svgInQueue.length > 0) {
                var func = this.svgInQueue.shift(); // Remove head of the queue.
                func(); // Call function, to set the event to allow.
            }

            // Try to execute an edge for each event.
            var edgeExecuted = false;


            // Stop if no edge was executed.
            if (!edgeExecuted) {
                break;
            }
        }

        // Make sure all outstanding SVG input clicks have been processed.
        console.assert(this.svgInEvent == -1);

        // Execute uncontrollable edges as long as they are possible.
        while (true) {
            // Try to execute an edge for each event.
            var edgeExecuted = false;

            // Event "Tunnel_HeadDrainCellar1_ButtonEmptying_Button.u_push".
            edgeExecuted |= this.execEdge0();

            // Event "Tunnel_HeadDrainCellar1_ButtonOff_Button.u_push".
            edgeExecuted |= this.execEdge1();

            // Event "Tunnel_HeadDrainCellar1_ButtonStoring_Button.u_push".
            edgeExecuted |= this.execEdge2();

            // Event "Tunnel_HeadDrainCellar1_Control_ButtonAuto_Button.u_push".
            edgeExecuted |= this.execEdge3();

            // Event "Tunnel_HeadDrainCellar1_Control_ButtonManual_Button.u_push".
            edgeExecuted |= this.execEdge4();

            // Event "Tunnel_HeadDrainCellar1_Sensor1.u_off".
            edgeExecuted |= this.execEdge5();

            // Event "Tunnel_HeadDrainCellar1_Sensor1.u_on".
            edgeExecuted |= this.execEdge6();

            // Event "Tunnel_HeadDrainCellar1_Sensor2.u_off".
            edgeExecuted |= this.execEdge7();

            // Event "Tunnel_HeadDrainCellar1_Sensor2.u_on".
            edgeExecuted |= this.execEdge8();

            // Event "Tunnel_HeadDrainCellar1_Sensor3.u_off".
            edgeExecuted |= this.execEdge9();

            // Event "Tunnel_HeadDrainCellar1_Sensor3.u_on".
            edgeExecuted |= this.execEdge10();

            // Event "Tunnel_HeadDrainCellar1_Sensor4.u_off".
            edgeExecuted |= this.execEdge11();

            // Event "Tunnel_HeadDrainCellar1_Sensor4.u_on".
            edgeExecuted |= this.execEdge12();

            // Event "Tunnel_HeadDrainCellar1_Sensor5.u_off".
            edgeExecuted |= this.execEdge13();

            // Event "Tunnel_HeadDrainCellar1_Sensor5.u_on".
            edgeExecuted |= this.execEdge14();

            // Event "Tunnel_HeadDrainCellar2_ButtonEmptying_Button.u_push".
            edgeExecuted |= this.execEdge15();

            // Event "Tunnel_HeadDrainCellar2_ButtonOff_Button.u_push".
            edgeExecuted |= this.execEdge16();

            // Event "Tunnel_HeadDrainCellar2_ButtonStoring_Button.u_push".
            edgeExecuted |= this.execEdge17();

            // Event "Tunnel_HeadDrainCellar2_Control_ButtonAuto_Button.u_push".
            edgeExecuted |= this.execEdge18();

            // Event "Tunnel_HeadDrainCellar2_Control_ButtonManual_Button.u_push".
            edgeExecuted |= this.execEdge19();

            // Event "Tunnel_HeadDrainCellar2_Sensor1.u_off".
            edgeExecuted |= this.execEdge20();

            // Event "Tunnel_HeadDrainCellar2_Sensor1.u_on".
            edgeExecuted |= this.execEdge21();

            // Event "Tunnel_HeadDrainCellar2_Sensor2.u_off".
            edgeExecuted |= this.execEdge22();

            // Event "Tunnel_HeadDrainCellar2_Sensor2.u_on".
            edgeExecuted |= this.execEdge23();

            // Event "Tunnel_HeadDrainCellar2_Sensor3.u_off".
            edgeExecuted |= this.execEdge24();

            // Event "Tunnel_HeadDrainCellar2_Sensor3.u_on".
            edgeExecuted |= this.execEdge25();

            // Event "Tunnel_HeadDrainCellar2_Sensor4.u_off".
            edgeExecuted |= this.execEdge26();

            // Event "Tunnel_HeadDrainCellar2_Sensor4.u_on".
            edgeExecuted |= this.execEdge27();

            // Event "Tunnel_HeadDrainCellar2_Sensor5.u_off".
            edgeExecuted |= this.execEdge28();

            // Event "Tunnel_HeadDrainCellar2_Sensor5.u_on".
            edgeExecuted |= this.execEdge29();

            // Event "Tunnel_MiddleDrainCellar_ButtonEmptying_Button.u_push".
            edgeExecuted |= this.execEdge30();

            // Event "Tunnel_MiddleDrainCellar_ButtonOff_Button.u_push".
            edgeExecuted |= this.execEdge31();

            // Event "Tunnel_MiddleDrainCellar_ButtonStoring_Button.u_push".
            edgeExecuted |= this.execEdge32();

            // Event "Tunnel_MiddleDrainCellar_Control_ButtonAuto_Button.u_push".
            edgeExecuted |= this.execEdge33();

            // Event "Tunnel_MiddleDrainCellar_Control_ButtonManual_Button.u_push".
            edgeExecuted |= this.execEdge34();

            // Event "Tunnel_MiddleDrainCellar_Sensor1.u_off".
            edgeExecuted |= this.execEdge35();

            // Event "Tunnel_MiddleDrainCellar_Sensor1.u_on".
            edgeExecuted |= this.execEdge36();

            // Event "Tunnel_MiddleDrainCellar_Sensor2.u_off".
            edgeExecuted |= this.execEdge37();

            // Event "Tunnel_MiddleDrainCellar_Sensor2.u_on".
            edgeExecuted |= this.execEdge38();

            // Event "Tunnel_MiddleDrainCellar_Sensor3.u_off".
            edgeExecuted |= this.execEdge39();

            // Event "Tunnel_MiddleDrainCellar_Sensor3.u_on".
            edgeExecuted |= this.execEdge40();

            // Event "Tunnel_MiddleDrainCellar_Sensor4.u_off".
            edgeExecuted |= this.execEdge41();

            // Event "Tunnel_MiddleDrainCellar_Sensor4.u_on".
            edgeExecuted |= this.execEdge42();

            // Event "Tunnel_MiddleDrainCellar_Sensor5.u_off".
            edgeExecuted |= this.execEdge43();

            // Event "Tunnel_MiddleDrainCellar_Sensor5.u_on".
            edgeExecuted |= this.execEdge44();

            // Event "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_Button.u_push".
            edgeExecuted |= this.execEdge45();

            // Event "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_Button.u_push".
            edgeExecuted |= this.execEdge46();

            // Event "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_Button.u_push".
            edgeExecuted |= this.execEdge47();

            // Event "Tunnel_MiddleTunnelChannel_ButtonLightingOff_Button.u_push".
            edgeExecuted |= this.execEdge48();

            // Event "Tunnel_MiddleTunnelChannel_ButtonLightingOn_Button.u_push".
            edgeExecuted |= this.execEdge49();

            // Event "Tunnel_MiddleTunnelChannel_ButtonPressureLeft_Button.u_push".
            edgeExecuted |= this.execEdge50();

            // Event "Tunnel_MiddleTunnelChannel_ButtonPressureOff_Button.u_push".
            edgeExecuted |= this.execEdge51();

            // Event "Tunnel_MiddleTunnelChannel_ButtonPressureRight_Button.u_push".
            edgeExecuted |= this.execEdge52();

            // Event "Tunnel_MiddleTunnelChannel_ButtonStartMessage_Button.u_push".
            edgeExecuted |= this.execEdge53();

            // Event "Tunnel_MiddleTunnelChannel_ButtonStopMessage_Button.u_push".
            edgeExecuted |= this.execEdge54();

            // Event "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_Button.u_push".
            edgeExecuted |= this.execEdge55();

            // Event "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_Button.u_push".
            edgeExecuted |= this.execEdge56();

            // Event "Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_Button.u_push".
            edgeExecuted |= this.execEdge57();

            // Event "Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_Button.u_push".
            edgeExecuted |= this.execEdge58();

            // Event "Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_Button.u_push".
            edgeExecuted |= this.execEdge59();

            // Event "Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_Button.u_push".
            edgeExecuted |= this.execEdge60();

            // Event "Tunnel_Traffictube1_Boombarrier1_ObstacleDetection.u_off".
            edgeExecuted |= this.execEdge61();

            // Event "Tunnel_Traffictube1_Boombarrier1_ObstacleDetection.u_on".
            edgeExecuted |= this.execEdge62();

            // Event "Tunnel_Traffictube1_Boombarrier1_SensorClosed.u_off".
            edgeExecuted |= this.execEdge63();

            // Event "Tunnel_Traffictube1_Boombarrier1_SensorClosed.u_on".
            edgeExecuted |= this.execEdge64();

            // Event "Tunnel_Traffictube1_Boombarrier1_SensorOpen.u_off".
            edgeExecuted |= this.execEdge65();

            // Event "Tunnel_Traffictube1_Boombarrier1_SensorOpen.u_on".
            edgeExecuted |= this.execEdge66();

            // Event "Tunnel_Traffictube1_Boombarrier2_ObstacleDetection.u_off".
            edgeExecuted |= this.execEdge67();

            // Event "Tunnel_Traffictube1_Boombarrier2_ObstacleDetection.u_on".
            edgeExecuted |= this.execEdge68();

            // Event "Tunnel_Traffictube1_Boombarrier2_SensorClosed.u_off".
            edgeExecuted |= this.execEdge69();

            // Event "Tunnel_Traffictube1_Boombarrier2_SensorClosed.u_on".
            edgeExecuted |= this.execEdge70();

            // Event "Tunnel_Traffictube1_Boombarrier2_SensorOpen.u_off".
            edgeExecuted |= this.execEdge71();

            // Event "Tunnel_Traffictube1_Boombarrier2_SensorOpen.u_on".
            edgeExecuted |= this.execEdge72();

            // Event "Tunnel_Traffictube1_ButtonCamera1_Button.u_push".
            edgeExecuted |= this.execEdge73();

            // Event "Tunnel_Traffictube1_ButtonCamera2_Button.u_push".
            edgeExecuted |= this.execEdge74();

            // Event "Tunnel_Traffictube1_ButtonCamera3_Button.u_push".
            edgeExecuted |= this.execEdge75();

            // Event "Tunnel_Traffictube1_ButtonCamera4_Button.u_push".
            edgeExecuted |= this.execEdge76();

            // Event "Tunnel_Traffictube1_ButtonCamera5_Button.u_push".
            edgeExecuted |= this.execEdge77();

            // Event "Tunnel_Traffictube1_ButtonCamera6_Button.u_push".
            edgeExecuted |= this.execEdge78();

            // Event "Tunnel_Traffictube1_ButtonCameraStopView_Button.u_push".
            edgeExecuted |= this.execEdge79();

            // Event "Tunnel_Traffictube1_ButtonCameraView_Button.u_push".
            edgeExecuted |= this.execEdge80();

            // Event "Tunnel_Traffictube1_ButtonCloseBoombarriers_Button.u_push".
            edgeExecuted |= this.execEdge81();

            // Event "Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_Button.u_push".
            edgeExecuted |= this.execEdge82();

            // Event "Tunnel_Traffictube1_ButtonEmergency_Button.u_push".
            edgeExecuted |= this.execEdge83();

            // Event "Tunnel_Traffictube1_ButtonEvacuation_Button.u_push".
            edgeExecuted |= this.execEdge84();

            // Event "Tunnel_Traffictube1_ButtonFlashTrafficlights_Button.u_push".
            edgeExecuted |= this.execEdge85();

            // Event "Tunnel_Traffictube1_ButtonLighting0_Button.u_push".
            edgeExecuted |= this.execEdge86();

            // Event "Tunnel_Traffictube1_ButtonLighting1_Button.u_push".
            edgeExecuted |= this.execEdge87();

            // Event "Tunnel_Traffictube1_ButtonLighting2_Button.u_push".
            edgeExecuted |= this.execEdge88();

            // Event "Tunnel_Traffictube1_ButtonLighting3_Button.u_push".
            edgeExecuted |= this.execEdge89();

            // Event "Tunnel_Traffictube1_ButtonLighting4_Button.u_push".
            edgeExecuted |= this.execEdge90();

            // Event "Tunnel_Traffictube1_ButtonLighting5_Button.u_push".
            edgeExecuted |= this.execEdge91();

            // Event "Tunnel_Traffictube1_ButtonLighting6_Button.u_push".
            edgeExecuted |= this.execEdge92();

            // Event "Tunnel_Traffictube1_ButtonLighting7_Button.u_push".
            edgeExecuted |= this.execEdge93();

            // Event "Tunnel_Traffictube1_ButtonLighting8_Button.u_push".
            edgeExecuted |= this.execEdge94();

            // Event "Tunnel_Traffictube1_ButtonLive_Button.u_push".
            edgeExecuted |= this.execEdge95();

            // Event "Tunnel_Traffictube1_ButtonMaintenance_Button.u_push".
            edgeExecuted |= this.execEdge96();

            // Event "Tunnel_Traffictube1_ButtonMessage_Button.u_push".
            edgeExecuted |= this.execEdge97();

            // Event "Tunnel_Traffictube1_ButtonOffTrafficlights_Button.u_push".
            edgeExecuted |= this.execEdge98();

            // Event "Tunnel_Traffictube1_ButtonOpenBoombarriers_Button.u_push".
            edgeExecuted |= this.execEdge99();

            // Event "Tunnel_Traffictube1_ButtonOperational_Button.u_push".
            edgeExecuted |= this.execEdge100();

            // Event "Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_Button.u_push".
            edgeExecuted |= this.execEdge101();

            // Event "Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_Button.u_push".
            edgeExecuted |= this.execEdge102();

            // Event "Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_Button.u_push".
            edgeExecuted |= this.execEdge103();

            // Event "Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_Button.u_push".
            edgeExecuted |= this.execEdge104();

            // Event "Tunnel_Traffictube1_ButtonRecovery_Button.u_push".
            edgeExecuted |= this.execEdge105();

            // Event "Tunnel_Traffictube1_ButtonRedTrafficlights_Button.u_push".
            edgeExecuted |= this.execEdge106();

            // Event "Tunnel_Traffictube1_ButtonStopBoombarriers_Button.u_push".
            edgeExecuted |= this.execEdge107();

            // Event "Tunnel_Traffictube1_ButtonVentilation0_Button.u_push".
            edgeExecuted |= this.execEdge108();

            // Event "Tunnel_Traffictube1_ButtonVentilation1_Button.u_push".
            edgeExecuted |= this.execEdge109();

            // Event "Tunnel_Traffictube1_ButtonVentilation2_Button.u_push".
            edgeExecuted |= this.execEdge110();

            // Event "Tunnel_Traffictube1_ButtonVentilation3_Button.u_push".
            edgeExecuted |= this.execEdge111();

            // Event "Tunnel_Traffictube1_ButtonVentilation4_Button.u_push".
            edgeExecuted |= this.execEdge112();

            // Event "Tunnel_Traffictube1_ButtonVentilation5_Button.u_push".
            edgeExecuted |= this.execEdge113();

            // Event "Tunnel_Traffictube1_ButtonVentilation6_Button.u_push".
            edgeExecuted |= this.execEdge114();

            // Event "Tunnel_Traffictube1_ButtonVentilation7_Button.u_push".
            edgeExecuted |= this.execEdge115();

            // Event "Tunnel_Traffictube1_ButtonVentilation8_Button.u_push".
            edgeExecuted |= this.execEdge116();

            // Event "Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_Button.u_push".
            edgeExecuted |= this.execEdge117();

            // Event "Tunnel_Traffictube1_ButtonVentilationDrivingDirection_Button.u_push".
            edgeExecuted |= this.execEdge118();

            // Event "Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_Button.u_push".
            edgeExecuted |= this.execEdge119();

            // Event "Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_Button.u_push".
            edgeExecuted |= this.execEdge120();

            // Event "Tunnel_Traffictube1_ControlLighting_ButtonAuto_Button.u_push".
            edgeExecuted |= this.execEdge121();

            // Event "Tunnel_Traffictube1_ControlLighting_ButtonManual_Button.u_push".
            edgeExecuted |= this.execEdge122();

            // Event "Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_Button.u_push".
            edgeExecuted |= this.execEdge123();

            // Event "Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_Button.u_push".
            edgeExecuted |= this.execEdge124();

            // Event "Tunnel_Traffictube1_ControlVentilation_ButtonAuto_Button.u_push".
            edgeExecuted |= this.execEdge125();

            // Event "Tunnel_Traffictube1_ControlVentilation_ButtonManual_Button.u_push".
            edgeExecuted |= this.execEdge126();

            // Event "Tunnel_Traffictube1_EmergencyCabinetA_Firehose.u_off".
            edgeExecuted |= this.execEdge127();

            // Event "Tunnel_Traffictube1_EmergencyCabinetA_Firehose.u_on".
            edgeExecuted |= this.execEdge128();

            // Event "Tunnel_Traffictube1_EmergencyCabinetA_HandheldExtinguisher.u_off".
            edgeExecuted |= this.execEdge129();

            // Event "Tunnel_Traffictube1_EmergencyCabinetA_HandheldExtinguisher.u_on".
            edgeExecuted |= this.execEdge130();

            // Event "Tunnel_Traffictube1_EmergencyCabinetA_Phone.u_off".
            edgeExecuted |= this.execEdge131();

            // Event "Tunnel_Traffictube1_EmergencyCabinetA_Phone.u_on".
            edgeExecuted |= this.execEdge132();

            // Event "Tunnel_Traffictube1_EmergencyCabinetA_SensorOpen.u_off".
            edgeExecuted |= this.execEdge133();

            // Event "Tunnel_Traffictube1_EmergencyCabinetA_SensorOpen.u_on".
            edgeExecuted |= this.execEdge134();

            // Event "Tunnel_Traffictube1_EmergencyCabinetC_HandheldExtinguisher.u_off".
            edgeExecuted |= this.execEdge135();

            // Event "Tunnel_Traffictube1_EmergencyCabinetC_HandheldExtinguisher.u_on".
            edgeExecuted |= this.execEdge136();

            // Event "Tunnel_Traffictube1_EmergencyCabinetC_Phone.u_off".
            edgeExecuted |= this.execEdge137();

            // Event "Tunnel_Traffictube1_EmergencyCabinetC_Phone.u_on".
            edgeExecuted |= this.execEdge138();

            // Event "Tunnel_Traffictube1_EmergencyCabinetC_SensorOpen.u_off".
            edgeExecuted |= this.execEdge139();

            // Event "Tunnel_Traffictube1_EmergencyCabinetC_SensorOpen.u_on".
            edgeExecuted |= this.execEdge140();

            // Event "Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_Button.u_push".
            edgeExecuted |= this.execEdge141();

            // Event "Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_Button.u_push".
            edgeExecuted |= this.execEdge142();

            // Event "Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_Button.u_push".
            edgeExecuted |= this.execEdge143();

            // Event "Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_Button.u_push".
            edgeExecuted |= this.execEdge144();

            // Event "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_Button.u_push".
            edgeExecuted |= this.execEdge145();

            // Event "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_Button.u_push".
            edgeExecuted |= this.execEdge146();

            // Event "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_Button.u_push".
            edgeExecuted |= this.execEdge147();

            // Event "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_Button.u_push".
            edgeExecuted |= this.execEdge148();

            // Event "Tunnel_Traffictube1_J32_TimerReleaseSignal.u_timeout".
            edgeExecuted |= this.execEdge149();

            // Event "Tunnel_Traffictube1_Lightsensor.u_0".
            edgeExecuted |= this.execEdge150();

            // Event "Tunnel_Traffictube1_Lightsensor.u_1".
            edgeExecuted |= this.execEdge151();

            // Event "Tunnel_Traffictube1_Lightsensor.u_2".
            edgeExecuted |= this.execEdge152();

            // Event "Tunnel_Traffictube1_Lightsensor.u_3".
            edgeExecuted |= this.execEdge153();

            // Event "Tunnel_Traffictube1_Lightsensor.u_4".
            edgeExecuted |= this.execEdge154();

            // Event "Tunnel_Traffictube1_Lightsensor.u_5".
            edgeExecuted |= this.execEdge155();

            // Event "Tunnel_Traffictube1_Lightsensor.u_6".
            edgeExecuted |= this.execEdge156();

            // Event "Tunnel_Traffictube1_Lightsensor.u_7".
            edgeExecuted |= this.execEdge157();

            // Event "Tunnel_Traffictube1_Lightsensor.u_8".
            edgeExecuted |= this.execEdge158();

            // Event "Tunnel_Traffictube1_PopUp_ButtonAccept_Button.u_push".
            edgeExecuted |= this.execEdge159();

            // Event "Tunnel_Traffictube1_PopUp_ButtonReject_Button.u_push".
            edgeExecuted |= this.execEdge160();

            // Event "Tunnel_Traffictube1_PopUp_Timer.u_timeout".
            edgeExecuted |= this.execEdge161();

            // Event "Tunnel_Traffictube1_Smokedetection.u_0".
            edgeExecuted |= this.execEdge162();

            // Event "Tunnel_Traffictube1_Smokedetection.u_1".
            edgeExecuted |= this.execEdge163();

            // Event "Tunnel_Traffictube1_Smokedetection.u_2".
            edgeExecuted |= this.execEdge164();

            // Event "Tunnel_Traffictube1_Smokedetection.u_3".
            edgeExecuted |= this.execEdge165();

            // Event "Tunnel_Traffictube1_Smokedetection.u_4".
            edgeExecuted |= this.execEdge166();

            // Event "Tunnel_Traffictube1_Smokedetection.u_5".
            edgeExecuted |= this.execEdge167();

            // Event "Tunnel_Traffictube1_Smokedetection.u_6".
            edgeExecuted |= this.execEdge168();

            // Event "Tunnel_Traffictube1_Smokedetection.u_7".
            edgeExecuted |= this.execEdge169();

            // Event "Tunnel_Traffictube1_Smokedetection.u_8".
            edgeExecuted |= this.execEdge170();

            // Event "Tunnel_Traffictube1_Standstilldetection.u_off".
            edgeExecuted |= this.execEdge171();

            // Event "Tunnel_Traffictube1_Standstilldetection.u_standstill".
            edgeExecuted |= this.execEdge172();

            // Event "Tunnel_Traffictube1_Standstilldetection.u_wrongway".
            edgeExecuted |= this.execEdge173();

            // Event "Tunnel_Traffictube1_SwitchTimerAudio.u_timeout".
            edgeExecuted |= this.execEdge174();

            // Event "Tunnel_Traffictube1_TimerCameraViewEven.u_timeout".
            edgeExecuted |= this.execEdge175();

            // Event "Tunnel_Traffictube1_TimerCameraViewUneven.u_timeout".
            edgeExecuted |= this.execEdge176();

            // Event "Tunnel_Traffictube1_Trafficlight1_ReleaseSignal.u_off".
            edgeExecuted |= this.execEdge177();

            // Event "Tunnel_Traffictube1_Trafficlight1_ReleaseSignal.u_on".
            edgeExecuted |= this.execEdge178();

            // Event "Tunnel_Traffictube1_Trafficlight1_TimerReleaseSignal.u_timeout".
            edgeExecuted |= this.execEdge179();

            // Event "Tunnel_Traffictube1_Trafficlight2_ReleaseSignal.u_off".
            edgeExecuted |= this.execEdge180();

            // Event "Tunnel_Traffictube1_Trafficlight2_ReleaseSignal.u_on".
            edgeExecuted |= this.execEdge181();

            // Event "Tunnel_Traffictube1_Trafficlight2_TimerReleaseSignal.u_timeout".
            edgeExecuted |= this.execEdge182();

            // Event "Tunnel_Traffictube1_Trafficlight3_ReleaseSignal.u_off".
            edgeExecuted |= this.execEdge183();

            // Event "Tunnel_Traffictube1_Trafficlight3_ReleaseSignal.u_on".
            edgeExecuted |= this.execEdge184();

            // Event "Tunnel_Traffictube1_Trafficlight3_TimerReleaseSignal.u_timeout".
            edgeExecuted |= this.execEdge185();

            // Event "Tunnel_Traffictube2_Boombarrier1_ObstacleDetection.u_off".
            edgeExecuted |= this.execEdge186();

            // Event "Tunnel_Traffictube2_Boombarrier1_ObstacleDetection.u_on".
            edgeExecuted |= this.execEdge187();

            // Event "Tunnel_Traffictube2_Boombarrier1_SensorClosed.u_off".
            edgeExecuted |= this.execEdge188();

            // Event "Tunnel_Traffictube2_Boombarrier1_SensorClosed.u_on".
            edgeExecuted |= this.execEdge189();

            // Event "Tunnel_Traffictube2_Boombarrier1_SensorOpen.u_off".
            edgeExecuted |= this.execEdge190();

            // Event "Tunnel_Traffictube2_Boombarrier1_SensorOpen.u_on".
            edgeExecuted |= this.execEdge191();

            // Event "Tunnel_Traffictube2_Boombarrier2_ObstacleDetection.u_off".
            edgeExecuted |= this.execEdge192();

            // Event "Tunnel_Traffictube2_Boombarrier2_ObstacleDetection.u_on".
            edgeExecuted |= this.execEdge193();

            // Event "Tunnel_Traffictube2_Boombarrier2_SensorClosed.u_off".
            edgeExecuted |= this.execEdge194();

            // Event "Tunnel_Traffictube2_Boombarrier2_SensorClosed.u_on".
            edgeExecuted |= this.execEdge195();

            // Event "Tunnel_Traffictube2_Boombarrier2_SensorOpen.u_off".
            edgeExecuted |= this.execEdge196();

            // Event "Tunnel_Traffictube2_Boombarrier2_SensorOpen.u_on".
            edgeExecuted |= this.execEdge197();

            // Event "Tunnel_Traffictube2_ButtonCamera1_Button.u_push".
            edgeExecuted |= this.execEdge198();

            // Event "Tunnel_Traffictube2_ButtonCamera2_Button.u_push".
            edgeExecuted |= this.execEdge199();

            // Event "Tunnel_Traffictube2_ButtonCamera3_Button.u_push".
            edgeExecuted |= this.execEdge200();

            // Event "Tunnel_Traffictube2_ButtonCamera4_Button.u_push".
            edgeExecuted |= this.execEdge201();

            // Event "Tunnel_Traffictube2_ButtonCamera5_Button.u_push".
            edgeExecuted |= this.execEdge202();

            // Event "Tunnel_Traffictube2_ButtonCamera6_Button.u_push".
            edgeExecuted |= this.execEdge203();

            // Event "Tunnel_Traffictube2_ButtonCameraStopView_Button.u_push".
            edgeExecuted |= this.execEdge204();

            // Event "Tunnel_Traffictube2_ButtonCameraView_Button.u_push".
            edgeExecuted |= this.execEdge205();

            // Event "Tunnel_Traffictube2_ButtonCloseBoombarriers_Button.u_push".
            edgeExecuted |= this.execEdge206();

            // Event "Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_Button.u_push".
            edgeExecuted |= this.execEdge207();

            // Event "Tunnel_Traffictube2_ButtonEmergency_Button.u_push".
            edgeExecuted |= this.execEdge208();

            // Event "Tunnel_Traffictube2_ButtonEvacuation_Button.u_push".
            edgeExecuted |= this.execEdge209();

            // Event "Tunnel_Traffictube2_ButtonFlashTrafficlights_Button.u_push".
            edgeExecuted |= this.execEdge210();

            // Event "Tunnel_Traffictube2_ButtonLighting0_Button.u_push".
            edgeExecuted |= this.execEdge211();

            // Event "Tunnel_Traffictube2_ButtonLighting1_Button.u_push".
            edgeExecuted |= this.execEdge212();

            // Event "Tunnel_Traffictube2_ButtonLighting2_Button.u_push".
            edgeExecuted |= this.execEdge213();

            // Event "Tunnel_Traffictube2_ButtonLighting3_Button.u_push".
            edgeExecuted |= this.execEdge214();

            // Event "Tunnel_Traffictube2_ButtonLighting4_Button.u_push".
            edgeExecuted |= this.execEdge215();

            // Event "Tunnel_Traffictube2_ButtonLighting5_Button.u_push".
            edgeExecuted |= this.execEdge216();

            // Event "Tunnel_Traffictube2_ButtonLighting6_Button.u_push".
            edgeExecuted |= this.execEdge217();

            // Event "Tunnel_Traffictube2_ButtonLighting7_Button.u_push".
            edgeExecuted |= this.execEdge218();

            // Event "Tunnel_Traffictube2_ButtonLighting8_Button.u_push".
            edgeExecuted |= this.execEdge219();

            // Event "Tunnel_Traffictube2_ButtonLive_Button.u_push".
            edgeExecuted |= this.execEdge220();

            // Event "Tunnel_Traffictube2_ButtonMaintenance_Button.u_push".
            edgeExecuted |= this.execEdge221();

            // Event "Tunnel_Traffictube2_ButtonMessage_Button.u_push".
            edgeExecuted |= this.execEdge222();

            // Event "Tunnel_Traffictube2_ButtonOffTrafficlights_Button.u_push".
            edgeExecuted |= this.execEdge223();

            // Event "Tunnel_Traffictube2_ButtonOpenBoombarriers_Button.u_push".
            edgeExecuted |= this.execEdge224();

            // Event "Tunnel_Traffictube2_ButtonOperational_Button.u_push".
            edgeExecuted |= this.execEdge225();

            // Event "Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_Button.u_push".
            edgeExecuted |= this.execEdge226();

            // Event "Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_Button.u_push".
            edgeExecuted |= this.execEdge227();

            // Event "Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_Button.u_push".
            edgeExecuted |= this.execEdge228();

            // Event "Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_Button.u_push".
            edgeExecuted |= this.execEdge229();

            // Event "Tunnel_Traffictube2_ButtonRecovery_Button.u_push".
            edgeExecuted |= this.execEdge230();

            // Event "Tunnel_Traffictube2_ButtonRedTrafficlights_Button.u_push".
            edgeExecuted |= this.execEdge231();

            // Event "Tunnel_Traffictube2_ButtonStopBoombarriers_Button.u_push".
            edgeExecuted |= this.execEdge232();

            // Event "Tunnel_Traffictube2_ButtonVentilation0_Button.u_push".
            edgeExecuted |= this.execEdge233();

            // Event "Tunnel_Traffictube2_ButtonVentilation1_Button.u_push".
            edgeExecuted |= this.execEdge234();

            // Event "Tunnel_Traffictube2_ButtonVentilation2_Button.u_push".
            edgeExecuted |= this.execEdge235();

            // Event "Tunnel_Traffictube2_ButtonVentilation3_Button.u_push".
            edgeExecuted |= this.execEdge236();

            // Event "Tunnel_Traffictube2_ButtonVentilation4_Button.u_push".
            edgeExecuted |= this.execEdge237();

            // Event "Tunnel_Traffictube2_ButtonVentilation5_Button.u_push".
            edgeExecuted |= this.execEdge238();

            // Event "Tunnel_Traffictube2_ButtonVentilation6_Button.u_push".
            edgeExecuted |= this.execEdge239();

            // Event "Tunnel_Traffictube2_ButtonVentilation7_Button.u_push".
            edgeExecuted |= this.execEdge240();

            // Event "Tunnel_Traffictube2_ButtonVentilation8_Button.u_push".
            edgeExecuted |= this.execEdge241();

            // Event "Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_Button.u_push".
            edgeExecuted |= this.execEdge242();

            // Event "Tunnel_Traffictube2_ButtonVentilationDrivingDirection_Button.u_push".
            edgeExecuted |= this.execEdge243();

            // Event "Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_Button.u_push".
            edgeExecuted |= this.execEdge244();

            // Event "Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_Button.u_push".
            edgeExecuted |= this.execEdge245();

            // Event "Tunnel_Traffictube2_ControlLighting_ButtonAuto_Button.u_push".
            edgeExecuted |= this.execEdge246();

            // Event "Tunnel_Traffictube2_ControlLighting_ButtonManual_Button.u_push".
            edgeExecuted |= this.execEdge247();

            // Event "Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_Button.u_push".
            edgeExecuted |= this.execEdge248();

            // Event "Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_Button.u_push".
            edgeExecuted |= this.execEdge249();

            // Event "Tunnel_Traffictube2_ControlVentilation_ButtonAuto_Button.u_push".
            edgeExecuted |= this.execEdge250();

            // Event "Tunnel_Traffictube2_ControlVentilation_ButtonManual_Button.u_push".
            edgeExecuted |= this.execEdge251();

            // Event "Tunnel_Traffictube2_EmergencyCabinetA_Firehose.u_off".
            edgeExecuted |= this.execEdge252();

            // Event "Tunnel_Traffictube2_EmergencyCabinetA_Firehose.u_on".
            edgeExecuted |= this.execEdge253();

            // Event "Tunnel_Traffictube2_EmergencyCabinetA_HandheldExtinguisher.u_off".
            edgeExecuted |= this.execEdge254();

            // Event "Tunnel_Traffictube2_EmergencyCabinetA_HandheldExtinguisher.u_on".
            edgeExecuted |= this.execEdge255();

            // Event "Tunnel_Traffictube2_EmergencyCabinetA_Phone.u_off".
            edgeExecuted |= this.execEdge256();

            // Event "Tunnel_Traffictube2_EmergencyCabinetA_Phone.u_on".
            edgeExecuted |= this.execEdge257();

            // Event "Tunnel_Traffictube2_EmergencyCabinetA_SensorOpen.u_off".
            edgeExecuted |= this.execEdge258();

            // Event "Tunnel_Traffictube2_EmergencyCabinetA_SensorOpen.u_on".
            edgeExecuted |= this.execEdge259();

            // Event "Tunnel_Traffictube2_EmergencyCabinetC_HandheldExtinguisher.u_off".
            edgeExecuted |= this.execEdge260();

            // Event "Tunnel_Traffictube2_EmergencyCabinetC_HandheldExtinguisher.u_on".
            edgeExecuted |= this.execEdge261();

            // Event "Tunnel_Traffictube2_EmergencyCabinetC_Phone.u_off".
            edgeExecuted |= this.execEdge262();

            // Event "Tunnel_Traffictube2_EmergencyCabinetC_Phone.u_on".
            edgeExecuted |= this.execEdge263();

            // Event "Tunnel_Traffictube2_EmergencyCabinetC_SensorOpen.u_off".
            edgeExecuted |= this.execEdge264();

            // Event "Tunnel_Traffictube2_EmergencyCabinetC_SensorOpen.u_on".
            edgeExecuted |= this.execEdge265();

            // Event "Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_Button.u_push".
            edgeExecuted |= this.execEdge266();

            // Event "Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_Button.u_push".
            edgeExecuted |= this.execEdge267();

            // Event "Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_Button.u_push".
            edgeExecuted |= this.execEdge268();

            // Event "Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_Button.u_push".
            edgeExecuted |= this.execEdge269();

            // Event "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_Button.u_push".
            edgeExecuted |= this.execEdge270();

            // Event "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_Button.u_push".
            edgeExecuted |= this.execEdge271();

            // Event "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_Button.u_push".
            edgeExecuted |= this.execEdge272();

            // Event "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_Button.u_push".
            edgeExecuted |= this.execEdge273();

            // Event "Tunnel_Traffictube2_J32_TimerReleaseSignal.u_timeout".
            edgeExecuted |= this.execEdge274();

            // Event "Tunnel_Traffictube2_Lightsensor.u_0".
            edgeExecuted |= this.execEdge275();

            // Event "Tunnel_Traffictube2_Lightsensor.u_1".
            edgeExecuted |= this.execEdge276();

            // Event "Tunnel_Traffictube2_Lightsensor.u_2".
            edgeExecuted |= this.execEdge277();

            // Event "Tunnel_Traffictube2_Lightsensor.u_3".
            edgeExecuted |= this.execEdge278();

            // Event "Tunnel_Traffictube2_Lightsensor.u_4".
            edgeExecuted |= this.execEdge279();

            // Event "Tunnel_Traffictube2_Lightsensor.u_5".
            edgeExecuted |= this.execEdge280();

            // Event "Tunnel_Traffictube2_Lightsensor.u_6".
            edgeExecuted |= this.execEdge281();

            // Event "Tunnel_Traffictube2_Lightsensor.u_7".
            edgeExecuted |= this.execEdge282();

            // Event "Tunnel_Traffictube2_Lightsensor.u_8".
            edgeExecuted |= this.execEdge283();

            // Event "Tunnel_Traffictube2_PopUp_ButtonAccept_Button.u_push".
            edgeExecuted |= this.execEdge284();

            // Event "Tunnel_Traffictube2_PopUp_ButtonReject_Button.u_push".
            edgeExecuted |= this.execEdge285();

            // Event "Tunnel_Traffictube2_PopUp_Timer.u_timeout".
            edgeExecuted |= this.execEdge286();

            // Event "Tunnel_Traffictube2_Smokedetection.u_0".
            edgeExecuted |= this.execEdge287();

            // Event "Tunnel_Traffictube2_Smokedetection.u_1".
            edgeExecuted |= this.execEdge288();

            // Event "Tunnel_Traffictube2_Smokedetection.u_2".
            edgeExecuted |= this.execEdge289();

            // Event "Tunnel_Traffictube2_Smokedetection.u_3".
            edgeExecuted |= this.execEdge290();

            // Event "Tunnel_Traffictube2_Smokedetection.u_4".
            edgeExecuted |= this.execEdge291();

            // Event "Tunnel_Traffictube2_Smokedetection.u_5".
            edgeExecuted |= this.execEdge292();

            // Event "Tunnel_Traffictube2_Smokedetection.u_6".
            edgeExecuted |= this.execEdge293();

            // Event "Tunnel_Traffictube2_Smokedetection.u_7".
            edgeExecuted |= this.execEdge294();

            // Event "Tunnel_Traffictube2_Smokedetection.u_8".
            edgeExecuted |= this.execEdge295();

            // Event "Tunnel_Traffictube2_Standstilldetection.u_off".
            edgeExecuted |= this.execEdge296();

            // Event "Tunnel_Traffictube2_Standstilldetection.u_standstill".
            edgeExecuted |= this.execEdge297();

            // Event "Tunnel_Traffictube2_Standstilldetection.u_wrongway".
            edgeExecuted |= this.execEdge298();

            // Event "Tunnel_Traffictube2_SwitchTimerAudio.u_timeout".
            edgeExecuted |= this.execEdge299();

            // Event "Tunnel_Traffictube2_TimerCameraViewEven.u_timeout".
            edgeExecuted |= this.execEdge300();

            // Event "Tunnel_Traffictube2_TimerCameraViewUneven.u_timeout".
            edgeExecuted |= this.execEdge301();

            // Event "Tunnel_Traffictube2_Trafficlight1_ReleaseSignal.u_off".
            edgeExecuted |= this.execEdge302();

            // Event "Tunnel_Traffictube2_Trafficlight1_ReleaseSignal.u_on".
            edgeExecuted |= this.execEdge303();

            // Event "Tunnel_Traffictube2_Trafficlight1_TimerReleaseSignal.u_timeout".
            edgeExecuted |= this.execEdge304();

            // Event "Tunnel_Traffictube2_Trafficlight2_ReleaseSignal.u_off".
            edgeExecuted |= this.execEdge305();

            // Event "Tunnel_Traffictube2_Trafficlight2_ReleaseSignal.u_on".
            edgeExecuted |= this.execEdge306();

            // Event "Tunnel_Traffictube2_Trafficlight2_TimerReleaseSignal.u_timeout".
            edgeExecuted |= this.execEdge307();

            // Event "Tunnel_Traffictube2_Trafficlight3_ReleaseSignal.u_off".
            edgeExecuted |= this.execEdge308();

            // Event "Tunnel_Traffictube2_Trafficlight3_ReleaseSignal.u_on".
            edgeExecuted |= this.execEdge309();

            // Event "Tunnel_Traffictube2_Trafficlight3_TimerReleaseSignal.u_timeout".
            edgeExecuted |= this.execEdge310();

            // Event "Tunnel_u_broadcastBothTubes".
            edgeExecuted |= this.execEdge311();

            // Event "Tunnel_u_broadcastCamera1".
            edgeExecuted |= this.execEdge312();

            // Event "Tunnel_u_broadcastCamera2".
            edgeExecuted |= this.execEdge313();

            // Event "Tunnel_u_broadcastSection1".
            edgeExecuted |= this.execEdge314();

            // Event "Tunnel_u_broadcastSection2".
            edgeExecuted |= this.execEdge315();

            // Event "Tunnel_u_broadcastStop".
            edgeExecuted |= this.execEdge316();

            // Event "Tunnel_u_broadcastTraffictube1".
            edgeExecuted |= this.execEdge317();

            // Event "Tunnel_u_broadcastTraffictube2".
            edgeExecuted |= this.execEdge318();

            // Event "Tunnel_WatercellarFirehoses_ButtonExtinguish_Button.u_push".
            edgeExecuted |= this.execEdge319();

            // Event "Tunnel_WatercellarFirehoses_ButtonGuard_Button.u_push".
            edgeExecuted |= this.execEdge320();

            // Event "Tunnel_WatercellarFirehoses_Control_ButtonAuto_Button.u_push".
            edgeExecuted |= this.execEdge321();

            // Event "Tunnel_WatercellarFirehoses_Control_ButtonManual_Button.u_push".
            edgeExecuted |= this.execEdge322();

            // Event "Tunnel_WatercellarFirehoses_SensorHigh.u_off".
            edgeExecuted |= this.execEdge323();

            // Event "Tunnel_WatercellarFirehoses_SensorHigh.u_on".
            edgeExecuted |= this.execEdge324();

            // Event "Tunnel_WatercellarFirehoses_SensorLow.u_off".
            edgeExecuted |= this.execEdge325();

            // Event "Tunnel_WatercellarFirehoses_SensorLow.u_on".
            edgeExecuted |= this.execEdge326();

            // Stop if no edge was executed.
            if (!edgeExecuted) {
                break;
            }
        }

        // Execute controllable edges as long as they are possible.
        while (true) {
            // Try to execute an edge for each event.
            var edgeExecuted = false;

            // Event "Tunnel_BroadcastButtons1.c_evacuation".
            edgeExecuted |= this.execEdge327();

            // Event "Tunnel_BroadcastButtons1.c_off".
            edgeExecuted |= this.execEdge328();

            // Event "Tunnel_BroadcastButtons2.c_evacuation".
            edgeExecuted |= this.execEdge329();

            // Event "Tunnel_BroadcastButtons2.c_off".
            edgeExecuted |= this.execEdge330();

            // Event "Tunnel_HeadDrainCellar1_ButtonEmptying_Observer.c_cancel".
            edgeExecuted |= this.execEdge331();

            // Event "Tunnel_HeadDrainCellar1_ButtonEmptying_Observer.c_done".
            edgeExecuted |= this.execEdge332();

            // Event "Tunnel_HeadDrainCellar1_ButtonOff_Observer.c_cancel".
            edgeExecuted |= this.execEdge333();

            // Event "Tunnel_HeadDrainCellar1_ButtonOff_Observer.c_done".
            edgeExecuted |= this.execEdge334();

            // Event "Tunnel_HeadDrainCellar1_ButtonStoring_Observer.c_cancel".
            edgeExecuted |= this.execEdge335();

            // Event "Tunnel_HeadDrainCellar1_ButtonStoring_Observer.c_done".
            edgeExecuted |= this.execEdge336();

            // Event "Tunnel_HeadDrainCellar1_Control_ButtonAuto_Observer.c_cancel".
            edgeExecuted |= this.execEdge337();

            // Event "Tunnel_HeadDrainCellar1_Control_ButtonAuto_Observer.c_done".
            edgeExecuted |= this.execEdge338();

            // Event "Tunnel_HeadDrainCellar1_Control_ButtonManual_Observer.c_cancel".
            edgeExecuted |= this.execEdge339();

            // Event "Tunnel_HeadDrainCellar1_Control_ButtonManual_Observer.c_done".
            edgeExecuted |= this.execEdge340();

            // Event "Tunnel_HeadDrainCellar1_Control_Mode.c_auto".
            edgeExecuted |= this.execEdge341();

            // Event "Tunnel_HeadDrainCellar1_Control_Mode.c_manual".
            edgeExecuted |= this.execEdge342();

            // Event "Tunnel_HeadDrainCellar1_Pump1.c_off".
            edgeExecuted |= this.execEdge343();

            // Event "Tunnel_HeadDrainCellar1_Pump1.c_on".
            edgeExecuted |= this.execEdge344();

            // Event "Tunnel_HeadDrainCellar1_Pump2.c_off".
            edgeExecuted |= this.execEdge345();

            // Event "Tunnel_HeadDrainCellar1_Pump2.c_on".
            edgeExecuted |= this.execEdge346();

            // Event "Tunnel_HeadDrainCellar1_Regime.c_empty".
            edgeExecuted |= this.execEdge347();

            // Event "Tunnel_HeadDrainCellar1_Regime.c_off".
            edgeExecuted |= this.execEdge348();

            // Event "Tunnel_HeadDrainCellar1_Regime.c_store".
            edgeExecuted |= this.execEdge349();

            // Event "Tunnel_HeadDrainCellar2_ButtonEmptying_Observer.c_cancel".
            edgeExecuted |= this.execEdge350();

            // Event "Tunnel_HeadDrainCellar2_ButtonEmptying_Observer.c_done".
            edgeExecuted |= this.execEdge351();

            // Event "Tunnel_HeadDrainCellar2_ButtonOff_Observer.c_cancel".
            edgeExecuted |= this.execEdge352();

            // Event "Tunnel_HeadDrainCellar2_ButtonOff_Observer.c_done".
            edgeExecuted |= this.execEdge353();

            // Event "Tunnel_HeadDrainCellar2_ButtonStoring_Observer.c_cancel".
            edgeExecuted |= this.execEdge354();

            // Event "Tunnel_HeadDrainCellar2_ButtonStoring_Observer.c_done".
            edgeExecuted |= this.execEdge355();

            // Event "Tunnel_HeadDrainCellar2_Control_ButtonAuto_Observer.c_cancel".
            edgeExecuted |= this.execEdge356();

            // Event "Tunnel_HeadDrainCellar2_Control_ButtonAuto_Observer.c_done".
            edgeExecuted |= this.execEdge357();

            // Event "Tunnel_HeadDrainCellar2_Control_ButtonManual_Observer.c_cancel".
            edgeExecuted |= this.execEdge358();

            // Event "Tunnel_HeadDrainCellar2_Control_ButtonManual_Observer.c_done".
            edgeExecuted |= this.execEdge359();

            // Event "Tunnel_HeadDrainCellar2_Control_Mode.c_auto".
            edgeExecuted |= this.execEdge360();

            // Event "Tunnel_HeadDrainCellar2_Control_Mode.c_manual".
            edgeExecuted |= this.execEdge361();

            // Event "Tunnel_HeadDrainCellar2_Pump1.c_off".
            edgeExecuted |= this.execEdge362();

            // Event "Tunnel_HeadDrainCellar2_Pump1.c_on".
            edgeExecuted |= this.execEdge363();

            // Event "Tunnel_HeadDrainCellar2_Pump2.c_off".
            edgeExecuted |= this.execEdge364();

            // Event "Tunnel_HeadDrainCellar2_Pump2.c_on".
            edgeExecuted |= this.execEdge365();

            // Event "Tunnel_HeadDrainCellar2_Regime.c_empty".
            edgeExecuted |= this.execEdge366();

            // Event "Tunnel_HeadDrainCellar2_Regime.c_off".
            edgeExecuted |= this.execEdge367();

            // Event "Tunnel_HeadDrainCellar2_Regime.c_store".
            edgeExecuted |= this.execEdge368();

            // Event "Tunnel_MiddleDrainCellar_ButtonEmptying_Observer.c_cancel".
            edgeExecuted |= this.execEdge369();

            // Event "Tunnel_MiddleDrainCellar_ButtonEmptying_Observer.c_done".
            edgeExecuted |= this.execEdge370();

            // Event "Tunnel_MiddleDrainCellar_ButtonOff_Observer.c_cancel".
            edgeExecuted |= this.execEdge371();

            // Event "Tunnel_MiddleDrainCellar_ButtonOff_Observer.c_done".
            edgeExecuted |= this.execEdge372();

            // Event "Tunnel_MiddleDrainCellar_ButtonStoring_Observer.c_cancel".
            edgeExecuted |= this.execEdge373();

            // Event "Tunnel_MiddleDrainCellar_ButtonStoring_Observer.c_done".
            edgeExecuted |= this.execEdge374();

            // Event "Tunnel_MiddleDrainCellar_Control_ButtonAuto_Observer.c_cancel".
            edgeExecuted |= this.execEdge375();

            // Event "Tunnel_MiddleDrainCellar_Control_ButtonAuto_Observer.c_done".
            edgeExecuted |= this.execEdge376();

            // Event "Tunnel_MiddleDrainCellar_Control_ButtonManual_Observer.c_cancel".
            edgeExecuted |= this.execEdge377();

            // Event "Tunnel_MiddleDrainCellar_Control_ButtonManual_Observer.c_done".
            edgeExecuted |= this.execEdge378();

            // Event "Tunnel_MiddleDrainCellar_Control_Mode.c_auto".
            edgeExecuted |= this.execEdge379();

            // Event "Tunnel_MiddleDrainCellar_Control_Mode.c_manual".
            edgeExecuted |= this.execEdge380();

            // Event "Tunnel_MiddleDrainCellar_Pump1.c_off".
            edgeExecuted |= this.execEdge381();

            // Event "Tunnel_MiddleDrainCellar_Pump1.c_on".
            edgeExecuted |= this.execEdge382();

            // Event "Tunnel_MiddleDrainCellar_Pump2.c_off".
            edgeExecuted |= this.execEdge383();

            // Event "Tunnel_MiddleDrainCellar_Pump2.c_on".
            edgeExecuted |= this.execEdge384();

            // Event "Tunnel_MiddleDrainCellar_PumpDirection.c_headDrainCellar1".
            edgeExecuted |= this.execEdge385();

            // Event "Tunnel_MiddleDrainCellar_PumpDirection.c_headDrainCellar2".
            edgeExecuted |= this.execEdge386();

            // Event "Tunnel_MiddleDrainCellar_Regime.c_empty".
            edgeExecuted |= this.execEdge387();

            // Event "Tunnel_MiddleDrainCellar_Regime.c_off".
            edgeExecuted |= this.execEdge388();

            // Event "Tunnel_MiddleDrainCellar_Regime.c_store".
            edgeExecuted |= this.execEdge389();

            // Event "Tunnel_MiddleTunnelChannel_Broadcast.c_off".
            edgeExecuted |= this.execEdge390();

            // Event "Tunnel_MiddleTunnelChannel_Broadcast.c_on".
            edgeExecuted |= this.execEdge391();

            // Event "Tunnel_MiddleTunnelChannel_Broadcast.c_onManual".
            edgeExecuted |= this.execEdge392();

            // Event "Tunnel_MiddleTunnelChannel_Broadcast.c_suppressed".
            edgeExecuted |= this.execEdge393();

            // Event "Tunnel_MiddleTunnelChannel_Broadcast.c_suppressedManual".
            edgeExecuted |= this.execEdge394();

            // Event "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_Observer.c_cancel".
            edgeExecuted |= this.execEdge395();

            // Event "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_Observer.c_done".
            edgeExecuted |= this.execEdge396();

            // Event "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_Observer.c_cancel".
            edgeExecuted |= this.execEdge397();

            // Event "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_Observer.c_done".
            edgeExecuted |= this.execEdge398();

            // Event "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_Observer.c_cancel".
            edgeExecuted |= this.execEdge399();

            // Event "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_Observer.c_done".
            edgeExecuted |= this.execEdge400();

            // Event "Tunnel_MiddleTunnelChannel_ButtonLightingOff_Observer.c_cancel".
            edgeExecuted |= this.execEdge401();

            // Event "Tunnel_MiddleTunnelChannel_ButtonLightingOff_Observer.c_done".
            edgeExecuted |= this.execEdge402();

            // Event "Tunnel_MiddleTunnelChannel_ButtonLightingOn_Observer.c_cancel".
            edgeExecuted |= this.execEdge403();

            // Event "Tunnel_MiddleTunnelChannel_ButtonLightingOn_Observer.c_done".
            edgeExecuted |= this.execEdge404();

            // Event "Tunnel_MiddleTunnelChannel_ButtonPressureLeft_Observer.c_cancel".
            edgeExecuted |= this.execEdge405();

            // Event "Tunnel_MiddleTunnelChannel_ButtonPressureLeft_Observer.c_done".
            edgeExecuted |= this.execEdge406();

            // Event "Tunnel_MiddleTunnelChannel_ButtonPressureOff_Observer.c_cancel".
            edgeExecuted |= this.execEdge407();

            // Event "Tunnel_MiddleTunnelChannel_ButtonPressureOff_Observer.c_done".
            edgeExecuted |= this.execEdge408();

            // Event "Tunnel_MiddleTunnelChannel_ButtonPressureRight_Observer.c_cancel".
            edgeExecuted |= this.execEdge409();

            // Event "Tunnel_MiddleTunnelChannel_ButtonPressureRight_Observer.c_done".
            edgeExecuted |= this.execEdge410();

            // Event "Tunnel_MiddleTunnelChannel_ButtonStartMessage_Observer.c_cancel".
            edgeExecuted |= this.execEdge411();

            // Event "Tunnel_MiddleTunnelChannel_ButtonStartMessage_Observer.c_done".
            edgeExecuted |= this.execEdge412();

            // Event "Tunnel_MiddleTunnelChannel_ButtonStopMessage_Observer.c_cancel".
            edgeExecuted |= this.execEdge413();

            // Event "Tunnel_MiddleTunnelChannel_ButtonStopMessage_Observer.c_done".
            edgeExecuted |= this.execEdge414();

            // Event "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_Observer.c_cancel".
            edgeExecuted |= this.execEdge415();

            // Event "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_Observer.c_done".
            edgeExecuted |= this.execEdge416();

            // Event "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_Observer.c_cancel".
            edgeExecuted |= this.execEdge417();

            // Event "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_Observer.c_done".
            edgeExecuted |= this.execEdge418();

            // Event "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_Mode.c_auto".
            edgeExecuted |= this.execEdge419();

            // Event "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_Mode.c_manual".
            edgeExecuted |= this.execEdge420();

            // Event "Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_Observer.c_cancel".
            edgeExecuted |= this.execEdge421();

            // Event "Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_Observer.c_done".
            edgeExecuted |= this.execEdge422();

            // Event "Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_Observer.c_cancel".
            edgeExecuted |= this.execEdge423();

            // Event "Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_Observer.c_done".
            edgeExecuted |= this.execEdge424();

            // Event "Tunnel_MiddleTunnelChannel_ControlLighting_Mode.c_auto".
            edgeExecuted |= this.execEdge425();

            // Event "Tunnel_MiddleTunnelChannel_ControlLighting_Mode.c_manual".
            edgeExecuted |= this.execEdge426();

            // Event "Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_Observer.c_cancel".
            edgeExecuted |= this.execEdge427();

            // Event "Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_Observer.c_done".
            edgeExecuted |= this.execEdge428();

            // Event "Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_Observer.c_cancel".
            edgeExecuted |= this.execEdge429();

            // Event "Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_Observer.c_done".
            edgeExecuted |= this.execEdge430();

            // Event "Tunnel_MiddleTunnelChannel_ControlPressure_Mode.c_auto".
            edgeExecuted |= this.execEdge431();

            // Event "Tunnel_MiddleTunnelChannel_ControlPressure_Mode.c_manual".
            edgeExecuted |= this.execEdge432();

            // Event "Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication.c_downward".
            edgeExecuted |= this.execEdge433();

            // Event "Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication.c_off".
            edgeExecuted |= this.execEdge434();

            // Event "Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication.c_upward".
            edgeExecuted |= this.execEdge435();

            // Event "Tunnel_MiddleTunnelChannel_Lighting.c_off".
            edgeExecuted |= this.execEdge436();

            // Event "Tunnel_MiddleTunnelChannel_Lighting.c_on".
            edgeExecuted |= this.execEdge437();

            // Event "Tunnel_MiddleTunnelChannel_Pressure.c_left".
            edgeExecuted |= this.execEdge438();

            // Event "Tunnel_MiddleTunnelChannel_Pressure.c_off".
            edgeExecuted |= this.execEdge439();

            // Event "Tunnel_MiddleTunnelChannel_Pressure.c_right".
            edgeExecuted |= this.execEdge440();

            // Event "Tunnel_Traffictube1_AccessBoombarriers.c_close".
            edgeExecuted |= this.execEdge441();

            // Event "Tunnel_Traffictube1_AccessBoombarriers.c_closeUnconditionally".
            edgeExecuted |= this.execEdge442();

            // Event "Tunnel_Traffictube1_AccessBoombarriers.c_open".
            edgeExecuted |= this.execEdge443();

            // Event "Tunnel_Traffictube1_AccessBoombarriers.c_stop".
            edgeExecuted |= this.execEdge444();

            // Event "Tunnel_Traffictube1_AccessTrafficlights.c_flash".
            edgeExecuted |= this.execEdge445();

            // Event "Tunnel_Traffictube1_AccessTrafficlights.c_off".
            edgeExecuted |= this.execEdge446();

            // Event "Tunnel_Traffictube1_AccessTrafficlights.c_red".
            edgeExecuted |= this.execEdge447();

            // Event "Tunnel_Traffictube1_Boombarrier1_ActuatorDown.c_off".
            edgeExecuted |= this.execEdge448();

            // Event "Tunnel_Traffictube1_Boombarrier1_ActuatorDown.c_offEmergency".
            edgeExecuted |= this.execEdge449();

            // Event "Tunnel_Traffictube1_Boombarrier1_ActuatorDown.c_on".
            edgeExecuted |= this.execEdge450();

            // Event "Tunnel_Traffictube1_Boombarrier1_ActuatorUp.c_off".
            edgeExecuted |= this.execEdge451();

            // Event "Tunnel_Traffictube1_Boombarrier1_ActuatorUp.c_offEmergency".
            edgeExecuted |= this.execEdge452();

            // Event "Tunnel_Traffictube1_Boombarrier1_ActuatorUp.c_on".
            edgeExecuted |= this.execEdge453();

            // Event "Tunnel_Traffictube1_Boombarrier2_ActuatorDown.c_off".
            edgeExecuted |= this.execEdge454();

            // Event "Tunnel_Traffictube1_Boombarrier2_ActuatorDown.c_offEmergency".
            edgeExecuted |= this.execEdge455();

            // Event "Tunnel_Traffictube1_Boombarrier2_ActuatorDown.c_on".
            edgeExecuted |= this.execEdge456();

            // Event "Tunnel_Traffictube1_Boombarrier2_ActuatorUp.c_off".
            edgeExecuted |= this.execEdge457();

            // Event "Tunnel_Traffictube1_Boombarrier2_ActuatorUp.c_offEmergency".
            edgeExecuted |= this.execEdge458();

            // Event "Tunnel_Traffictube1_Boombarrier2_ActuatorUp.c_on".
            edgeExecuted |= this.execEdge459();

            // Event "Tunnel_Traffictube1_Broadcast.c_live".
            edgeExecuted |= this.execEdge460();

            // Event "Tunnel_Traffictube1_Broadcast.c_message".
            edgeExecuted |= this.execEdge461();

            // Event "Tunnel_Traffictube1_Broadcast.c_suppressed".
            edgeExecuted |= this.execEdge462();

            // Event "Tunnel_Traffictube1_ButtonCamera1_Observer.c_cancel".
            edgeExecuted |= this.execEdge463();

            // Event "Tunnel_Traffictube1_ButtonCamera1_Observer.c_done".
            edgeExecuted |= this.execEdge464();

            // Event "Tunnel_Traffictube1_ButtonCamera2_Observer.c_cancel".
            edgeExecuted |= this.execEdge465();

            // Event "Tunnel_Traffictube1_ButtonCamera2_Observer.c_done".
            edgeExecuted |= this.execEdge466();

            // Event "Tunnel_Traffictube1_ButtonCamera3_Observer.c_cancel".
            edgeExecuted |= this.execEdge467();

            // Event "Tunnel_Traffictube1_ButtonCamera3_Observer.c_done".
            edgeExecuted |= this.execEdge468();

            // Event "Tunnel_Traffictube1_ButtonCamera4_Observer.c_cancel".
            edgeExecuted |= this.execEdge469();

            // Event "Tunnel_Traffictube1_ButtonCamera4_Observer.c_done".
            edgeExecuted |= this.execEdge470();

            // Event "Tunnel_Traffictube1_ButtonCamera5_Observer.c_cancel".
            edgeExecuted |= this.execEdge471();

            // Event "Tunnel_Traffictube1_ButtonCamera5_Observer.c_done".
            edgeExecuted |= this.execEdge472();

            // Event "Tunnel_Traffictube1_ButtonCamera6_Observer.c_cancel".
            edgeExecuted |= this.execEdge473();

            // Event "Tunnel_Traffictube1_ButtonCamera6_Observer.c_done".
            edgeExecuted |= this.execEdge474();

            // Event "Tunnel_Traffictube1_ButtonCameraStopView_Observer.c_cancel".
            edgeExecuted |= this.execEdge475();

            // Event "Tunnel_Traffictube1_ButtonCameraStopView_Observer.c_done".
            edgeExecuted |= this.execEdge476();

            // Event "Tunnel_Traffictube1_ButtonCameraView_Observer.c_cancel".
            edgeExecuted |= this.execEdge477();

            // Event "Tunnel_Traffictube1_ButtonCameraView_Observer.c_done".
            edgeExecuted |= this.execEdge478();

            // Event "Tunnel_Traffictube1_ButtonCloseBoombarriers_Observer.c_cancel".
            edgeExecuted |= this.execEdge479();

            // Event "Tunnel_Traffictube1_ButtonCloseBoombarriers_Observer.c_done".
            edgeExecuted |= this.execEdge480();

            // Event "Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_Observer.c_cancel".
            edgeExecuted |= this.execEdge481();

            // Event "Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_Observer.c_done".
            edgeExecuted |= this.execEdge482();

            // Event "Tunnel_Traffictube1_ButtonEmergency_Observer.c_cancel".
            edgeExecuted |= this.execEdge483();

            // Event "Tunnel_Traffictube1_ButtonEmergency_Observer.c_done".
            edgeExecuted |= this.execEdge484();

            // Event "Tunnel_Traffictube1_ButtonEvacuation_Observer.c_cancel".
            edgeExecuted |= this.execEdge485();

            // Event "Tunnel_Traffictube1_ButtonEvacuation_Observer.c_done".
            edgeExecuted |= this.execEdge486();

            // Event "Tunnel_Traffictube1_ButtonFlashTrafficlights_Observer.c_cancel".
            edgeExecuted |= this.execEdge487();

            // Event "Tunnel_Traffictube1_ButtonFlashTrafficlights_Observer.c_done".
            edgeExecuted |= this.execEdge488();

            // Event "Tunnel_Traffictube1_ButtonLighting0_Observer.c_cancel".
            edgeExecuted |= this.execEdge489();

            // Event "Tunnel_Traffictube1_ButtonLighting0_Observer.c_done".
            edgeExecuted |= this.execEdge490();

            // Event "Tunnel_Traffictube1_ButtonLighting1_Observer.c_cancel".
            edgeExecuted |= this.execEdge491();

            // Event "Tunnel_Traffictube1_ButtonLighting1_Observer.c_done".
            edgeExecuted |= this.execEdge492();

            // Event "Tunnel_Traffictube1_ButtonLighting2_Observer.c_cancel".
            edgeExecuted |= this.execEdge493();

            // Event "Tunnel_Traffictube1_ButtonLighting2_Observer.c_done".
            edgeExecuted |= this.execEdge494();

            // Event "Tunnel_Traffictube1_ButtonLighting3_Observer.c_cancel".
            edgeExecuted |= this.execEdge495();

            // Event "Tunnel_Traffictube1_ButtonLighting3_Observer.c_done".
            edgeExecuted |= this.execEdge496();

            // Event "Tunnel_Traffictube1_ButtonLighting4_Observer.c_cancel".
            edgeExecuted |= this.execEdge497();

            // Event "Tunnel_Traffictube1_ButtonLighting4_Observer.c_done".
            edgeExecuted |= this.execEdge498();

            // Event "Tunnel_Traffictube1_ButtonLighting5_Observer.c_cancel".
            edgeExecuted |= this.execEdge499();

            // Event "Tunnel_Traffictube1_ButtonLighting5_Observer.c_done".
            edgeExecuted |= this.execEdge500();

            // Event "Tunnel_Traffictube1_ButtonLighting6_Observer.c_cancel".
            edgeExecuted |= this.execEdge501();

            // Event "Tunnel_Traffictube1_ButtonLighting6_Observer.c_done".
            edgeExecuted |= this.execEdge502();

            // Event "Tunnel_Traffictube1_ButtonLighting7_Observer.c_cancel".
            edgeExecuted |= this.execEdge503();

            // Event "Tunnel_Traffictube1_ButtonLighting7_Observer.c_done".
            edgeExecuted |= this.execEdge504();

            // Event "Tunnel_Traffictube1_ButtonLighting8_Observer.c_cancel".
            edgeExecuted |= this.execEdge505();

            // Event "Tunnel_Traffictube1_ButtonLighting8_Observer.c_done".
            edgeExecuted |= this.execEdge506();

            // Event "Tunnel_Traffictube1_ButtonLive_Observer.c_cancel".
            edgeExecuted |= this.execEdge507();

            // Event "Tunnel_Traffictube1_ButtonLive_Observer.c_done".
            edgeExecuted |= this.execEdge508();

            // Event "Tunnel_Traffictube1_ButtonMaintenance_Observer.c_cancel".
            edgeExecuted |= this.execEdge509();

            // Event "Tunnel_Traffictube1_ButtonMaintenance_Observer.c_done".
            edgeExecuted |= this.execEdge510();

            // Event "Tunnel_Traffictube1_ButtonMessage_Observer.c_cancel".
            edgeExecuted |= this.execEdge511();

            // Event "Tunnel_Traffictube1_ButtonMessage_Observer.c_done".
            edgeExecuted |= this.execEdge512();

            // Event "Tunnel_Traffictube1_ButtonOffTrafficlights_Observer.c_cancel".
            edgeExecuted |= this.execEdge513();

            // Event "Tunnel_Traffictube1_ButtonOffTrafficlights_Observer.c_done".
            edgeExecuted |= this.execEdge514();

            // Event "Tunnel_Traffictube1_ButtonOpenBoombarriers_Observer.c_cancel".
            edgeExecuted |= this.execEdge515();

            // Event "Tunnel_Traffictube1_ButtonOpenBoombarriers_Observer.c_done".
            edgeExecuted |= this.execEdge516();

            // Event "Tunnel_Traffictube1_ButtonOperational_Observer.c_cancel".
            edgeExecuted |= this.execEdge517();

            // Event "Tunnel_Traffictube1_ButtonOperational_Observer.c_done".
            edgeExecuted |= this.execEdge518();

            // Event "Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_Observer.c_cancel".
            edgeExecuted |= this.execEdge519();

            // Event "Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_Observer.c_done".
            edgeExecuted |= this.execEdge520();

            // Event "Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_Observer.c_cancel".
            edgeExecuted |= this.execEdge521();

            // Event "Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_Observer.c_done".
            edgeExecuted |= this.execEdge522();

            // Event "Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_Observer.c_cancel".
            edgeExecuted |= this.execEdge523();

            // Event "Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_Observer.c_done".
            edgeExecuted |= this.execEdge524();

            // Event "Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_Observer.c_cancel".
            edgeExecuted |= this.execEdge525();

            // Event "Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_Observer.c_done".
            edgeExecuted |= this.execEdge526();

            // Event "Tunnel_Traffictube1_ButtonRecovery_Observer.c_cancel".
            edgeExecuted |= this.execEdge527();

            // Event "Tunnel_Traffictube1_ButtonRecovery_Observer.c_done".
            edgeExecuted |= this.execEdge528();

            // Event "Tunnel_Traffictube1_ButtonRedTrafficlights_Observer.c_cancel".
            edgeExecuted |= this.execEdge529();

            // Event "Tunnel_Traffictube1_ButtonRedTrafficlights_Observer.c_done".
            edgeExecuted |= this.execEdge530();

            // Event "Tunnel_Traffictube1_ButtonStopBoombarriers_Observer.c_cancel".
            edgeExecuted |= this.execEdge531();

            // Event "Tunnel_Traffictube1_ButtonStopBoombarriers_Observer.c_done".
            edgeExecuted |= this.execEdge532();

            // Event "Tunnel_Traffictube1_ButtonVentilation0_Observer.c_cancel".
            edgeExecuted |= this.execEdge533();

            // Event "Tunnel_Traffictube1_ButtonVentilation0_Observer.c_done".
            edgeExecuted |= this.execEdge534();

            // Event "Tunnel_Traffictube1_ButtonVentilation1_Observer.c_cancel".
            edgeExecuted |= this.execEdge535();

            // Event "Tunnel_Traffictube1_ButtonVentilation1_Observer.c_done".
            edgeExecuted |= this.execEdge536();

            // Event "Tunnel_Traffictube1_ButtonVentilation2_Observer.c_cancel".
            edgeExecuted |= this.execEdge537();

            // Event "Tunnel_Traffictube1_ButtonVentilation2_Observer.c_done".
            edgeExecuted |= this.execEdge538();

            // Event "Tunnel_Traffictube1_ButtonVentilation3_Observer.c_cancel".
            edgeExecuted |= this.execEdge539();

            // Event "Tunnel_Traffictube1_ButtonVentilation3_Observer.c_done".
            edgeExecuted |= this.execEdge540();

            // Event "Tunnel_Traffictube1_ButtonVentilation4_Observer.c_cancel".
            edgeExecuted |= this.execEdge541();

            // Event "Tunnel_Traffictube1_ButtonVentilation4_Observer.c_done".
            edgeExecuted |= this.execEdge542();

            // Event "Tunnel_Traffictube1_ButtonVentilation5_Observer.c_cancel".
            edgeExecuted |= this.execEdge543();

            // Event "Tunnel_Traffictube1_ButtonVentilation5_Observer.c_done".
            edgeExecuted |= this.execEdge544();

            // Event "Tunnel_Traffictube1_ButtonVentilation6_Observer.c_cancel".
            edgeExecuted |= this.execEdge545();

            // Event "Tunnel_Traffictube1_ButtonVentilation6_Observer.c_done".
            edgeExecuted |= this.execEdge546();

            // Event "Tunnel_Traffictube1_ButtonVentilation7_Observer.c_cancel".
            edgeExecuted |= this.execEdge547();

            // Event "Tunnel_Traffictube1_ButtonVentilation7_Observer.c_done".
            edgeExecuted |= this.execEdge548();

            // Event "Tunnel_Traffictube1_ButtonVentilation8_Observer.c_cancel".
            edgeExecuted |= this.execEdge549();

            // Event "Tunnel_Traffictube1_ButtonVentilation8_Observer.c_done".
            edgeExecuted |= this.execEdge550();

            // Event "Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_Observer.c_cancel".
            edgeExecuted |= this.execEdge551();

            // Event "Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_Observer.c_done".
            edgeExecuted |= this.execEdge552();

            // Event "Tunnel_Traffictube1_ButtonVentilationDrivingDirection_Observer.c_cancel".
            edgeExecuted |= this.execEdge553();

            // Event "Tunnel_Traffictube1_ButtonVentilationDrivingDirection_Observer.c_done".
            edgeExecuted |= this.execEdge554();

            // Event "Tunnel_Traffictube1_CCTV.c_off1".
            edgeExecuted |= this.execEdge555();

            // Event "Tunnel_Traffictube1_CCTV.c_off2".
            edgeExecuted |= this.execEdge556();

            // Event "Tunnel_Traffictube1_CCTV.c_off3".
            edgeExecuted |= this.execEdge557();

            // Event "Tunnel_Traffictube1_CCTV.c_off4".
            edgeExecuted |= this.execEdge558();

            // Event "Tunnel_Traffictube1_CCTV.c_off5".
            edgeExecuted |= this.execEdge559();

            // Event "Tunnel_Traffictube1_CCTV.c_off6".
            edgeExecuted |= this.execEdge560();

            // Event "Tunnel_Traffictube1_CCTV.c_on1".
            edgeExecuted |= this.execEdge561();

            // Event "Tunnel_Traffictube1_CCTV.c_on2".
            edgeExecuted |= this.execEdge562();

            // Event "Tunnel_Traffictube1_CCTV.c_on3".
            edgeExecuted |= this.execEdge563();

            // Event "Tunnel_Traffictube1_CCTV.c_on4".
            edgeExecuted |= this.execEdge564();

            // Event "Tunnel_Traffictube1_CCTV.c_on5".
            edgeExecuted |= this.execEdge565();

            // Event "Tunnel_Traffictube1_CCTV.c_on6".
            edgeExecuted |= this.execEdge566();

            // Event "Tunnel_Traffictube1_CCTV.c_start".
            edgeExecuted |= this.execEdge567();

            // Event "Tunnel_Traffictube1_CCTV.c_stop".
            edgeExecuted |= this.execEdge568();

            // Event "Tunnel_Traffictube1_CCTV.c_view".
            edgeExecuted |= this.execEdge569();

            // Event "Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_Observer.c_cancel".
            edgeExecuted |= this.execEdge570();

            // Event "Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_Observer.c_done".
            edgeExecuted |= this.execEdge571();

            // Event "Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_Observer.c_cancel".
            edgeExecuted |= this.execEdge572();

            // Event "Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_Observer.c_done".
            edgeExecuted |= this.execEdge573();

            // Event "Tunnel_Traffictube1_ControlBoombarriers_Mode.c_auto".
            edgeExecuted |= this.execEdge574();

            // Event "Tunnel_Traffictube1_ControlBoombarriers_Mode.c_manual".
            edgeExecuted |= this.execEdge575();

            // Event "Tunnel_Traffictube1_ControlLighting_ButtonAuto_Observer.c_cancel".
            edgeExecuted |= this.execEdge576();

            // Event "Tunnel_Traffictube1_ControlLighting_ButtonAuto_Observer.c_done".
            edgeExecuted |= this.execEdge577();

            // Event "Tunnel_Traffictube1_ControlLighting_ButtonManual_Observer.c_cancel".
            edgeExecuted |= this.execEdge578();

            // Event "Tunnel_Traffictube1_ControlLighting_ButtonManual_Observer.c_done".
            edgeExecuted |= this.execEdge579();

            // Event "Tunnel_Traffictube1_ControlLighting_Mode.c_auto".
            edgeExecuted |= this.execEdge580();

            // Event "Tunnel_Traffictube1_ControlLighting_Mode.c_manual".
            edgeExecuted |= this.execEdge581();

            // Event "Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_Observer.c_cancel".
            edgeExecuted |= this.execEdge582();

            // Event "Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_Observer.c_done".
            edgeExecuted |= this.execEdge583();

            // Event "Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_Observer.c_cancel".
            edgeExecuted |= this.execEdge584();

            // Event "Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_Observer.c_done".
            edgeExecuted |= this.execEdge585();

            // Event "Tunnel_Traffictube1_ControlTrafficlights_Mode.c_auto".
            edgeExecuted |= this.execEdge586();

            // Event "Tunnel_Traffictube1_ControlTrafficlights_Mode.c_manual".
            edgeExecuted |= this.execEdge587();

            // Event "Tunnel_Traffictube1_ControlVentilation_ButtonAuto_Observer.c_cancel".
            edgeExecuted |= this.execEdge588();

            // Event "Tunnel_Traffictube1_ControlVentilation_ButtonAuto_Observer.c_done".
            edgeExecuted |= this.execEdge589();

            // Event "Tunnel_Traffictube1_ControlVentilation_ButtonManual_Observer.c_cancel".
            edgeExecuted |= this.execEdge590();

            // Event "Tunnel_Traffictube1_ControlVentilation_ButtonManual_Observer.c_done".
            edgeExecuted |= this.execEdge591();

            // Event "Tunnel_Traffictube1_ControlVentilation_Mode.c_auto".
            edgeExecuted |= this.execEdge592();

            // Event "Tunnel_Traffictube1_ControlVentilation_Mode.c_manual".
            edgeExecuted |= this.execEdge593();

            // Event "Tunnel_Traffictube1_EscapeDoor_Broadcast.c_off".
            edgeExecuted |= this.execEdge594();

            // Event "Tunnel_Traffictube1_EscapeDoor_Broadcast.c_on".
            edgeExecuted |= this.execEdge595();

            // Event "Tunnel_Traffictube1_EscapeDoor_Broadcast.c_suppressed".
            edgeExecuted |= this.execEdge596();

            // Event "Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_Observer.c_cancel".
            edgeExecuted |= this.execEdge597();

            // Event "Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_Observer.c_done".
            edgeExecuted |= this.execEdge598();

            // Event "Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_Observer.c_cancel".
            edgeExecuted |= this.execEdge599();

            // Event "Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_Observer.c_done".
            edgeExecuted |= this.execEdge600();

            // Event "Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_Observer.c_cancel".
            edgeExecuted |= this.execEdge601();

            // Event "Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_Observer.c_done".
            edgeExecuted |= this.execEdge602();

            // Event "Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_Observer.c_cancel".
            edgeExecuted |= this.execEdge603();

            // Event "Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_Observer.c_done".
            edgeExecuted |= this.execEdge604();

            // Event "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_Observer.c_cancel".
            edgeExecuted |= this.execEdge605();

            // Event "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_Observer.c_done".
            edgeExecuted |= this.execEdge606();

            // Event "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_Observer.c_cancel".
            edgeExecuted |= this.execEdge607();

            // Event "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_Observer.c_done".
            edgeExecuted |= this.execEdge608();

            // Event "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_Mode.c_auto".
            edgeExecuted |= this.execEdge609();

            // Event "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_Mode.c_manual".
            edgeExecuted |= this.execEdge610();

            // Event "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer.c_cancel".
            edgeExecuted |= this.execEdge611();

            // Event "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer.c_done".
            edgeExecuted |= this.execEdge612();

            // Event "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_Observer.c_cancel".
            edgeExecuted |= this.execEdge613();

            // Event "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_Observer.c_done".
            edgeExecuted |= this.execEdge614();

            // Event "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_Mode.c_auto".
            edgeExecuted |= this.execEdge615();

            // Event "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_Mode.c_manual".
            edgeExecuted |= this.execEdge616();

            // Event "Tunnel_Traffictube1_EscapeDoor_RouteIndication.c_off".
            edgeExecuted |= this.execEdge617();

            // Event "Tunnel_Traffictube1_EscapeDoor_RouteIndication.c_on".
            edgeExecuted |= this.execEdge618();

            // Event "Tunnel_Traffictube1_J32_Mode.c_off".
            edgeExecuted |= this.execEdge619();

            // Event "Tunnel_Traffictube1_J32_Mode.c_on".
            edgeExecuted |= this.execEdge620();

            // Event "Tunnel_Traffictube1_J32_TimerReleaseSignal.c_on".
            edgeExecuted |= this.execEdge621();

            // Event "Tunnel_Traffictube1_J32_TimerReleaseSignal.c_reset".
            edgeExecuted |= this.execEdge622();

            // Event "Tunnel_Traffictube1_Lighting.c_0".
            edgeExecuted |= this.execEdge623();

            // Event "Tunnel_Traffictube1_Lighting.c_1".
            edgeExecuted |= this.execEdge624();

            // Event "Tunnel_Traffictube1_Lighting.c_2".
            edgeExecuted |= this.execEdge625();

            // Event "Tunnel_Traffictube1_Lighting.c_3".
            edgeExecuted |= this.execEdge626();

            // Event "Tunnel_Traffictube1_Lighting.c_4".
            edgeExecuted |= this.execEdge627();

            // Event "Tunnel_Traffictube1_Lighting.c_5".
            edgeExecuted |= this.execEdge628();

            // Event "Tunnel_Traffictube1_Lighting.c_6".
            edgeExecuted |= this.execEdge629();

            // Event "Tunnel_Traffictube1_Lighting.c_7".
            edgeExecuted |= this.execEdge630();

            // Event "Tunnel_Traffictube1_Lighting.c_8".
            edgeExecuted |= this.execEdge631();

            // Event "Tunnel_Traffictube1_MatrixsignTrafficlight.c_off".
            edgeExecuted |= this.execEdge632();

            // Event "Tunnel_Traffictube1_MatrixsignTrafficlight.c_on".
            edgeExecuted |= this.execEdge633();

            // Event "Tunnel_Traffictube1_MatrixsignUnpressed.c_off".
            edgeExecuted |= this.execEdge634();

            // Event "Tunnel_Traffictube1_MatrixsignUnpressed.c_on".
            edgeExecuted |= this.execEdge635();

            // Event "Tunnel_Traffictube1_ModeTraffictube.c_emergency".
            edgeExecuted |= this.execEdge636();

            // Event "Tunnel_Traffictube1_ModeTraffictube.c_evacuation".
            edgeExecuted |= this.execEdge637();

            // Event "Tunnel_Traffictube1_ModeTraffictube.c_evacuationEmergency".
            edgeExecuted |= this.execEdge638();

            // Event "Tunnel_Traffictube1_ModeTraffictube.c_maintenance".
            edgeExecuted |= this.execEdge639();

            // Event "Tunnel_Traffictube1_ModeTraffictube.c_operational".
            edgeExecuted |= this.execEdge640();

            // Event "Tunnel_Traffictube1_ModeTraffictube.c_recovery".
            edgeExecuted |= this.execEdge641();

            // Event "Tunnel_Traffictube1_ModeTraffictube.c_standby".
            edgeExecuted |= this.execEdge642();

            // Event "Tunnel_Traffictube1_ModeTraffictube.c_support".
            edgeExecuted |= this.execEdge643();

            // Event "Tunnel_Traffictube1_PopUp_ButtonAccept_Observer.c_cancel".
            edgeExecuted |= this.execEdge644();

            // Event "Tunnel_Traffictube1_PopUp_ButtonAccept_Observer.c_done".
            edgeExecuted |= this.execEdge645();

            // Event "Tunnel_Traffictube1_PopUp_ButtonReject_Observer.c_cancel".
            edgeExecuted |= this.execEdge646();

            // Event "Tunnel_Traffictube1_PopUp_ButtonReject_Observer.c_done".
            edgeExecuted |= this.execEdge647();

            // Event "Tunnel_Traffictube1_PopUp_Timer.c_on".
            edgeExecuted |= this.execEdge648();

            // Event "Tunnel_Traffictube1_PopUp_Timer.c_reset".
            edgeExecuted |= this.execEdge649();

            // Event "Tunnel_Traffictube1_PopUp_Window.c_off".
            edgeExecuted |= this.execEdge650();

            // Event "Tunnel_Traffictube1_PopUp_Window.c_on".
            edgeExecuted |= this.execEdge651();

            // Event "Tunnel_Traffictube1_Recorder.c_off".
            edgeExecuted |= this.execEdge652();

            // Event "Tunnel_Traffictube1_Recorder.c_on".
            edgeExecuted |= this.execEdge653();

            // Event "Tunnel_Traffictube1_SwitchTimerAudio.c_off".
            edgeExecuted |= this.execEdge654();

            // Event "Tunnel_Traffictube1_SwitchTimerAudio.c_on".
            edgeExecuted |= this.execEdge655();

            // Event "Tunnel_Traffictube1_TimerCameraViewEven.c_on".
            edgeExecuted |= this.execEdge656();

            // Event "Tunnel_Traffictube1_TimerCameraViewEven.c_reset".
            edgeExecuted |= this.execEdge657();

            // Event "Tunnel_Traffictube1_TimerCameraViewUneven.c_on".
            edgeExecuted |= this.execEdge658();

            // Event "Tunnel_Traffictube1_TimerCameraViewUneven.c_reset".
            edgeExecuted |= this.execEdge659();

            // Event "Tunnel_Traffictube1_Trafficlight1_Mode.c_flash".
            edgeExecuted |= this.execEdge660();

            // Event "Tunnel_Traffictube1_Trafficlight1_Mode.c_off".
            edgeExecuted |= this.execEdge661();

            // Event "Tunnel_Traffictube1_Trafficlight1_Mode.c_red".
            edgeExecuted |= this.execEdge662();

            // Event "Tunnel_Traffictube1_Trafficlight1_Mode.c_yellow".
            edgeExecuted |= this.execEdge663();

            // Event "Tunnel_Traffictube1_Trafficlight1_TimerReleaseSignal.c_on".
            edgeExecuted |= this.execEdge664();

            // Event "Tunnel_Traffictube1_Trafficlight1_TimerReleaseSignal.c_reset".
            edgeExecuted |= this.execEdge665();

            // Event "Tunnel_Traffictube1_Trafficlight2_Mode.c_flash".
            edgeExecuted |= this.execEdge666();

            // Event "Tunnel_Traffictube1_Trafficlight2_Mode.c_off".
            edgeExecuted |= this.execEdge667();

            // Event "Tunnel_Traffictube1_Trafficlight2_Mode.c_red".
            edgeExecuted |= this.execEdge668();

            // Event "Tunnel_Traffictube1_Trafficlight2_Mode.c_yellow".
            edgeExecuted |= this.execEdge669();

            // Event "Tunnel_Traffictube1_Trafficlight2_TimerReleaseSignal.c_on".
            edgeExecuted |= this.execEdge670();

            // Event "Tunnel_Traffictube1_Trafficlight2_TimerReleaseSignal.c_reset".
            edgeExecuted |= this.execEdge671();

            // Event "Tunnel_Traffictube1_Trafficlight3_Mode.c_flash".
            edgeExecuted |= this.execEdge672();

            // Event "Tunnel_Traffictube1_Trafficlight3_Mode.c_off".
            edgeExecuted |= this.execEdge673();

            // Event "Tunnel_Traffictube1_Trafficlight3_Mode.c_red".
            edgeExecuted |= this.execEdge674();

            // Event "Tunnel_Traffictube1_Trafficlight3_Mode.c_yellow".
            edgeExecuted |= this.execEdge675();

            // Event "Tunnel_Traffictube1_Trafficlight3_TimerReleaseSignal.c_on".
            edgeExecuted |= this.execEdge676();

            // Event "Tunnel_Traffictube1_Trafficlight3_TimerReleaseSignal.c_reset".
            edgeExecuted |= this.execEdge677();

            // Event "Tunnel_Traffictube1_Ventilation.c_0".
            edgeExecuted |= this.execEdge678();

            // Event "Tunnel_Traffictube1_Ventilation.c_1".
            edgeExecuted |= this.execEdge679();

            // Event "Tunnel_Traffictube1_Ventilation.c_2".
            edgeExecuted |= this.execEdge680();

            // Event "Tunnel_Traffictube1_Ventilation.c_3".
            edgeExecuted |= this.execEdge681();

            // Event "Tunnel_Traffictube1_Ventilation.c_4".
            edgeExecuted |= this.execEdge682();

            // Event "Tunnel_Traffictube1_Ventilation.c_5".
            edgeExecuted |= this.execEdge683();

            // Event "Tunnel_Traffictube1_Ventilation.c_6".
            edgeExecuted |= this.execEdge684();

            // Event "Tunnel_Traffictube1_Ventilation.c_7".
            edgeExecuted |= this.execEdge685();

            // Event "Tunnel_Traffictube1_Ventilation.c_8".
            edgeExecuted |= this.execEdge686();

            // Event "Tunnel_Traffictube1_VentilationDirection.c_againstDrivingDirection".
            edgeExecuted |= this.execEdge687();

            // Event "Tunnel_Traffictube1_VentilationDirection.c_drivingDirection".
            edgeExecuted |= this.execEdge688();

            // Event "Tunnel_Traffictube1_VentilationEntrance.c_0".
            edgeExecuted |= this.execEdge689();

            // Event "Tunnel_Traffictube1_VentilationEntrance.c_1".
            edgeExecuted |= this.execEdge690();

            // Event "Tunnel_Traffictube1_VentilationEntrance.c_2".
            edgeExecuted |= this.execEdge691();

            // Event "Tunnel_Traffictube1_VentilationEntrance.c_3".
            edgeExecuted |= this.execEdge692();

            // Event "Tunnel_Traffictube1_VentilationEntrance.c_4".
            edgeExecuted |= this.execEdge693();

            // Event "Tunnel_Traffictube1_VentilationEntrance.c_5".
            edgeExecuted |= this.execEdge694();

            // Event "Tunnel_Traffictube1_VentilationEntrance.c_6".
            edgeExecuted |= this.execEdge695();

            // Event "Tunnel_Traffictube1_VentilationEntrance.c_7".
            edgeExecuted |= this.execEdge696();

            // Event "Tunnel_Traffictube1_VentilationEntrance.c_8".
            edgeExecuted |= this.execEdge697();

            // Event "Tunnel_Traffictube2_AccessBoombarriers.c_close".
            edgeExecuted |= this.execEdge698();

            // Event "Tunnel_Traffictube2_AccessBoombarriers.c_closeUnconditionally".
            edgeExecuted |= this.execEdge699();

            // Event "Tunnel_Traffictube2_AccessBoombarriers.c_open".
            edgeExecuted |= this.execEdge700();

            // Event "Tunnel_Traffictube2_AccessBoombarriers.c_stop".
            edgeExecuted |= this.execEdge701();

            // Event "Tunnel_Traffictube2_AccessTrafficlights.c_flash".
            edgeExecuted |= this.execEdge702();

            // Event "Tunnel_Traffictube2_AccessTrafficlights.c_off".
            edgeExecuted |= this.execEdge703();

            // Event "Tunnel_Traffictube2_AccessTrafficlights.c_red".
            edgeExecuted |= this.execEdge704();

            // Event "Tunnel_Traffictube2_Boombarrier1_ActuatorDown.c_off".
            edgeExecuted |= this.execEdge705();

            // Event "Tunnel_Traffictube2_Boombarrier1_ActuatorDown.c_offEmergency".
            edgeExecuted |= this.execEdge706();

            // Event "Tunnel_Traffictube2_Boombarrier1_ActuatorDown.c_on".
            edgeExecuted |= this.execEdge707();

            // Event "Tunnel_Traffictube2_Boombarrier1_ActuatorUp.c_off".
            edgeExecuted |= this.execEdge708();

            // Event "Tunnel_Traffictube2_Boombarrier1_ActuatorUp.c_offEmergency".
            edgeExecuted |= this.execEdge709();

            // Event "Tunnel_Traffictube2_Boombarrier1_ActuatorUp.c_on".
            edgeExecuted |= this.execEdge710();

            // Event "Tunnel_Traffictube2_Boombarrier2_ActuatorDown.c_off".
            edgeExecuted |= this.execEdge711();

            // Event "Tunnel_Traffictube2_Boombarrier2_ActuatorDown.c_offEmergency".
            edgeExecuted |= this.execEdge712();

            // Event "Tunnel_Traffictube2_Boombarrier2_ActuatorDown.c_on".
            edgeExecuted |= this.execEdge713();

            // Event "Tunnel_Traffictube2_Boombarrier2_ActuatorUp.c_off".
            edgeExecuted |= this.execEdge714();

            // Event "Tunnel_Traffictube2_Boombarrier2_ActuatorUp.c_offEmergency".
            edgeExecuted |= this.execEdge715();

            // Event "Tunnel_Traffictube2_Boombarrier2_ActuatorUp.c_on".
            edgeExecuted |= this.execEdge716();

            // Event "Tunnel_Traffictube2_Broadcast.c_live".
            edgeExecuted |= this.execEdge717();

            // Event "Tunnel_Traffictube2_Broadcast.c_message".
            edgeExecuted |= this.execEdge718();

            // Event "Tunnel_Traffictube2_Broadcast.c_suppressed".
            edgeExecuted |= this.execEdge719();

            // Event "Tunnel_Traffictube2_ButtonCamera1_Observer.c_cancel".
            edgeExecuted |= this.execEdge720();

            // Event "Tunnel_Traffictube2_ButtonCamera1_Observer.c_done".
            edgeExecuted |= this.execEdge721();

            // Event "Tunnel_Traffictube2_ButtonCamera2_Observer.c_cancel".
            edgeExecuted |= this.execEdge722();

            // Event "Tunnel_Traffictube2_ButtonCamera2_Observer.c_done".
            edgeExecuted |= this.execEdge723();

            // Event "Tunnel_Traffictube2_ButtonCamera3_Observer.c_cancel".
            edgeExecuted |= this.execEdge724();

            // Event "Tunnel_Traffictube2_ButtonCamera3_Observer.c_done".
            edgeExecuted |= this.execEdge725();

            // Event "Tunnel_Traffictube2_ButtonCamera4_Observer.c_cancel".
            edgeExecuted |= this.execEdge726();

            // Event "Tunnel_Traffictube2_ButtonCamera4_Observer.c_done".
            edgeExecuted |= this.execEdge727();

            // Event "Tunnel_Traffictube2_ButtonCamera5_Observer.c_cancel".
            edgeExecuted |= this.execEdge728();

            // Event "Tunnel_Traffictube2_ButtonCamera5_Observer.c_done".
            edgeExecuted |= this.execEdge729();

            // Event "Tunnel_Traffictube2_ButtonCamera6_Observer.c_cancel".
            edgeExecuted |= this.execEdge730();

            // Event "Tunnel_Traffictube2_ButtonCamera6_Observer.c_done".
            edgeExecuted |= this.execEdge731();

            // Event "Tunnel_Traffictube2_ButtonCameraStopView_Observer.c_cancel".
            edgeExecuted |= this.execEdge732();

            // Event "Tunnel_Traffictube2_ButtonCameraStopView_Observer.c_done".
            edgeExecuted |= this.execEdge733();

            // Event "Tunnel_Traffictube2_ButtonCameraView_Observer.c_cancel".
            edgeExecuted |= this.execEdge734();

            // Event "Tunnel_Traffictube2_ButtonCameraView_Observer.c_done".
            edgeExecuted |= this.execEdge735();

            // Event "Tunnel_Traffictube2_ButtonCloseBoombarriers_Observer.c_cancel".
            edgeExecuted |= this.execEdge736();

            // Event "Tunnel_Traffictube2_ButtonCloseBoombarriers_Observer.c_done".
            edgeExecuted |= this.execEdge737();

            // Event "Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_Observer.c_cancel".
            edgeExecuted |= this.execEdge738();

            // Event "Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_Observer.c_done".
            edgeExecuted |= this.execEdge739();

            // Event "Tunnel_Traffictube2_ButtonEmergency_Observer.c_cancel".
            edgeExecuted |= this.execEdge740();

            // Event "Tunnel_Traffictube2_ButtonEmergency_Observer.c_done".
            edgeExecuted |= this.execEdge741();

            // Event "Tunnel_Traffictube2_ButtonEvacuation_Observer.c_cancel".
            edgeExecuted |= this.execEdge742();

            // Event "Tunnel_Traffictube2_ButtonEvacuation_Observer.c_done".
            edgeExecuted |= this.execEdge743();

            // Event "Tunnel_Traffictube2_ButtonFlashTrafficlights_Observer.c_cancel".
            edgeExecuted |= this.execEdge744();

            // Event "Tunnel_Traffictube2_ButtonFlashTrafficlights_Observer.c_done".
            edgeExecuted |= this.execEdge745();

            // Event "Tunnel_Traffictube2_ButtonLighting0_Observer.c_cancel".
            edgeExecuted |= this.execEdge746();

            // Event "Tunnel_Traffictube2_ButtonLighting0_Observer.c_done".
            edgeExecuted |= this.execEdge747();

            // Event "Tunnel_Traffictube2_ButtonLighting1_Observer.c_cancel".
            edgeExecuted |= this.execEdge748();

            // Event "Tunnel_Traffictube2_ButtonLighting1_Observer.c_done".
            edgeExecuted |= this.execEdge749();

            // Event "Tunnel_Traffictube2_ButtonLighting2_Observer.c_cancel".
            edgeExecuted |= this.execEdge750();

            // Event "Tunnel_Traffictube2_ButtonLighting2_Observer.c_done".
            edgeExecuted |= this.execEdge751();

            // Event "Tunnel_Traffictube2_ButtonLighting3_Observer.c_cancel".
            edgeExecuted |= this.execEdge752();

            // Event "Tunnel_Traffictube2_ButtonLighting3_Observer.c_done".
            edgeExecuted |= this.execEdge753();

            // Event "Tunnel_Traffictube2_ButtonLighting4_Observer.c_cancel".
            edgeExecuted |= this.execEdge754();

            // Event "Tunnel_Traffictube2_ButtonLighting4_Observer.c_done".
            edgeExecuted |= this.execEdge755();

            // Event "Tunnel_Traffictube2_ButtonLighting5_Observer.c_cancel".
            edgeExecuted |= this.execEdge756();

            // Event "Tunnel_Traffictube2_ButtonLighting5_Observer.c_done".
            edgeExecuted |= this.execEdge757();

            // Event "Tunnel_Traffictube2_ButtonLighting6_Observer.c_cancel".
            edgeExecuted |= this.execEdge758();

            // Event "Tunnel_Traffictube2_ButtonLighting6_Observer.c_done".
            edgeExecuted |= this.execEdge759();

            // Event "Tunnel_Traffictube2_ButtonLighting7_Observer.c_cancel".
            edgeExecuted |= this.execEdge760();

            // Event "Tunnel_Traffictube2_ButtonLighting7_Observer.c_done".
            edgeExecuted |= this.execEdge761();

            // Event "Tunnel_Traffictube2_ButtonLighting8_Observer.c_cancel".
            edgeExecuted |= this.execEdge762();

            // Event "Tunnel_Traffictube2_ButtonLighting8_Observer.c_done".
            edgeExecuted |= this.execEdge763();

            // Event "Tunnel_Traffictube2_ButtonLive_Observer.c_cancel".
            edgeExecuted |= this.execEdge764();

            // Event "Tunnel_Traffictube2_ButtonLive_Observer.c_done".
            edgeExecuted |= this.execEdge765();

            // Event "Tunnel_Traffictube2_ButtonMaintenance_Observer.c_cancel".
            edgeExecuted |= this.execEdge766();

            // Event "Tunnel_Traffictube2_ButtonMaintenance_Observer.c_done".
            edgeExecuted |= this.execEdge767();

            // Event "Tunnel_Traffictube2_ButtonMessage_Observer.c_cancel".
            edgeExecuted |= this.execEdge768();

            // Event "Tunnel_Traffictube2_ButtonMessage_Observer.c_done".
            edgeExecuted |= this.execEdge769();

            // Event "Tunnel_Traffictube2_ButtonOffTrafficlights_Observer.c_cancel".
            edgeExecuted |= this.execEdge770();

            // Event "Tunnel_Traffictube2_ButtonOffTrafficlights_Observer.c_done".
            edgeExecuted |= this.execEdge771();

            // Event "Tunnel_Traffictube2_ButtonOpenBoombarriers_Observer.c_cancel".
            edgeExecuted |= this.execEdge772();

            // Event "Tunnel_Traffictube2_ButtonOpenBoombarriers_Observer.c_done".
            edgeExecuted |= this.execEdge773();

            // Event "Tunnel_Traffictube2_ButtonOperational_Observer.c_cancel".
            edgeExecuted |= this.execEdge774();

            // Event "Tunnel_Traffictube2_ButtonOperational_Observer.c_done".
            edgeExecuted |= this.execEdge775();

            // Event "Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_Observer.c_cancel".
            edgeExecuted |= this.execEdge776();

            // Event "Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_Observer.c_done".
            edgeExecuted |= this.execEdge777();

            // Event "Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_Observer.c_cancel".
            edgeExecuted |= this.execEdge778();

            // Event "Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_Observer.c_done".
            edgeExecuted |= this.execEdge779();

            // Event "Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_Observer.c_cancel".
            edgeExecuted |= this.execEdge780();

            // Event "Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_Observer.c_done".
            edgeExecuted |= this.execEdge781();

            // Event "Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_Observer.c_cancel".
            edgeExecuted |= this.execEdge782();

            // Event "Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_Observer.c_done".
            edgeExecuted |= this.execEdge783();

            // Event "Tunnel_Traffictube2_ButtonRecovery_Observer.c_cancel".
            edgeExecuted |= this.execEdge784();

            // Event "Tunnel_Traffictube2_ButtonRecovery_Observer.c_done".
            edgeExecuted |= this.execEdge785();

            // Event "Tunnel_Traffictube2_ButtonRedTrafficlights_Observer.c_cancel".
            edgeExecuted |= this.execEdge786();

            // Event "Tunnel_Traffictube2_ButtonRedTrafficlights_Observer.c_done".
            edgeExecuted |= this.execEdge787();

            // Event "Tunnel_Traffictube2_ButtonStopBoombarriers_Observer.c_cancel".
            edgeExecuted |= this.execEdge788();

            // Event "Tunnel_Traffictube2_ButtonStopBoombarriers_Observer.c_done".
            edgeExecuted |= this.execEdge789();

            // Event "Tunnel_Traffictube2_ButtonVentilation0_Observer.c_cancel".
            edgeExecuted |= this.execEdge790();

            // Event "Tunnel_Traffictube2_ButtonVentilation0_Observer.c_done".
            edgeExecuted |= this.execEdge791();

            // Event "Tunnel_Traffictube2_ButtonVentilation1_Observer.c_cancel".
            edgeExecuted |= this.execEdge792();

            // Event "Tunnel_Traffictube2_ButtonVentilation1_Observer.c_done".
            edgeExecuted |= this.execEdge793();

            // Event "Tunnel_Traffictube2_ButtonVentilation2_Observer.c_cancel".
            edgeExecuted |= this.execEdge794();

            // Event "Tunnel_Traffictube2_ButtonVentilation2_Observer.c_done".
            edgeExecuted |= this.execEdge795();

            // Event "Tunnel_Traffictube2_ButtonVentilation3_Observer.c_cancel".
            edgeExecuted |= this.execEdge796();

            // Event "Tunnel_Traffictube2_ButtonVentilation3_Observer.c_done".
            edgeExecuted |= this.execEdge797();

            // Event "Tunnel_Traffictube2_ButtonVentilation4_Observer.c_cancel".
            edgeExecuted |= this.execEdge798();

            // Event "Tunnel_Traffictube2_ButtonVentilation4_Observer.c_done".
            edgeExecuted |= this.execEdge799();

            // Event "Tunnel_Traffictube2_ButtonVentilation5_Observer.c_cancel".
            edgeExecuted |= this.execEdge800();

            // Event "Tunnel_Traffictube2_ButtonVentilation5_Observer.c_done".
            edgeExecuted |= this.execEdge801();

            // Event "Tunnel_Traffictube2_ButtonVentilation6_Observer.c_cancel".
            edgeExecuted |= this.execEdge802();

            // Event "Tunnel_Traffictube2_ButtonVentilation6_Observer.c_done".
            edgeExecuted |= this.execEdge803();

            // Event "Tunnel_Traffictube2_ButtonVentilation7_Observer.c_cancel".
            edgeExecuted |= this.execEdge804();

            // Event "Tunnel_Traffictube2_ButtonVentilation7_Observer.c_done".
            edgeExecuted |= this.execEdge805();

            // Event "Tunnel_Traffictube2_ButtonVentilation8_Observer.c_cancel".
            edgeExecuted |= this.execEdge806();

            // Event "Tunnel_Traffictube2_ButtonVentilation8_Observer.c_done".
            edgeExecuted |= this.execEdge807();

            // Event "Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_Observer.c_cancel".
            edgeExecuted |= this.execEdge808();

            // Event "Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_Observer.c_done".
            edgeExecuted |= this.execEdge809();

            // Event "Tunnel_Traffictube2_ButtonVentilationDrivingDirection_Observer.c_cancel".
            edgeExecuted |= this.execEdge810();

            // Event "Tunnel_Traffictube2_ButtonVentilationDrivingDirection_Observer.c_done".
            edgeExecuted |= this.execEdge811();

            // Event "Tunnel_Traffictube2_CCTV.c_off1".
            edgeExecuted |= this.execEdge812();

            // Event "Tunnel_Traffictube2_CCTV.c_off2".
            edgeExecuted |= this.execEdge813();

            // Event "Tunnel_Traffictube2_CCTV.c_off3".
            edgeExecuted |= this.execEdge814();

            // Event "Tunnel_Traffictube2_CCTV.c_off4".
            edgeExecuted |= this.execEdge815();

            // Event "Tunnel_Traffictube2_CCTV.c_off5".
            edgeExecuted |= this.execEdge816();

            // Event "Tunnel_Traffictube2_CCTV.c_off6".
            edgeExecuted |= this.execEdge817();

            // Event "Tunnel_Traffictube2_CCTV.c_on1".
            edgeExecuted |= this.execEdge818();

            // Event "Tunnel_Traffictube2_CCTV.c_on2".
            edgeExecuted |= this.execEdge819();

            // Event "Tunnel_Traffictube2_CCTV.c_on3".
            edgeExecuted |= this.execEdge820();

            // Event "Tunnel_Traffictube2_CCTV.c_on4".
            edgeExecuted |= this.execEdge821();

            // Event "Tunnel_Traffictube2_CCTV.c_on5".
            edgeExecuted |= this.execEdge822();

            // Event "Tunnel_Traffictube2_CCTV.c_on6".
            edgeExecuted |= this.execEdge823();

            // Event "Tunnel_Traffictube2_CCTV.c_start".
            edgeExecuted |= this.execEdge824();

            // Event "Tunnel_Traffictube2_CCTV.c_stop".
            edgeExecuted |= this.execEdge825();

            // Event "Tunnel_Traffictube2_CCTV.c_view".
            edgeExecuted |= this.execEdge826();

            // Event "Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_Observer.c_cancel".
            edgeExecuted |= this.execEdge827();

            // Event "Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_Observer.c_done".
            edgeExecuted |= this.execEdge828();

            // Event "Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_Observer.c_cancel".
            edgeExecuted |= this.execEdge829();

            // Event "Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_Observer.c_done".
            edgeExecuted |= this.execEdge830();

            // Event "Tunnel_Traffictube2_ControlBoombarriers_Mode.c_auto".
            edgeExecuted |= this.execEdge831();

            // Event "Tunnel_Traffictube2_ControlBoombarriers_Mode.c_manual".
            edgeExecuted |= this.execEdge832();

            // Event "Tunnel_Traffictube2_ControlLighting_ButtonAuto_Observer.c_cancel".
            edgeExecuted |= this.execEdge833();

            // Event "Tunnel_Traffictube2_ControlLighting_ButtonAuto_Observer.c_done".
            edgeExecuted |= this.execEdge834();

            // Event "Tunnel_Traffictube2_ControlLighting_ButtonManual_Observer.c_cancel".
            edgeExecuted |= this.execEdge835();

            // Event "Tunnel_Traffictube2_ControlLighting_ButtonManual_Observer.c_done".
            edgeExecuted |= this.execEdge836();

            // Event "Tunnel_Traffictube2_ControlLighting_Mode.c_auto".
            edgeExecuted |= this.execEdge837();

            // Event "Tunnel_Traffictube2_ControlLighting_Mode.c_manual".
            edgeExecuted |= this.execEdge838();

            // Event "Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_Observer.c_cancel".
            edgeExecuted |= this.execEdge839();

            // Event "Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_Observer.c_done".
            edgeExecuted |= this.execEdge840();

            // Event "Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_Observer.c_cancel".
            edgeExecuted |= this.execEdge841();

            // Event "Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_Observer.c_done".
            edgeExecuted |= this.execEdge842();

            // Event "Tunnel_Traffictube2_ControlTrafficlights_Mode.c_auto".
            edgeExecuted |= this.execEdge843();

            // Event "Tunnel_Traffictube2_ControlTrafficlights_Mode.c_manual".
            edgeExecuted |= this.execEdge844();

            // Event "Tunnel_Traffictube2_ControlVentilation_ButtonAuto_Observer.c_cancel".
            edgeExecuted |= this.execEdge845();

            // Event "Tunnel_Traffictube2_ControlVentilation_ButtonAuto_Observer.c_done".
            edgeExecuted |= this.execEdge846();

            // Event "Tunnel_Traffictube2_ControlVentilation_ButtonManual_Observer.c_cancel".
            edgeExecuted |= this.execEdge847();

            // Event "Tunnel_Traffictube2_ControlVentilation_ButtonManual_Observer.c_done".
            edgeExecuted |= this.execEdge848();

            // Event "Tunnel_Traffictube2_ControlVentilation_Mode.c_auto".
            edgeExecuted |= this.execEdge849();

            // Event "Tunnel_Traffictube2_ControlVentilation_Mode.c_manual".
            edgeExecuted |= this.execEdge850();

            // Event "Tunnel_Traffictube2_EscapeDoor_Broadcast.c_off".
            edgeExecuted |= this.execEdge851();

            // Event "Tunnel_Traffictube2_EscapeDoor_Broadcast.c_on".
            edgeExecuted |= this.execEdge852();

            // Event "Tunnel_Traffictube2_EscapeDoor_Broadcast.c_suppressed".
            edgeExecuted |= this.execEdge853();

            // Event "Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_Observer.c_cancel".
            edgeExecuted |= this.execEdge854();

            // Event "Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_Observer.c_done".
            edgeExecuted |= this.execEdge855();

            // Event "Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_Observer.c_cancel".
            edgeExecuted |= this.execEdge856();

            // Event "Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_Observer.c_done".
            edgeExecuted |= this.execEdge857();

            // Event "Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_Observer.c_cancel".
            edgeExecuted |= this.execEdge858();

            // Event "Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_Observer.c_done".
            edgeExecuted |= this.execEdge859();

            // Event "Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_Observer.c_cancel".
            edgeExecuted |= this.execEdge860();

            // Event "Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_Observer.c_done".
            edgeExecuted |= this.execEdge861();

            // Event "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_Observer.c_cancel".
            edgeExecuted |= this.execEdge862();

            // Event "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_Observer.c_done".
            edgeExecuted |= this.execEdge863();

            // Event "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_Observer.c_cancel".
            edgeExecuted |= this.execEdge864();

            // Event "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_Observer.c_done".
            edgeExecuted |= this.execEdge865();

            // Event "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_Mode.c_auto".
            edgeExecuted |= this.execEdge866();

            // Event "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_Mode.c_manual".
            edgeExecuted |= this.execEdge867();

            // Event "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer.c_cancel".
            edgeExecuted |= this.execEdge868();

            // Event "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer.c_done".
            edgeExecuted |= this.execEdge869();

            // Event "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_Observer.c_cancel".
            edgeExecuted |= this.execEdge870();

            // Event "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_Observer.c_done".
            edgeExecuted |= this.execEdge871();

            // Event "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_Mode.c_auto".
            edgeExecuted |= this.execEdge872();

            // Event "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_Mode.c_manual".
            edgeExecuted |= this.execEdge873();

            // Event "Tunnel_Traffictube2_EscapeDoor_RouteIndication.c_off".
            edgeExecuted |= this.execEdge874();

            // Event "Tunnel_Traffictube2_EscapeDoor_RouteIndication.c_on".
            edgeExecuted |= this.execEdge875();

            // Event "Tunnel_Traffictube2_J32_Mode.c_off".
            edgeExecuted |= this.execEdge876();

            // Event "Tunnel_Traffictube2_J32_Mode.c_on".
            edgeExecuted |= this.execEdge877();

            // Event "Tunnel_Traffictube2_J32_TimerReleaseSignal.c_on".
            edgeExecuted |= this.execEdge878();

            // Event "Tunnel_Traffictube2_J32_TimerReleaseSignal.c_reset".
            edgeExecuted |= this.execEdge879();

            // Event "Tunnel_Traffictube2_Lighting.c_0".
            edgeExecuted |= this.execEdge880();

            // Event "Tunnel_Traffictube2_Lighting.c_1".
            edgeExecuted |= this.execEdge881();

            // Event "Tunnel_Traffictube2_Lighting.c_2".
            edgeExecuted |= this.execEdge882();

            // Event "Tunnel_Traffictube2_Lighting.c_3".
            edgeExecuted |= this.execEdge883();

            // Event "Tunnel_Traffictube2_Lighting.c_4".
            edgeExecuted |= this.execEdge884();

            // Event "Tunnel_Traffictube2_Lighting.c_5".
            edgeExecuted |= this.execEdge885();

            // Event "Tunnel_Traffictube2_Lighting.c_6".
            edgeExecuted |= this.execEdge886();

            // Event "Tunnel_Traffictube2_Lighting.c_7".
            edgeExecuted |= this.execEdge887();

            // Event "Tunnel_Traffictube2_Lighting.c_8".
            edgeExecuted |= this.execEdge888();

            // Event "Tunnel_Traffictube2_MatrixsignTrafficlight.c_off".
            edgeExecuted |= this.execEdge889();

            // Event "Tunnel_Traffictube2_MatrixsignTrafficlight.c_on".
            edgeExecuted |= this.execEdge890();

            // Event "Tunnel_Traffictube2_MatrixsignUnpressed.c_off".
            edgeExecuted |= this.execEdge891();

            // Event "Tunnel_Traffictube2_MatrixsignUnpressed.c_on".
            edgeExecuted |= this.execEdge892();

            // Event "Tunnel_Traffictube2_ModeTraffictube.c_emergency".
            edgeExecuted |= this.execEdge893();

            // Event "Tunnel_Traffictube2_ModeTraffictube.c_evacuation".
            edgeExecuted |= this.execEdge894();

            // Event "Tunnel_Traffictube2_ModeTraffictube.c_evacuationEmergency".
            edgeExecuted |= this.execEdge895();

            // Event "Tunnel_Traffictube2_ModeTraffictube.c_maintenance".
            edgeExecuted |= this.execEdge896();

            // Event "Tunnel_Traffictube2_ModeTraffictube.c_operational".
            edgeExecuted |= this.execEdge897();

            // Event "Tunnel_Traffictube2_ModeTraffictube.c_recovery".
            edgeExecuted |= this.execEdge898();

            // Event "Tunnel_Traffictube2_ModeTraffictube.c_standby".
            edgeExecuted |= this.execEdge899();

            // Event "Tunnel_Traffictube2_ModeTraffictube.c_support".
            edgeExecuted |= this.execEdge900();

            // Event "Tunnel_Traffictube2_PopUp_ButtonAccept_Observer.c_cancel".
            edgeExecuted |= this.execEdge901();

            // Event "Tunnel_Traffictube2_PopUp_ButtonAccept_Observer.c_done".
            edgeExecuted |= this.execEdge902();

            // Event "Tunnel_Traffictube2_PopUp_ButtonReject_Observer.c_cancel".
            edgeExecuted |= this.execEdge903();

            // Event "Tunnel_Traffictube2_PopUp_ButtonReject_Observer.c_done".
            edgeExecuted |= this.execEdge904();

            // Event "Tunnel_Traffictube2_PopUp_Timer.c_on".
            edgeExecuted |= this.execEdge905();

            // Event "Tunnel_Traffictube2_PopUp_Timer.c_reset".
            edgeExecuted |= this.execEdge906();

            // Event "Tunnel_Traffictube2_PopUp_Window.c_off".
            edgeExecuted |= this.execEdge907();

            // Event "Tunnel_Traffictube2_PopUp_Window.c_on".
            edgeExecuted |= this.execEdge908();

            // Event "Tunnel_Traffictube2_Recorder.c_off".
            edgeExecuted |= this.execEdge909();

            // Event "Tunnel_Traffictube2_Recorder.c_on".
            edgeExecuted |= this.execEdge910();

            // Event "Tunnel_Traffictube2_SwitchTimerAudio.c_off".
            edgeExecuted |= this.execEdge911();

            // Event "Tunnel_Traffictube2_SwitchTimerAudio.c_on".
            edgeExecuted |= this.execEdge912();

            // Event "Tunnel_Traffictube2_TimerCameraViewEven.c_on".
            edgeExecuted |= this.execEdge913();

            // Event "Tunnel_Traffictube2_TimerCameraViewEven.c_reset".
            edgeExecuted |= this.execEdge914();

            // Event "Tunnel_Traffictube2_TimerCameraViewUneven.c_on".
            edgeExecuted |= this.execEdge915();

            // Event "Tunnel_Traffictube2_TimerCameraViewUneven.c_reset".
            edgeExecuted |= this.execEdge916();

            // Event "Tunnel_Traffictube2_Trafficlight1_Mode.c_flash".
            edgeExecuted |= this.execEdge917();

            // Event "Tunnel_Traffictube2_Trafficlight1_Mode.c_off".
            edgeExecuted |= this.execEdge918();

            // Event "Tunnel_Traffictube2_Trafficlight1_Mode.c_red".
            edgeExecuted |= this.execEdge919();

            // Event "Tunnel_Traffictube2_Trafficlight1_Mode.c_yellow".
            edgeExecuted |= this.execEdge920();

            // Event "Tunnel_Traffictube2_Trafficlight1_TimerReleaseSignal.c_on".
            edgeExecuted |= this.execEdge921();

            // Event "Tunnel_Traffictube2_Trafficlight1_TimerReleaseSignal.c_reset".
            edgeExecuted |= this.execEdge922();

            // Event "Tunnel_Traffictube2_Trafficlight2_Mode.c_flash".
            edgeExecuted |= this.execEdge923();

            // Event "Tunnel_Traffictube2_Trafficlight2_Mode.c_off".
            edgeExecuted |= this.execEdge924();

            // Event "Tunnel_Traffictube2_Trafficlight2_Mode.c_red".
            edgeExecuted |= this.execEdge925();

            // Event "Tunnel_Traffictube2_Trafficlight2_Mode.c_yellow".
            edgeExecuted |= this.execEdge926();

            // Event "Tunnel_Traffictube2_Trafficlight2_TimerReleaseSignal.c_on".
            edgeExecuted |= this.execEdge927();

            // Event "Tunnel_Traffictube2_Trafficlight2_TimerReleaseSignal.c_reset".
            edgeExecuted |= this.execEdge928();

            // Event "Tunnel_Traffictube2_Trafficlight3_Mode.c_flash".
            edgeExecuted |= this.execEdge929();

            // Event "Tunnel_Traffictube2_Trafficlight3_Mode.c_off".
            edgeExecuted |= this.execEdge930();

            // Event "Tunnel_Traffictube2_Trafficlight3_Mode.c_red".
            edgeExecuted |= this.execEdge931();

            // Event "Tunnel_Traffictube2_Trafficlight3_Mode.c_yellow".
            edgeExecuted |= this.execEdge932();

            // Event "Tunnel_Traffictube2_Trafficlight3_TimerReleaseSignal.c_on".
            edgeExecuted |= this.execEdge933();

            // Event "Tunnel_Traffictube2_Trafficlight3_TimerReleaseSignal.c_reset".
            edgeExecuted |= this.execEdge934();

            // Event "Tunnel_Traffictube2_Ventilation.c_0".
            edgeExecuted |= this.execEdge935();

            // Event "Tunnel_Traffictube2_Ventilation.c_1".
            edgeExecuted |= this.execEdge936();

            // Event "Tunnel_Traffictube2_Ventilation.c_2".
            edgeExecuted |= this.execEdge937();

            // Event "Tunnel_Traffictube2_Ventilation.c_3".
            edgeExecuted |= this.execEdge938();

            // Event "Tunnel_Traffictube2_Ventilation.c_4".
            edgeExecuted |= this.execEdge939();

            // Event "Tunnel_Traffictube2_Ventilation.c_5".
            edgeExecuted |= this.execEdge940();

            // Event "Tunnel_Traffictube2_Ventilation.c_6".
            edgeExecuted |= this.execEdge941();

            // Event "Tunnel_Traffictube2_Ventilation.c_7".
            edgeExecuted |= this.execEdge942();

            // Event "Tunnel_Traffictube2_Ventilation.c_8".
            edgeExecuted |= this.execEdge943();

            // Event "Tunnel_Traffictube2_VentilationDirection.c_againstDrivingDirection".
            edgeExecuted |= this.execEdge944();

            // Event "Tunnel_Traffictube2_VentilationDirection.c_drivingDirection".
            edgeExecuted |= this.execEdge945();

            // Event "Tunnel_Traffictube2_VentilationEntrance.c_0".
            edgeExecuted |= this.execEdge946();

            // Event "Tunnel_Traffictube2_VentilationEntrance.c_1".
            edgeExecuted |= this.execEdge947();

            // Event "Tunnel_Traffictube2_VentilationEntrance.c_2".
            edgeExecuted |= this.execEdge948();

            // Event "Tunnel_Traffictube2_VentilationEntrance.c_3".
            edgeExecuted |= this.execEdge949();

            // Event "Tunnel_Traffictube2_VentilationEntrance.c_4".
            edgeExecuted |= this.execEdge950();

            // Event "Tunnel_Traffictube2_VentilationEntrance.c_5".
            edgeExecuted |= this.execEdge951();

            // Event "Tunnel_Traffictube2_VentilationEntrance.c_6".
            edgeExecuted |= this.execEdge952();

            // Event "Tunnel_Traffictube2_VentilationEntrance.c_7".
            edgeExecuted |= this.execEdge953();

            // Event "Tunnel_Traffictube2_VentilationEntrance.c_8".
            edgeExecuted |= this.execEdge954();

            // Event "Tunnel_WatercellarFirehoses_ButtonExtinguish_Observer.c_cancel".
            edgeExecuted |= this.execEdge955();

            // Event "Tunnel_WatercellarFirehoses_ButtonExtinguish_Observer.c_done".
            edgeExecuted |= this.execEdge956();

            // Event "Tunnel_WatercellarFirehoses_ButtonGuard_Observer.c_cancel".
            edgeExecuted |= this.execEdge957();

            // Event "Tunnel_WatercellarFirehoses_ButtonGuard_Observer.c_done".
            edgeExecuted |= this.execEdge958();

            // Event "Tunnel_WatercellarFirehoses_Control_ButtonAuto_Observer.c_cancel".
            edgeExecuted |= this.execEdge959();

            // Event "Tunnel_WatercellarFirehoses_Control_ButtonAuto_Observer.c_done".
            edgeExecuted |= this.execEdge960();

            // Event "Tunnel_WatercellarFirehoses_Control_ButtonManual_Observer.c_cancel".
            edgeExecuted |= this.execEdge961();

            // Event "Tunnel_WatercellarFirehoses_Control_ButtonManual_Observer.c_done".
            edgeExecuted |= this.execEdge962();

            // Event "Tunnel_WatercellarFirehoses_Control_Mode.c_auto".
            edgeExecuted |= this.execEdge963();

            // Event "Tunnel_WatercellarFirehoses_Control_Mode.c_manual".
            edgeExecuted |= this.execEdge964();

            // Event "Tunnel_WatercellarFirehoses_Pump.c_off".
            edgeExecuted |= this.execEdge965();

            // Event "Tunnel_WatercellarFirehoses_Pump.c_on".
            edgeExecuted |= this.execEdge966();

            // Event "Tunnel_WatercellarFirehoses_Regime.c_extinguish".
            edgeExecuted |= this.execEdge967();

            // Event "Tunnel_WatercellarFirehoses_Regime.c_guard".
            edgeExecuted |= this.execEdge968();

            // Stop if no edge was executed.
            if (!edgeExecuted) {
                break;
            }
        }

        // Apply print declarations for 'pre' of time transition.
        if (this.doInfoPrintOutput) this.printOutput(-2, true);

        // Post execution notification.
        this.postExec();

        // Done.
        this.firstExec = false;
    }

    /**
     * Calls {@link #execWhile}, which repeatedly {@link #execOnce executes the code}.
     *
     * @throws specException In case of a runtime error caused by code
     *      generated from the CIF model.
     */
    exec() {
        this.execWhile(1);
    }

    /**
     * Repeatedly {@link #execOnce executes the code}.
     *
     * @param delay The delay before executing, in milliseconds.
     *
     * @throws specException In case of a runtime error caused by code
     *      generated from the CIF model.
     */
    execWhile(delay) {
        setTimeout(
            function () {
                // Pre execution timing.
                var now = Date.now();
                var preMilli = now;

                // On first execution, initialize variables for timing.
                if (spec.first) {
                    spec.first = false;
                    spec.startMilli = now;
                    spec.targetMilli = spec.startMilli;
                    preMilli = spec.startMilli;
                }

                // Handle pausing/playing.
                if (!spec.playing) {
                    spec.timePaused = now;
                    return;
                }

                if (spec.timePaused) {
                    spec.startMilli += (now - spec.timePaused);
                    spec.targetMilli += (now - spec.timePaused);
                    spec.timePaused = null;
                }

                // Get cycle time and current 'time'.
                var frequency = spec.frequency;
                var cycleMilli = (frequency <= 0) ? -1 : 1e3 / frequency;
                var timeMilli = preMilli - spec.startMilli;

                // Execute once.
                spec.execOnce(timeMilli / 1e3);

                // Post execution timing.
                var postMilli = Date.now();
                var duration = postMilli - preMilli;
                if (spec.doInfoExec) {
                    spec.infoExec(duration, cycleMilli);
                }

                // Ensure frequency.
                var remainderMilli = 0;
                if (frequency > 0) {
                    spec.targetMilli += cycleMilli;
                    remainderMilli = spec.targetMilli - postMilli;
                }

                // Execute again.
                spec.execWhile(remainderMilli > 0 ? remainderMilli : 0);
            },
        delay);
    }

    /**
     * Execute code for edge with index 0 and event "Tunnel_HeadDrainCellar1_ButtonEmptying_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge0() {

        if (this.doInfoPrintOutput) this.printOutput(4, true);
        if (this.doInfoEvent) this.infoEvent(4, true);

        if (((spec.Tunnel_HeadDrainCellar1_ButtonEmptying_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_HeadDrainCellar1_ButtonEmptying_conditionPush_())) {
            spec.Tunnel_HeadDrainCellar1_ButtonEmptying_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_HeadDrainCellar1_ButtonEmptying_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_HeadDrainCellar1_ButtonEmptying_conditionPush_()))) {
            spec.Tunnel_HeadDrainCellar1_ButtonEmptying_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_HeadDrainCellar1_ButtonEmptying_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_HeadDrainCellar1_ButtonEmptying_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(4, false);
        if (this.doInfoPrintOutput) this.printOutput(4, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 1 and event "Tunnel_HeadDrainCellar1_ButtonOff_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge1() {

        if (this.doInfoPrintOutput) this.printOutput(7, true);
        if (this.doInfoEvent) this.infoEvent(7, true);

        if (((spec.Tunnel_HeadDrainCellar1_ButtonOff_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_HeadDrainCellar1_ButtonOff_conditionPush_())) {
            spec.Tunnel_HeadDrainCellar1_ButtonOff_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_HeadDrainCellar1_ButtonOff_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_HeadDrainCellar1_ButtonOff_conditionPush_()))) {
            spec.Tunnel_HeadDrainCellar1_ButtonOff_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_HeadDrainCellar1_ButtonOff_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_HeadDrainCellar1_ButtonOff_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(7, false);
        if (this.doInfoPrintOutput) this.printOutput(7, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 2 and event "Tunnel_HeadDrainCellar1_ButtonStoring_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge2() {

        if (this.doInfoPrintOutput) this.printOutput(10, true);
        if (this.doInfoEvent) this.infoEvent(10, true);

        if (((spec.Tunnel_HeadDrainCellar1_ButtonStoring_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_HeadDrainCellar1_ButtonStoring_conditionPush_())) {
            spec.Tunnel_HeadDrainCellar1_ButtonStoring_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_HeadDrainCellar1_ButtonStoring_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_HeadDrainCellar1_ButtonStoring_conditionPush_()))) {
            spec.Tunnel_HeadDrainCellar1_ButtonStoring_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_HeadDrainCellar1_ButtonStoring_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_HeadDrainCellar1_ButtonStoring_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(10, false);
        if (this.doInfoPrintOutput) this.printOutput(10, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 3 and event "Tunnel_HeadDrainCellar1_Control_ButtonAuto_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge3() {

        if (this.doInfoPrintOutput) this.printOutput(13, true);
        if (this.doInfoEvent) this.infoEvent(13, true);

        if (((spec.Tunnel_HeadDrainCellar1_Control_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_HeadDrainCellar1_Control_ButtonAuto_conditionPush_())) {
            spec.Tunnel_HeadDrainCellar1_Control_ButtonAuto_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_HeadDrainCellar1_Control_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_HeadDrainCellar1_Control_ButtonAuto_conditionPush_()))) {
            spec.Tunnel_HeadDrainCellar1_Control_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_HeadDrainCellar1_Control_ButtonAuto_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_HeadDrainCellar1_Control_ButtonAuto_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(13, false);
        if (this.doInfoPrintOutput) this.printOutput(13, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 4 and event "Tunnel_HeadDrainCellar1_Control_ButtonManual_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge4() {

        if (this.doInfoPrintOutput) this.printOutput(16, true);
        if (this.doInfoEvent) this.infoEvent(16, true);

        if (((spec.Tunnel_HeadDrainCellar1_Control_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_HeadDrainCellar1_Control_ButtonManual_conditionPush_())) {
            spec.Tunnel_HeadDrainCellar1_Control_ButtonManual_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_HeadDrainCellar1_Control_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_HeadDrainCellar1_Control_ButtonManual_conditionPush_()))) {
            spec.Tunnel_HeadDrainCellar1_Control_ButtonManual_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_HeadDrainCellar1_Control_ButtonManual_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_HeadDrainCellar1_Control_ButtonManual_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(16, false);
        if (this.doInfoPrintOutput) this.printOutput(16, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 5 and event "Tunnel_HeadDrainCellar1_Sensor1.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge5() {
        var guard = ((spec.Tunnel_HeadDrainCellar1_Sensor2_) == (spec.specEnum._off)) && ((((spec.Tunnel_HeadDrainCellar1_Pump1_) == (spec.specEnum._on)) || ((spec.Tunnel_HeadDrainCellar1_Pump2_) == (spec.specEnum._on))) && ((spec.Tunnel_HeadDrainCellar1_Sensor1_) == (spec.specEnum._on)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(28, true);
        if (this.doInfoEvent) this.infoEvent(28, true);

        spec.Tunnel_HeadDrainCellar1_Sensor1_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(28, false);
        if (this.doInfoPrintOutput) this.printOutput(28, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 6 and event "Tunnel_HeadDrainCellar1_Sensor1.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge6() {
        var guard = (spec.Tunnel_HeadDrainCellar1_Sensor1_) == (spec.specEnum._off);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(29, true);
        if (this.doInfoEvent) this.infoEvent(29, true);

        spec.Tunnel_HeadDrainCellar1_Sensor1_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(29, false);
        if (this.doInfoPrintOutput) this.printOutput(29, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 7 and event "Tunnel_HeadDrainCellar1_Sensor2.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge7() {
        var guard = ((spec.Tunnel_HeadDrainCellar1_Sensor3_) == (spec.specEnum._off)) && ((((spec.Tunnel_HeadDrainCellar1_Pump1_) == (spec.specEnum._on)) || ((spec.Tunnel_HeadDrainCellar1_Pump2_) == (spec.specEnum._on))) && ((spec.Tunnel_HeadDrainCellar1_Sensor2_) == (spec.specEnum._on)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(30, true);
        if (this.doInfoEvent) this.infoEvent(30, true);

        spec.Tunnel_HeadDrainCellar1_Sensor2_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(30, false);
        if (this.doInfoPrintOutput) this.printOutput(30, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 8 and event "Tunnel_HeadDrainCellar1_Sensor2.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge8() {
        var guard = ((spec.Tunnel_HeadDrainCellar1_Sensor1_) == (spec.specEnum._on)) && ((spec.Tunnel_HeadDrainCellar1_Sensor2_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(31, true);
        if (this.doInfoEvent) this.infoEvent(31, true);

        spec.Tunnel_HeadDrainCellar1_Sensor2_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(31, false);
        if (this.doInfoPrintOutput) this.printOutput(31, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 9 and event "Tunnel_HeadDrainCellar1_Sensor3.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge9() {
        var guard = ((spec.Tunnel_HeadDrainCellar1_Sensor4_) == (spec.specEnum._off)) && ((((spec.Tunnel_HeadDrainCellar1_Pump1_) == (spec.specEnum._on)) || ((spec.Tunnel_HeadDrainCellar1_Pump2_) == (spec.specEnum._on))) && ((spec.Tunnel_HeadDrainCellar1_Sensor3_) == (spec.specEnum._on)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(32, true);
        if (this.doInfoEvent) this.infoEvent(32, true);

        spec.Tunnel_HeadDrainCellar1_Sensor3_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(32, false);
        if (this.doInfoPrintOutput) this.printOutput(32, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 10 and event "Tunnel_HeadDrainCellar1_Sensor3.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge10() {
        var guard = ((spec.Tunnel_HeadDrainCellar1_Sensor2_) == (spec.specEnum._on)) && ((spec.Tunnel_HeadDrainCellar1_Sensor3_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(33, true);
        if (this.doInfoEvent) this.infoEvent(33, true);

        spec.Tunnel_HeadDrainCellar1_Sensor3_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(33, false);
        if (this.doInfoPrintOutput) this.printOutput(33, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 11 and event "Tunnel_HeadDrainCellar1_Sensor4.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge11() {
        var guard = ((spec.Tunnel_HeadDrainCellar1_Sensor5_) == (spec.specEnum._off)) && ((((spec.Tunnel_HeadDrainCellar1_Pump1_) == (spec.specEnum._on)) || ((spec.Tunnel_HeadDrainCellar1_Pump2_) == (spec.specEnum._on))) && ((spec.Tunnel_HeadDrainCellar1_Sensor4_) == (spec.specEnum._on)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(34, true);
        if (this.doInfoEvent) this.infoEvent(34, true);

        spec.Tunnel_HeadDrainCellar1_Sensor4_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(34, false);
        if (this.doInfoPrintOutput) this.printOutput(34, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 12 and event "Tunnel_HeadDrainCellar1_Sensor4.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge12() {
        var guard = ((spec.Tunnel_HeadDrainCellar1_Sensor3_) == (spec.specEnum._on)) && ((spec.Tunnel_HeadDrainCellar1_Sensor4_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(35, true);
        if (this.doInfoEvent) this.infoEvent(35, true);

        spec.Tunnel_HeadDrainCellar1_Sensor4_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(35, false);
        if (this.doInfoPrintOutput) this.printOutput(35, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 13 and event "Tunnel_HeadDrainCellar1_Sensor5.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge13() {
        var guard = (((spec.Tunnel_HeadDrainCellar1_Pump1_) == (spec.specEnum._on)) || ((spec.Tunnel_HeadDrainCellar1_Pump2_) == (spec.specEnum._on))) && ((spec.Tunnel_HeadDrainCellar1_Sensor5_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(36, true);
        if (this.doInfoEvent) this.infoEvent(36, true);

        spec.Tunnel_HeadDrainCellar1_Sensor5_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(36, false);
        if (this.doInfoPrintOutput) this.printOutput(36, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 14 and event "Tunnel_HeadDrainCellar1_Sensor5.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge14() {
        var guard = ((spec.Tunnel_HeadDrainCellar1_Sensor4_) == (spec.specEnum._on)) && ((spec.Tunnel_HeadDrainCellar1_Sensor5_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(37, true);
        if (this.doInfoEvent) this.infoEvent(37, true);

        spec.Tunnel_HeadDrainCellar1_Sensor5_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(37, false);
        if (this.doInfoPrintOutput) this.printOutput(37, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 15 and event "Tunnel_HeadDrainCellar2_ButtonEmptying_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge15() {

        if (this.doInfoPrintOutput) this.printOutput(38, true);
        if (this.doInfoEvent) this.infoEvent(38, true);

        if (((spec.Tunnel_HeadDrainCellar2_ButtonEmptying_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_HeadDrainCellar2_ButtonEmptying_conditionPush_())) {
            spec.Tunnel_HeadDrainCellar2_ButtonEmptying_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_HeadDrainCellar2_ButtonEmptying_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_HeadDrainCellar2_ButtonEmptying_conditionPush_()))) {
            spec.Tunnel_HeadDrainCellar2_ButtonEmptying_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_HeadDrainCellar2_ButtonEmptying_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_HeadDrainCellar2_ButtonEmptying_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(38, false);
        if (this.doInfoPrintOutput) this.printOutput(38, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 16 and event "Tunnel_HeadDrainCellar2_ButtonOff_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge16() {

        if (this.doInfoPrintOutput) this.printOutput(41, true);
        if (this.doInfoEvent) this.infoEvent(41, true);

        if (((spec.Tunnel_HeadDrainCellar2_ButtonOff_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_HeadDrainCellar2_ButtonOff_conditionPush_())) {
            spec.Tunnel_HeadDrainCellar2_ButtonOff_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_HeadDrainCellar2_ButtonOff_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_HeadDrainCellar2_ButtonOff_conditionPush_()))) {
            spec.Tunnel_HeadDrainCellar2_ButtonOff_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_HeadDrainCellar2_ButtonOff_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_HeadDrainCellar2_ButtonOff_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(41, false);
        if (this.doInfoPrintOutput) this.printOutput(41, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 17 and event "Tunnel_HeadDrainCellar2_ButtonStoring_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge17() {

        if (this.doInfoPrintOutput) this.printOutput(44, true);
        if (this.doInfoEvent) this.infoEvent(44, true);

        if (((spec.Tunnel_HeadDrainCellar2_ButtonStoring_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_HeadDrainCellar2_ButtonStoring_conditionPush_())) {
            spec.Tunnel_HeadDrainCellar2_ButtonStoring_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_HeadDrainCellar2_ButtonStoring_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_HeadDrainCellar2_ButtonStoring_conditionPush_()))) {
            spec.Tunnel_HeadDrainCellar2_ButtonStoring_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_HeadDrainCellar2_ButtonStoring_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_HeadDrainCellar2_ButtonStoring_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(44, false);
        if (this.doInfoPrintOutput) this.printOutput(44, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 18 and event "Tunnel_HeadDrainCellar2_Control_ButtonAuto_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge18() {

        if (this.doInfoPrintOutput) this.printOutput(47, true);
        if (this.doInfoEvent) this.infoEvent(47, true);

        if (((spec.Tunnel_HeadDrainCellar2_Control_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_HeadDrainCellar2_Control_ButtonAuto_conditionPush_())) {
            spec.Tunnel_HeadDrainCellar2_Control_ButtonAuto_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_HeadDrainCellar2_Control_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_HeadDrainCellar2_Control_ButtonAuto_conditionPush_()))) {
            spec.Tunnel_HeadDrainCellar2_Control_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_HeadDrainCellar2_Control_ButtonAuto_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_HeadDrainCellar2_Control_ButtonAuto_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(47, false);
        if (this.doInfoPrintOutput) this.printOutput(47, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 19 and event "Tunnel_HeadDrainCellar2_Control_ButtonManual_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge19() {

        if (this.doInfoPrintOutput) this.printOutput(50, true);
        if (this.doInfoEvent) this.infoEvent(50, true);

        if (((spec.Tunnel_HeadDrainCellar2_Control_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_HeadDrainCellar2_Control_ButtonManual_conditionPush_())) {
            spec.Tunnel_HeadDrainCellar2_Control_ButtonManual_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_HeadDrainCellar2_Control_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_HeadDrainCellar2_Control_ButtonManual_conditionPush_()))) {
            spec.Tunnel_HeadDrainCellar2_Control_ButtonManual_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_HeadDrainCellar2_Control_ButtonManual_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_HeadDrainCellar2_Control_ButtonManual_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(50, false);
        if (this.doInfoPrintOutput) this.printOutput(50, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 20 and event "Tunnel_HeadDrainCellar2_Sensor1.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge20() {
        var guard = ((spec.Tunnel_HeadDrainCellar2_Sensor2_) == (spec.specEnum._off)) && ((((spec.Tunnel_HeadDrainCellar2_Pump1_) == (spec.specEnum._on)) || ((spec.Tunnel_HeadDrainCellar2_Pump2_) == (spec.specEnum._on))) && ((spec.Tunnel_HeadDrainCellar2_Sensor1_) == (spec.specEnum._on)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(62, true);
        if (this.doInfoEvent) this.infoEvent(62, true);

        spec.Tunnel_HeadDrainCellar2_Sensor1_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(62, false);
        if (this.doInfoPrintOutput) this.printOutput(62, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 21 and event "Tunnel_HeadDrainCellar2_Sensor1.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge21() {
        var guard = (spec.Tunnel_HeadDrainCellar2_Sensor1_) == (spec.specEnum._off);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(63, true);
        if (this.doInfoEvent) this.infoEvent(63, true);

        spec.Tunnel_HeadDrainCellar2_Sensor1_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(63, false);
        if (this.doInfoPrintOutput) this.printOutput(63, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 22 and event "Tunnel_HeadDrainCellar2_Sensor2.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge22() {
        var guard = ((spec.Tunnel_HeadDrainCellar2_Sensor3_) == (spec.specEnum._off)) && ((((spec.Tunnel_HeadDrainCellar2_Pump1_) == (spec.specEnum._on)) || ((spec.Tunnel_HeadDrainCellar2_Pump2_) == (spec.specEnum._on))) && ((spec.Tunnel_HeadDrainCellar2_Sensor2_) == (spec.specEnum._on)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(64, true);
        if (this.doInfoEvent) this.infoEvent(64, true);

        spec.Tunnel_HeadDrainCellar2_Sensor2_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(64, false);
        if (this.doInfoPrintOutput) this.printOutput(64, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 23 and event "Tunnel_HeadDrainCellar2_Sensor2.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge23() {
        var guard = ((spec.Tunnel_HeadDrainCellar2_Sensor1_) == (spec.specEnum._on)) && ((spec.Tunnel_HeadDrainCellar2_Sensor2_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(65, true);
        if (this.doInfoEvent) this.infoEvent(65, true);

        spec.Tunnel_HeadDrainCellar2_Sensor2_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(65, false);
        if (this.doInfoPrintOutput) this.printOutput(65, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 24 and event "Tunnel_HeadDrainCellar2_Sensor3.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge24() {
        var guard = ((spec.Tunnel_HeadDrainCellar2_Sensor4_) == (spec.specEnum._off)) && ((((spec.Tunnel_HeadDrainCellar2_Pump1_) == (spec.specEnum._on)) || ((spec.Tunnel_HeadDrainCellar2_Pump2_) == (spec.specEnum._on))) && ((spec.Tunnel_HeadDrainCellar2_Sensor3_) == (spec.specEnum._on)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(66, true);
        if (this.doInfoEvent) this.infoEvent(66, true);

        spec.Tunnel_HeadDrainCellar2_Sensor3_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(66, false);
        if (this.doInfoPrintOutput) this.printOutput(66, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 25 and event "Tunnel_HeadDrainCellar2_Sensor3.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge25() {
        var guard = ((spec.Tunnel_HeadDrainCellar2_Sensor2_) == (spec.specEnum._on)) && ((spec.Tunnel_HeadDrainCellar2_Sensor3_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(67, true);
        if (this.doInfoEvent) this.infoEvent(67, true);

        spec.Tunnel_HeadDrainCellar2_Sensor3_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(67, false);
        if (this.doInfoPrintOutput) this.printOutput(67, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 26 and event "Tunnel_HeadDrainCellar2_Sensor4.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge26() {
        var guard = ((spec.Tunnel_HeadDrainCellar2_Sensor5_) == (spec.specEnum._off)) && ((((spec.Tunnel_HeadDrainCellar2_Pump1_) == (spec.specEnum._on)) || ((spec.Tunnel_HeadDrainCellar2_Pump2_) == (spec.specEnum._on))) && ((spec.Tunnel_HeadDrainCellar2_Sensor4_) == (spec.specEnum._on)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(68, true);
        if (this.doInfoEvent) this.infoEvent(68, true);

        spec.Tunnel_HeadDrainCellar2_Sensor4_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(68, false);
        if (this.doInfoPrintOutput) this.printOutput(68, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 27 and event "Tunnel_HeadDrainCellar2_Sensor4.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge27() {
        var guard = ((spec.Tunnel_HeadDrainCellar2_Sensor3_) == (spec.specEnum._on)) && ((spec.Tunnel_HeadDrainCellar2_Sensor4_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(69, true);
        if (this.doInfoEvent) this.infoEvent(69, true);

        spec.Tunnel_HeadDrainCellar2_Sensor4_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(69, false);
        if (this.doInfoPrintOutput) this.printOutput(69, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 28 and event "Tunnel_HeadDrainCellar2_Sensor5.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge28() {
        var guard = (((spec.Tunnel_HeadDrainCellar2_Pump1_) == (spec.specEnum._on)) || ((spec.Tunnel_HeadDrainCellar2_Pump2_) == (spec.specEnum._on))) && ((spec.Tunnel_HeadDrainCellar2_Sensor5_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(70, true);
        if (this.doInfoEvent) this.infoEvent(70, true);

        spec.Tunnel_HeadDrainCellar2_Sensor5_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(70, false);
        if (this.doInfoPrintOutput) this.printOutput(70, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 29 and event "Tunnel_HeadDrainCellar2_Sensor5.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge29() {
        var guard = ((spec.Tunnel_HeadDrainCellar2_Sensor4_) == (spec.specEnum._on)) && ((spec.Tunnel_HeadDrainCellar2_Sensor5_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(71, true);
        if (this.doInfoEvent) this.infoEvent(71, true);

        spec.Tunnel_HeadDrainCellar2_Sensor5_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(71, false);
        if (this.doInfoPrintOutput) this.printOutput(71, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 30 and event "Tunnel_MiddleDrainCellar_ButtonEmptying_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge30() {

        if (this.doInfoPrintOutput) this.printOutput(72, true);
        if (this.doInfoEvent) this.infoEvent(72, true);

        if (((spec.Tunnel_MiddleDrainCellar_ButtonEmptying_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_MiddleDrainCellar_ButtonEmptying_conditionPush_())) {
            spec.Tunnel_MiddleDrainCellar_ButtonEmptying_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_MiddleDrainCellar_ButtonEmptying_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_MiddleDrainCellar_ButtonEmptying_conditionPush_()))) {
            spec.Tunnel_MiddleDrainCellar_ButtonEmptying_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_MiddleDrainCellar_ButtonEmptying_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_MiddleDrainCellar_ButtonEmptying_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(72, false);
        if (this.doInfoPrintOutput) this.printOutput(72, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 31 and event "Tunnel_MiddleDrainCellar_ButtonOff_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge31() {

        if (this.doInfoPrintOutput) this.printOutput(75, true);
        if (this.doInfoEvent) this.infoEvent(75, true);

        if (((spec.Tunnel_MiddleDrainCellar_ButtonOff_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_MiddleDrainCellar_ButtonOff_conditionPush_())) {
            spec.Tunnel_MiddleDrainCellar_ButtonOff_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_MiddleDrainCellar_ButtonOff_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_MiddleDrainCellar_ButtonOff_conditionPush_()))) {
            spec.Tunnel_MiddleDrainCellar_ButtonOff_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_MiddleDrainCellar_ButtonOff_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_MiddleDrainCellar_ButtonOff_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(75, false);
        if (this.doInfoPrintOutput) this.printOutput(75, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 32 and event "Tunnel_MiddleDrainCellar_ButtonStoring_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge32() {

        if (this.doInfoPrintOutput) this.printOutput(78, true);
        if (this.doInfoEvent) this.infoEvent(78, true);

        if (((spec.Tunnel_MiddleDrainCellar_ButtonStoring_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_MiddleDrainCellar_ButtonStoring_conditionPush_())) {
            spec.Tunnel_MiddleDrainCellar_ButtonStoring_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_MiddleDrainCellar_ButtonStoring_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_MiddleDrainCellar_ButtonStoring_conditionPush_()))) {
            spec.Tunnel_MiddleDrainCellar_ButtonStoring_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_MiddleDrainCellar_ButtonStoring_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_MiddleDrainCellar_ButtonStoring_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(78, false);
        if (this.doInfoPrintOutput) this.printOutput(78, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 33 and event "Tunnel_MiddleDrainCellar_Control_ButtonAuto_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge33() {

        if (this.doInfoPrintOutput) this.printOutput(81, true);
        if (this.doInfoEvent) this.infoEvent(81, true);

        if (((spec.Tunnel_MiddleDrainCellar_Control_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_MiddleDrainCellar_Control_ButtonAuto_conditionPush_())) {
            spec.Tunnel_MiddleDrainCellar_Control_ButtonAuto_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_MiddleDrainCellar_Control_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_MiddleDrainCellar_Control_ButtonAuto_conditionPush_()))) {
            spec.Tunnel_MiddleDrainCellar_Control_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_MiddleDrainCellar_Control_ButtonAuto_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_MiddleDrainCellar_Control_ButtonAuto_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(81, false);
        if (this.doInfoPrintOutput) this.printOutput(81, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 34 and event "Tunnel_MiddleDrainCellar_Control_ButtonManual_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge34() {

        if (this.doInfoPrintOutput) this.printOutput(84, true);
        if (this.doInfoEvent) this.infoEvent(84, true);

        if (((spec.Tunnel_MiddleDrainCellar_Control_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_MiddleDrainCellar_Control_ButtonManual_conditionPush_())) {
            spec.Tunnel_MiddleDrainCellar_Control_ButtonManual_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_MiddleDrainCellar_Control_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_MiddleDrainCellar_Control_ButtonManual_conditionPush_()))) {
            spec.Tunnel_MiddleDrainCellar_Control_ButtonManual_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_MiddleDrainCellar_Control_ButtonManual_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_MiddleDrainCellar_Control_ButtonManual_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(84, false);
        if (this.doInfoPrintOutput) this.printOutput(84, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 35 and event "Tunnel_MiddleDrainCellar_Sensor1.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge35() {
        var guard = ((spec.Tunnel_MiddleDrainCellar_Sensor2_) == (spec.specEnum._off)) && ((((spec.Tunnel_MiddleDrainCellar_Pump1_) == (spec.specEnum._on)) || ((spec.Tunnel_MiddleDrainCellar_Pump2_) == (spec.specEnum._on))) && ((spec.Tunnel_MiddleDrainCellar_Sensor1_) == (spec.specEnum._on)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(98, true);
        if (this.doInfoEvent) this.infoEvent(98, true);

        spec.Tunnel_MiddleDrainCellar_Sensor1_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(98, false);
        if (this.doInfoPrintOutput) this.printOutput(98, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 36 and event "Tunnel_MiddleDrainCellar_Sensor1.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge36() {
        var guard = (spec.Tunnel_MiddleDrainCellar_Sensor1_) == (spec.specEnum._off);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(99, true);
        if (this.doInfoEvent) this.infoEvent(99, true);

        spec.Tunnel_MiddleDrainCellar_Sensor1_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(99, false);
        if (this.doInfoPrintOutput) this.printOutput(99, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 37 and event "Tunnel_MiddleDrainCellar_Sensor2.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge37() {
        var guard = ((spec.Tunnel_MiddleDrainCellar_Sensor3_) == (spec.specEnum._off)) && ((((spec.Tunnel_MiddleDrainCellar_Pump1_) == (spec.specEnum._on)) || ((spec.Tunnel_MiddleDrainCellar_Pump2_) == (spec.specEnum._on))) && ((spec.Tunnel_MiddleDrainCellar_Sensor2_) == (spec.specEnum._on)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(100, true);
        if (this.doInfoEvent) this.infoEvent(100, true);

        spec.Tunnel_MiddleDrainCellar_Sensor2_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(100, false);
        if (this.doInfoPrintOutput) this.printOutput(100, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 38 and event "Tunnel_MiddleDrainCellar_Sensor2.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge38() {
        var guard = ((spec.Tunnel_MiddleDrainCellar_Sensor1_) == (spec.specEnum._on)) && ((spec.Tunnel_MiddleDrainCellar_Sensor2_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(101, true);
        if (this.doInfoEvent) this.infoEvent(101, true);

        spec.Tunnel_MiddleDrainCellar_Sensor2_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(101, false);
        if (this.doInfoPrintOutput) this.printOutput(101, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 39 and event "Tunnel_MiddleDrainCellar_Sensor3.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge39() {
        var guard = ((spec.Tunnel_MiddleDrainCellar_Sensor4_) == (spec.specEnum._off)) && ((((spec.Tunnel_MiddleDrainCellar_Pump1_) == (spec.specEnum._on)) || ((spec.Tunnel_MiddleDrainCellar_Pump2_) == (spec.specEnum._on))) && ((spec.Tunnel_MiddleDrainCellar_Sensor3_) == (spec.specEnum._on)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(102, true);
        if (this.doInfoEvent) this.infoEvent(102, true);

        spec.Tunnel_MiddleDrainCellar_Sensor3_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(102, false);
        if (this.doInfoPrintOutput) this.printOutput(102, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 40 and event "Tunnel_MiddleDrainCellar_Sensor3.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge40() {
        var guard = ((spec.Tunnel_MiddleDrainCellar_Sensor2_) == (spec.specEnum._on)) && ((spec.Tunnel_MiddleDrainCellar_Sensor3_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(103, true);
        if (this.doInfoEvent) this.infoEvent(103, true);

        spec.Tunnel_MiddleDrainCellar_Sensor3_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(103, false);
        if (this.doInfoPrintOutput) this.printOutput(103, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 41 and event "Tunnel_MiddleDrainCellar_Sensor4.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge41() {
        var guard = ((spec.Tunnel_MiddleDrainCellar_Sensor5_) == (spec.specEnum._off)) && ((((spec.Tunnel_MiddleDrainCellar_Pump1_) == (spec.specEnum._on)) || ((spec.Tunnel_MiddleDrainCellar_Pump2_) == (spec.specEnum._on))) && ((spec.Tunnel_MiddleDrainCellar_Sensor4_) == (spec.specEnum._on)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(104, true);
        if (this.doInfoEvent) this.infoEvent(104, true);

        spec.Tunnel_MiddleDrainCellar_Sensor4_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(104, false);
        if (this.doInfoPrintOutput) this.printOutput(104, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 42 and event "Tunnel_MiddleDrainCellar_Sensor4.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge42() {
        var guard = ((spec.Tunnel_MiddleDrainCellar_Sensor3_) == (spec.specEnum._on)) && ((spec.Tunnel_MiddleDrainCellar_Sensor4_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(105, true);
        if (this.doInfoEvent) this.infoEvent(105, true);

        spec.Tunnel_MiddleDrainCellar_Sensor4_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(105, false);
        if (this.doInfoPrintOutput) this.printOutput(105, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 43 and event "Tunnel_MiddleDrainCellar_Sensor5.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge43() {
        var guard = (((spec.Tunnel_MiddleDrainCellar_Pump1_) == (spec.specEnum._on)) || ((spec.Tunnel_MiddleDrainCellar_Pump2_) == (spec.specEnum._on))) && ((spec.Tunnel_MiddleDrainCellar_Sensor5_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(106, true);
        if (this.doInfoEvent) this.infoEvent(106, true);

        spec.Tunnel_MiddleDrainCellar_Sensor5_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(106, false);
        if (this.doInfoPrintOutput) this.printOutput(106, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 44 and event "Tunnel_MiddleDrainCellar_Sensor5.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge44() {
        var guard = ((spec.Tunnel_MiddleDrainCellar_Sensor4_) == (spec.specEnum._on)) && ((spec.Tunnel_MiddleDrainCellar_Sensor5_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(107, true);
        if (this.doInfoEvent) this.infoEvent(107, true);

        spec.Tunnel_MiddleDrainCellar_Sensor5_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(107, false);
        if (this.doInfoPrintOutput) this.printOutput(107, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 45 and event "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge45() {

        if (this.doInfoPrintOutput) this.printOutput(113, true);
        if (this.doInfoEvent) this.infoEvent(113, true);

        if (((spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_conditionPush_())) {
            spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_conditionPush_()))) {
            spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(113, false);
        if (this.doInfoPrintOutput) this.printOutput(113, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 46 and event "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge46() {

        if (this.doInfoPrintOutput) this.printOutput(116, true);
        if (this.doInfoEvent) this.infoEvent(116, true);

        if (((spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_conditionPush_())) {
            spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_conditionPush_()))) {
            spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(116, false);
        if (this.doInfoPrintOutput) this.printOutput(116, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 47 and event "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge47() {

        if (this.doInfoPrintOutput) this.printOutput(119, true);
        if (this.doInfoEvent) this.infoEvent(119, true);

        if (((spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_conditionPush_())) {
            spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_conditionPush_()))) {
            spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(119, false);
        if (this.doInfoPrintOutput) this.printOutput(119, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 48 and event "Tunnel_MiddleTunnelChannel_ButtonLightingOff_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge48() {

        if (this.doInfoPrintOutput) this.printOutput(122, true);
        if (this.doInfoEvent) this.infoEvent(122, true);

        if (((spec.Tunnel_MiddleTunnelChannel_ButtonLightingOff_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_MiddleTunnelChannel_ButtonLightingOff_conditionPush_())) {
            spec.Tunnel_MiddleTunnelChannel_ButtonLightingOff_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_MiddleTunnelChannel_ButtonLightingOff_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_MiddleTunnelChannel_ButtonLightingOff_conditionPush_()))) {
            spec.Tunnel_MiddleTunnelChannel_ButtonLightingOff_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_MiddleTunnelChannel_ButtonLightingOff_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_MiddleTunnelChannel_ButtonLightingOff_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(122, false);
        if (this.doInfoPrintOutput) this.printOutput(122, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 49 and event "Tunnel_MiddleTunnelChannel_ButtonLightingOn_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge49() {

        if (this.doInfoPrintOutput) this.printOutput(125, true);
        if (this.doInfoEvent) this.infoEvent(125, true);

        if (((spec.Tunnel_MiddleTunnelChannel_ButtonLightingOn_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_MiddleTunnelChannel_ButtonLightingOn_conditionPush_())) {
            spec.Tunnel_MiddleTunnelChannel_ButtonLightingOn_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_MiddleTunnelChannel_ButtonLightingOn_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_MiddleTunnelChannel_ButtonLightingOn_conditionPush_()))) {
            spec.Tunnel_MiddleTunnelChannel_ButtonLightingOn_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_MiddleTunnelChannel_ButtonLightingOn_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_MiddleTunnelChannel_ButtonLightingOn_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(125, false);
        if (this.doInfoPrintOutput) this.printOutput(125, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 50 and event "Tunnel_MiddleTunnelChannel_ButtonPressureLeft_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge50() {

        if (this.doInfoPrintOutput) this.printOutput(128, true);
        if (this.doInfoEvent) this.infoEvent(128, true);

        if (((spec.Tunnel_MiddleTunnelChannel_ButtonPressureLeft_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_MiddleTunnelChannel_ButtonPressureLeft_conditionPush_())) {
            spec.Tunnel_MiddleTunnelChannel_ButtonPressureLeft_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_MiddleTunnelChannel_ButtonPressureLeft_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_MiddleTunnelChannel_ButtonPressureLeft_conditionPush_()))) {
            spec.Tunnel_MiddleTunnelChannel_ButtonPressureLeft_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_MiddleTunnelChannel_ButtonPressureLeft_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_MiddleTunnelChannel_ButtonPressureLeft_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(128, false);
        if (this.doInfoPrintOutput) this.printOutput(128, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 51 and event "Tunnel_MiddleTunnelChannel_ButtonPressureOff_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge51() {

        if (this.doInfoPrintOutput) this.printOutput(131, true);
        if (this.doInfoEvent) this.infoEvent(131, true);

        if (((spec.Tunnel_MiddleTunnelChannel_ButtonPressureOff_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_MiddleTunnelChannel_ButtonPressureOff_conditionPush_())) {
            spec.Tunnel_MiddleTunnelChannel_ButtonPressureOff_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_MiddleTunnelChannel_ButtonPressureOff_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_MiddleTunnelChannel_ButtonPressureOff_conditionPush_()))) {
            spec.Tunnel_MiddleTunnelChannel_ButtonPressureOff_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_MiddleTunnelChannel_ButtonPressureOff_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_MiddleTunnelChannel_ButtonPressureOff_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(131, false);
        if (this.doInfoPrintOutput) this.printOutput(131, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 52 and event "Tunnel_MiddleTunnelChannel_ButtonPressureRight_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge52() {

        if (this.doInfoPrintOutput) this.printOutput(134, true);
        if (this.doInfoEvent) this.infoEvent(134, true);

        if (((spec.Tunnel_MiddleTunnelChannel_ButtonPressureRight_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_MiddleTunnelChannel_ButtonPressureRight_conditionPush_())) {
            spec.Tunnel_MiddleTunnelChannel_ButtonPressureRight_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_MiddleTunnelChannel_ButtonPressureRight_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_MiddleTunnelChannel_ButtonPressureRight_conditionPush_()))) {
            spec.Tunnel_MiddleTunnelChannel_ButtonPressureRight_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_MiddleTunnelChannel_ButtonPressureRight_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_MiddleTunnelChannel_ButtonPressureRight_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(134, false);
        if (this.doInfoPrintOutput) this.printOutput(134, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 53 and event "Tunnel_MiddleTunnelChannel_ButtonStartMessage_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge53() {

        if (this.doInfoPrintOutput) this.printOutput(137, true);
        if (this.doInfoEvent) this.infoEvent(137, true);

        if (((spec.Tunnel_MiddleTunnelChannel_ButtonStartMessage_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_MiddleTunnelChannel_ButtonStartMessage_conditionPush_())) {
            spec.Tunnel_MiddleTunnelChannel_ButtonStartMessage_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_MiddleTunnelChannel_ButtonStartMessage_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_MiddleTunnelChannel_ButtonStartMessage_conditionPush_()))) {
            spec.Tunnel_MiddleTunnelChannel_ButtonStartMessage_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_MiddleTunnelChannel_ButtonStartMessage_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_MiddleTunnelChannel_ButtonStartMessage_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(137, false);
        if (this.doInfoPrintOutput) this.printOutput(137, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 54 and event "Tunnel_MiddleTunnelChannel_ButtonStopMessage_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge54() {

        if (this.doInfoPrintOutput) this.printOutput(140, true);
        if (this.doInfoEvent) this.infoEvent(140, true);

        if (((spec.Tunnel_MiddleTunnelChannel_ButtonStopMessage_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_MiddleTunnelChannel_ButtonStopMessage_conditionPush_())) {
            spec.Tunnel_MiddleTunnelChannel_ButtonStopMessage_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_MiddleTunnelChannel_ButtonStopMessage_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_MiddleTunnelChannel_ButtonStopMessage_conditionPush_()))) {
            spec.Tunnel_MiddleTunnelChannel_ButtonStopMessage_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_MiddleTunnelChannel_ButtonStopMessage_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_MiddleTunnelChannel_ButtonStopMessage_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(140, false);
        if (this.doInfoPrintOutput) this.printOutput(140, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 55 and event "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge55() {

        if (this.doInfoPrintOutput) this.printOutput(143, true);
        if (this.doInfoEvent) this.infoEvent(143, true);

        if (((spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_conditionPush_())) {
            spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_conditionPush_()))) {
            spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(143, false);
        if (this.doInfoPrintOutput) this.printOutput(143, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 56 and event "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge56() {

        if (this.doInfoPrintOutput) this.printOutput(146, true);
        if (this.doInfoEvent) this.infoEvent(146, true);

        if (((spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_conditionPush_())) {
            spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_conditionPush_()))) {
            spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(146, false);
        if (this.doInfoPrintOutput) this.printOutput(146, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 57 and event "Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge57() {

        if (this.doInfoPrintOutput) this.printOutput(151, true);
        if (this.doInfoEvent) this.infoEvent(151, true);

        if (((spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_conditionPush_())) {
            spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_conditionPush_()))) {
            spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(151, false);
        if (this.doInfoPrintOutput) this.printOutput(151, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 58 and event "Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge58() {

        if (this.doInfoPrintOutput) this.printOutput(154, true);
        if (this.doInfoEvent) this.infoEvent(154, true);

        if (((spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_conditionPush_())) {
            spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_conditionPush_()))) {
            spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(154, false);
        if (this.doInfoPrintOutput) this.printOutput(154, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 59 and event "Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge59() {

        if (this.doInfoPrintOutput) this.printOutput(159, true);
        if (this.doInfoEvent) this.infoEvent(159, true);

        if (((spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_conditionPush_())) {
            spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_conditionPush_()))) {
            spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(159, false);
        if (this.doInfoPrintOutput) this.printOutput(159, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 60 and event "Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge60() {

        if (this.doInfoPrintOutput) this.printOutput(162, true);
        if (this.doInfoEvent) this.infoEvent(162, true);

        if (((spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_conditionPush_())) {
            spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_conditionPush_()))) {
            spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(162, false);
        if (this.doInfoPrintOutput) this.printOutput(162, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 61 and event "Tunnel_Traffictube1_Boombarrier1_ObstacleDetection.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge61() {
        var guard = (spec.Tunnel_Traffictube1_Boombarrier1_ObstacleDetection_) == (spec.specEnum._on);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(188, true);
        if (this.doInfoEvent) this.infoEvent(188, true);

        spec.Tunnel_Traffictube1_Boombarrier1_ObstacleDetection_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(188, false);
        if (this.doInfoPrintOutput) this.printOutput(188, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 62 and event "Tunnel_Traffictube1_Boombarrier1_ObstacleDetection.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge62() {
        var guard = (spec.Tunnel_Traffictube1_Boombarrier1_ObstacleDetection_) == (spec.specEnum._off);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(189, true);
        if (this.doInfoEvent) this.infoEvent(189, true);

        spec.Tunnel_Traffictube1_Boombarrier1_ObstacleDetection_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(189, false);
        if (this.doInfoPrintOutput) this.printOutput(189, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 63 and event "Tunnel_Traffictube1_Boombarrier1_SensorClosed.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge63() {
        var guard = ((spec.Tunnel_Traffictube1_Boombarrier1_ActuatorUp_) == (spec.specEnum._on)) && ((spec.Tunnel_Traffictube1_Boombarrier1_SensorClosed_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(190, true);
        if (this.doInfoEvent) this.infoEvent(190, true);

        spec.Tunnel_Traffictube1_Boombarrier1_SensorClosed_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(190, false);
        if (this.doInfoPrintOutput) this.printOutput(190, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 64 and event "Tunnel_Traffictube1_Boombarrier1_SensorClosed.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge64() {
        var guard = ((spec.Tunnel_Traffictube1_Boombarrier1_ActuatorDown_) == (spec.specEnum._on)) && (((spec.Tunnel_Traffictube1_Boombarrier1_SensorOpen_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube1_Boombarrier1_SensorClosed_) == (spec.specEnum._off)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(191, true);
        if (this.doInfoEvent) this.infoEvent(191, true);

        spec.Tunnel_Traffictube1_Boombarrier1_SensorClosed_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(191, false);
        if (this.doInfoPrintOutput) this.printOutput(191, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 65 and event "Tunnel_Traffictube1_Boombarrier1_SensorOpen.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge65() {
        var guard = ((spec.Tunnel_Traffictube1_Boombarrier1_ActuatorDown_) == (spec.specEnum._on)) && ((spec.Tunnel_Traffictube1_Boombarrier1_SensorOpen_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(192, true);
        if (this.doInfoEvent) this.infoEvent(192, true);

        spec.Tunnel_Traffictube1_Boombarrier1_SensorOpen_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(192, false);
        if (this.doInfoPrintOutput) this.printOutput(192, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 66 and event "Tunnel_Traffictube1_Boombarrier1_SensorOpen.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge66() {
        var guard = ((spec.Tunnel_Traffictube1_Boombarrier1_ActuatorUp_) == (spec.specEnum._on)) && (((spec.Tunnel_Traffictube1_Boombarrier1_SensorClosed_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube1_Boombarrier1_SensorOpen_) == (spec.specEnum._off)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(193, true);
        if (this.doInfoEvent) this.infoEvent(193, true);

        spec.Tunnel_Traffictube1_Boombarrier1_SensorOpen_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(193, false);
        if (this.doInfoPrintOutput) this.printOutput(193, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 67 and event "Tunnel_Traffictube1_Boombarrier2_ObstacleDetection.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge67() {
        var guard = (spec.Tunnel_Traffictube1_Boombarrier2_ObstacleDetection_) == (spec.specEnum._on);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(200, true);
        if (this.doInfoEvent) this.infoEvent(200, true);

        spec.Tunnel_Traffictube1_Boombarrier2_ObstacleDetection_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(200, false);
        if (this.doInfoPrintOutput) this.printOutput(200, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 68 and event "Tunnel_Traffictube1_Boombarrier2_ObstacleDetection.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge68() {
        var guard = (spec.Tunnel_Traffictube1_Boombarrier2_ObstacleDetection_) == (spec.specEnum._off);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(201, true);
        if (this.doInfoEvent) this.infoEvent(201, true);

        spec.Tunnel_Traffictube1_Boombarrier2_ObstacleDetection_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(201, false);
        if (this.doInfoPrintOutput) this.printOutput(201, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 69 and event "Tunnel_Traffictube1_Boombarrier2_SensorClosed.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge69() {
        var guard = ((spec.Tunnel_Traffictube1_Boombarrier2_ActuatorUp_) == (spec.specEnum._on)) && ((spec.Tunnel_Traffictube1_Boombarrier2_SensorClosed_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(202, true);
        if (this.doInfoEvent) this.infoEvent(202, true);

        spec.Tunnel_Traffictube1_Boombarrier2_SensorClosed_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(202, false);
        if (this.doInfoPrintOutput) this.printOutput(202, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 70 and event "Tunnel_Traffictube1_Boombarrier2_SensorClosed.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge70() {
        var guard = ((spec.Tunnel_Traffictube1_Boombarrier2_ActuatorDown_) == (spec.specEnum._on)) && (((spec.Tunnel_Traffictube1_Boombarrier2_SensorOpen_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube1_Boombarrier2_SensorClosed_) == (spec.specEnum._off)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(203, true);
        if (this.doInfoEvent) this.infoEvent(203, true);

        spec.Tunnel_Traffictube1_Boombarrier2_SensorClosed_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(203, false);
        if (this.doInfoPrintOutput) this.printOutput(203, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 71 and event "Tunnel_Traffictube1_Boombarrier2_SensorOpen.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge71() {
        var guard = ((spec.Tunnel_Traffictube1_Boombarrier2_ActuatorDown_) == (spec.specEnum._on)) && ((spec.Tunnel_Traffictube1_Boombarrier2_SensorOpen_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(204, true);
        if (this.doInfoEvent) this.infoEvent(204, true);

        spec.Tunnel_Traffictube1_Boombarrier2_SensorOpen_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(204, false);
        if (this.doInfoPrintOutput) this.printOutput(204, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 72 and event "Tunnel_Traffictube1_Boombarrier2_SensorOpen.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge72() {
        var guard = ((spec.Tunnel_Traffictube1_Boombarrier2_ActuatorUp_) == (spec.specEnum._on)) && (((spec.Tunnel_Traffictube1_Boombarrier2_SensorClosed_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube1_Boombarrier2_SensorOpen_) == (spec.specEnum._off)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(205, true);
        if (this.doInfoEvent) this.infoEvent(205, true);

        spec.Tunnel_Traffictube1_Boombarrier2_SensorOpen_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(205, false);
        if (this.doInfoPrintOutput) this.printOutput(205, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 73 and event "Tunnel_Traffictube1_ButtonCamera1_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge73() {

        if (this.doInfoPrintOutput) this.printOutput(209, true);
        if (this.doInfoEvent) this.infoEvent(209, true);

        if (((spec.Tunnel_Traffictube1_ButtonCamera1_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonCamera1_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonCamera1_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonCamera1_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonCamera1_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonCamera1_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonCamera1_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonCamera1_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(209, false);
        if (this.doInfoPrintOutput) this.printOutput(209, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 74 and event "Tunnel_Traffictube1_ButtonCamera2_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge74() {

        if (this.doInfoPrintOutput) this.printOutput(212, true);
        if (this.doInfoEvent) this.infoEvent(212, true);

        if (((spec.Tunnel_Traffictube1_ButtonCamera2_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonCamera2_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonCamera2_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonCamera2_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonCamera2_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonCamera2_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonCamera2_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonCamera2_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(212, false);
        if (this.doInfoPrintOutput) this.printOutput(212, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 75 and event "Tunnel_Traffictube1_ButtonCamera3_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge75() {

        if (this.doInfoPrintOutput) this.printOutput(215, true);
        if (this.doInfoEvent) this.infoEvent(215, true);

        if (((spec.Tunnel_Traffictube1_ButtonCamera3_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonCamera3_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonCamera3_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonCamera3_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonCamera3_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonCamera3_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonCamera3_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonCamera3_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(215, false);
        if (this.doInfoPrintOutput) this.printOutput(215, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 76 and event "Tunnel_Traffictube1_ButtonCamera4_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge76() {

        if (this.doInfoPrintOutput) this.printOutput(218, true);
        if (this.doInfoEvent) this.infoEvent(218, true);

        if (((spec.Tunnel_Traffictube1_ButtonCamera4_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonCamera4_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonCamera4_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonCamera4_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonCamera4_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonCamera4_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonCamera4_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonCamera4_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(218, false);
        if (this.doInfoPrintOutput) this.printOutput(218, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 77 and event "Tunnel_Traffictube1_ButtonCamera5_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge77() {

        if (this.doInfoPrintOutput) this.printOutput(221, true);
        if (this.doInfoEvent) this.infoEvent(221, true);

        if (((spec.Tunnel_Traffictube1_ButtonCamera5_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonCamera5_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonCamera5_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonCamera5_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonCamera5_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonCamera5_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonCamera5_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonCamera5_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(221, false);
        if (this.doInfoPrintOutput) this.printOutput(221, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 78 and event "Tunnel_Traffictube1_ButtonCamera6_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge78() {

        if (this.doInfoPrintOutput) this.printOutput(224, true);
        if (this.doInfoEvent) this.infoEvent(224, true);

        if (((spec.Tunnel_Traffictube1_ButtonCamera6_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonCamera6_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonCamera6_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonCamera6_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonCamera6_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonCamera6_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonCamera6_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonCamera6_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(224, false);
        if (this.doInfoPrintOutput) this.printOutput(224, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 79 and event "Tunnel_Traffictube1_ButtonCameraStopView_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge79() {

        if (this.doInfoPrintOutput) this.printOutput(227, true);
        if (this.doInfoEvent) this.infoEvent(227, true);

        if (((spec.Tunnel_Traffictube1_ButtonCameraStopView_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonCameraStopView_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonCameraStopView_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonCameraStopView_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonCameraStopView_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonCameraStopView_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonCameraStopView_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonCameraStopView_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(227, false);
        if (this.doInfoPrintOutput) this.printOutput(227, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 80 and event "Tunnel_Traffictube1_ButtonCameraView_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge80() {

        if (this.doInfoPrintOutput) this.printOutput(230, true);
        if (this.doInfoEvent) this.infoEvent(230, true);

        if (((spec.Tunnel_Traffictube1_ButtonCameraView_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonCameraView_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonCameraView_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonCameraView_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonCameraView_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonCameraView_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonCameraView_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonCameraView_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(230, false);
        if (this.doInfoPrintOutput) this.printOutput(230, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 81 and event "Tunnel_Traffictube1_ButtonCloseBoombarriers_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge81() {

        if (this.doInfoPrintOutput) this.printOutput(233, true);
        if (this.doInfoEvent) this.infoEvent(233, true);

        if (((spec.Tunnel_Traffictube1_ButtonCloseBoombarriers_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonCloseBoombarriers_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonCloseBoombarriers_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonCloseBoombarriers_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonCloseBoombarriers_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonCloseBoombarriers_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonCloseBoombarriers_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonCloseBoombarriers_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(233, false);
        if (this.doInfoPrintOutput) this.printOutput(233, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 82 and event "Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge82() {

        if (this.doInfoPrintOutput) this.printOutput(236, true);
        if (this.doInfoEvent) this.infoEvent(236, true);

        if (((spec.Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(236, false);
        if (this.doInfoPrintOutput) this.printOutput(236, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 83 and event "Tunnel_Traffictube1_ButtonEmergency_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge83() {

        if (this.doInfoPrintOutput) this.printOutput(239, true);
        if (this.doInfoEvent) this.infoEvent(239, true);

        if (((spec.Tunnel_Traffictube1_ButtonEmergency_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonEmergency_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonEmergency_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonEmergency_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonEmergency_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonEmergency_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonEmergency_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonEmergency_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(239, false);
        if (this.doInfoPrintOutput) this.printOutput(239, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 84 and event "Tunnel_Traffictube1_ButtonEvacuation_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge84() {

        if (this.doInfoPrintOutput) this.printOutput(242, true);
        if (this.doInfoEvent) this.infoEvent(242, true);

        if (((spec.Tunnel_Traffictube1_ButtonEvacuation_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonEvacuation_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonEvacuation_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonEvacuation_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonEvacuation_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonEvacuation_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonEvacuation_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonEvacuation_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(242, false);
        if (this.doInfoPrintOutput) this.printOutput(242, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 85 and event "Tunnel_Traffictube1_ButtonFlashTrafficlights_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge85() {

        if (this.doInfoPrintOutput) this.printOutput(245, true);
        if (this.doInfoEvent) this.infoEvent(245, true);

        if (((spec.Tunnel_Traffictube1_ButtonFlashTrafficlights_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonFlashTrafficlights_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonFlashTrafficlights_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonFlashTrafficlights_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonFlashTrafficlights_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonFlashTrafficlights_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonFlashTrafficlights_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonFlashTrafficlights_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(245, false);
        if (this.doInfoPrintOutput) this.printOutput(245, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 86 and event "Tunnel_Traffictube1_ButtonLighting0_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge86() {

        if (this.doInfoPrintOutput) this.printOutput(248, true);
        if (this.doInfoEvent) this.infoEvent(248, true);

        if (((spec.Tunnel_Traffictube1_ButtonLighting0_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonLighting0_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonLighting0_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonLighting0_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonLighting0_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonLighting0_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonLighting0_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonLighting0_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(248, false);
        if (this.doInfoPrintOutput) this.printOutput(248, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 87 and event "Tunnel_Traffictube1_ButtonLighting1_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge87() {

        if (this.doInfoPrintOutput) this.printOutput(251, true);
        if (this.doInfoEvent) this.infoEvent(251, true);

        if (((spec.Tunnel_Traffictube1_ButtonLighting1_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonLighting1_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonLighting1_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonLighting1_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonLighting1_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonLighting1_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonLighting1_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonLighting1_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(251, false);
        if (this.doInfoPrintOutput) this.printOutput(251, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 88 and event "Tunnel_Traffictube1_ButtonLighting2_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge88() {

        if (this.doInfoPrintOutput) this.printOutput(254, true);
        if (this.doInfoEvent) this.infoEvent(254, true);

        if (((spec.Tunnel_Traffictube1_ButtonLighting2_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonLighting2_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonLighting2_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonLighting2_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonLighting2_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonLighting2_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonLighting2_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonLighting2_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(254, false);
        if (this.doInfoPrintOutput) this.printOutput(254, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 89 and event "Tunnel_Traffictube1_ButtonLighting3_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge89() {

        if (this.doInfoPrintOutput) this.printOutput(257, true);
        if (this.doInfoEvent) this.infoEvent(257, true);

        if (((spec.Tunnel_Traffictube1_ButtonLighting3_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonLighting3_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonLighting3_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonLighting3_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonLighting3_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonLighting3_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonLighting3_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonLighting3_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(257, false);
        if (this.doInfoPrintOutput) this.printOutput(257, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 90 and event "Tunnel_Traffictube1_ButtonLighting4_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge90() {

        if (this.doInfoPrintOutput) this.printOutput(260, true);
        if (this.doInfoEvent) this.infoEvent(260, true);

        if (((spec.Tunnel_Traffictube1_ButtonLighting4_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonLighting4_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonLighting4_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonLighting4_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonLighting4_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonLighting4_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonLighting4_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonLighting4_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(260, false);
        if (this.doInfoPrintOutput) this.printOutput(260, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 91 and event "Tunnel_Traffictube1_ButtonLighting5_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge91() {

        if (this.doInfoPrintOutput) this.printOutput(263, true);
        if (this.doInfoEvent) this.infoEvent(263, true);

        if (((spec.Tunnel_Traffictube1_ButtonLighting5_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonLighting5_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonLighting5_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonLighting5_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonLighting5_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonLighting5_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonLighting5_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonLighting5_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(263, false);
        if (this.doInfoPrintOutput) this.printOutput(263, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 92 and event "Tunnel_Traffictube1_ButtonLighting6_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge92() {

        if (this.doInfoPrintOutput) this.printOutput(266, true);
        if (this.doInfoEvent) this.infoEvent(266, true);

        if (((spec.Tunnel_Traffictube1_ButtonLighting6_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonLighting6_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonLighting6_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonLighting6_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonLighting6_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonLighting6_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonLighting6_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonLighting6_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(266, false);
        if (this.doInfoPrintOutput) this.printOutput(266, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 93 and event "Tunnel_Traffictube1_ButtonLighting7_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge93() {

        if (this.doInfoPrintOutput) this.printOutput(269, true);
        if (this.doInfoEvent) this.infoEvent(269, true);

        if (((spec.Tunnel_Traffictube1_ButtonLighting7_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonLighting7_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonLighting7_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonLighting7_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonLighting7_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonLighting7_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonLighting7_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonLighting7_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(269, false);
        if (this.doInfoPrintOutput) this.printOutput(269, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 94 and event "Tunnel_Traffictube1_ButtonLighting8_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge94() {

        if (this.doInfoPrintOutput) this.printOutput(272, true);
        if (this.doInfoEvent) this.infoEvent(272, true);

        if (((spec.Tunnel_Traffictube1_ButtonLighting8_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonLighting8_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonLighting8_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonLighting8_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonLighting8_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonLighting8_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonLighting8_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonLighting8_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(272, false);
        if (this.doInfoPrintOutput) this.printOutput(272, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 95 and event "Tunnel_Traffictube1_ButtonLive_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge95() {

        if (this.doInfoPrintOutput) this.printOutput(275, true);
        if (this.doInfoEvent) this.infoEvent(275, true);

        if (((spec.Tunnel_Traffictube1_ButtonLive_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonLive_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonLive_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonLive_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonLive_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonLive_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonLive_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonLive_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(275, false);
        if (this.doInfoPrintOutput) this.printOutput(275, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 96 and event "Tunnel_Traffictube1_ButtonMaintenance_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge96() {

        if (this.doInfoPrintOutput) this.printOutput(278, true);
        if (this.doInfoEvent) this.infoEvent(278, true);

        if (((spec.Tunnel_Traffictube1_ButtonMaintenance_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonMaintenance_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonMaintenance_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonMaintenance_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonMaintenance_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonMaintenance_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonMaintenance_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonMaintenance_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(278, false);
        if (this.doInfoPrintOutput) this.printOutput(278, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 97 and event "Tunnel_Traffictube1_ButtonMessage_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge97() {

        if (this.doInfoPrintOutput) this.printOutput(281, true);
        if (this.doInfoEvent) this.infoEvent(281, true);

        if (((spec.Tunnel_Traffictube1_ButtonMessage_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonMessage_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonMessage_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonMessage_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonMessage_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonMessage_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonMessage_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonMessage_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(281, false);
        if (this.doInfoPrintOutput) this.printOutput(281, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 98 and event "Tunnel_Traffictube1_ButtonOffTrafficlights_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge98() {

        if (this.doInfoPrintOutput) this.printOutput(284, true);
        if (this.doInfoEvent) this.infoEvent(284, true);

        if (((spec.Tunnel_Traffictube1_ButtonOffTrafficlights_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonOffTrafficlights_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonOffTrafficlights_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonOffTrafficlights_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonOffTrafficlights_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonOffTrafficlights_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonOffTrafficlights_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonOffTrafficlights_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(284, false);
        if (this.doInfoPrintOutput) this.printOutput(284, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 99 and event "Tunnel_Traffictube1_ButtonOpenBoombarriers_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge99() {

        if (this.doInfoPrintOutput) this.printOutput(287, true);
        if (this.doInfoEvent) this.infoEvent(287, true);

        if (((spec.Tunnel_Traffictube1_ButtonOpenBoombarriers_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonOpenBoombarriers_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonOpenBoombarriers_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonOpenBoombarriers_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonOpenBoombarriers_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonOpenBoombarriers_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonOpenBoombarriers_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonOpenBoombarriers_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(287, false);
        if (this.doInfoPrintOutput) this.printOutput(287, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 100 and event "Tunnel_Traffictube1_ButtonOperational_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge100() {

        if (this.doInfoPrintOutput) this.printOutput(290, true);
        if (this.doInfoEvent) this.infoEvent(290, true);

        if (((spec.Tunnel_Traffictube1_ButtonOperational_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonOperational_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonOperational_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonOperational_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonOperational_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonOperational_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonOperational_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonOperational_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(290, false);
        if (this.doInfoPrintOutput) this.printOutput(290, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 101 and event "Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge101() {

        if (this.doInfoPrintOutput) this.printOutput(293, true);
        if (this.doInfoEvent) this.infoEvent(293, true);

        if (((spec.Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(293, false);
        if (this.doInfoPrintOutput) this.printOutput(293, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 102 and event "Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge102() {

        if (this.doInfoPrintOutput) this.printOutput(296, true);
        if (this.doInfoEvent) this.infoEvent(296, true);

        if (((spec.Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(296, false);
        if (this.doInfoPrintOutput) this.printOutput(296, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 103 and event "Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge103() {

        if (this.doInfoPrintOutput) this.printOutput(299, true);
        if (this.doInfoEvent) this.infoEvent(299, true);

        if (((spec.Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(299, false);
        if (this.doInfoPrintOutput) this.printOutput(299, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 104 and event "Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge104() {

        if (this.doInfoPrintOutput) this.printOutput(302, true);
        if (this.doInfoEvent) this.infoEvent(302, true);

        if (((spec.Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(302, false);
        if (this.doInfoPrintOutput) this.printOutput(302, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 105 and event "Tunnel_Traffictube1_ButtonRecovery_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge105() {

        if (this.doInfoPrintOutput) this.printOutput(305, true);
        if (this.doInfoEvent) this.infoEvent(305, true);

        if (((spec.Tunnel_Traffictube1_ButtonRecovery_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonRecovery_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonRecovery_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonRecovery_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonRecovery_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonRecovery_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonRecovery_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonRecovery_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(305, false);
        if (this.doInfoPrintOutput) this.printOutput(305, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 106 and event "Tunnel_Traffictube1_ButtonRedTrafficlights_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge106() {

        if (this.doInfoPrintOutput) this.printOutput(308, true);
        if (this.doInfoEvent) this.infoEvent(308, true);

        if (((spec.Tunnel_Traffictube1_ButtonRedTrafficlights_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonRedTrafficlights_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonRedTrafficlights_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonRedTrafficlights_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonRedTrafficlights_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonRedTrafficlights_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonRedTrafficlights_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonRedTrafficlights_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(308, false);
        if (this.doInfoPrintOutput) this.printOutput(308, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 107 and event "Tunnel_Traffictube1_ButtonStopBoombarriers_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge107() {

        if (this.doInfoPrintOutput) this.printOutput(311, true);
        if (this.doInfoEvent) this.infoEvent(311, true);

        if (((spec.Tunnel_Traffictube1_ButtonStopBoombarriers_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonStopBoombarriers_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonStopBoombarriers_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonStopBoombarriers_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonStopBoombarriers_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonStopBoombarriers_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonStopBoombarriers_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonStopBoombarriers_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(311, false);
        if (this.doInfoPrintOutput) this.printOutput(311, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 108 and event "Tunnel_Traffictube1_ButtonVentilation0_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge108() {

        if (this.doInfoPrintOutput) this.printOutput(314, true);
        if (this.doInfoEvent) this.infoEvent(314, true);

        if (((spec.Tunnel_Traffictube1_ButtonVentilation0_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonVentilation0_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonVentilation0_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonVentilation0_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonVentilation0_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonVentilation0_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonVentilation0_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonVentilation0_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(314, false);
        if (this.doInfoPrintOutput) this.printOutput(314, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 109 and event "Tunnel_Traffictube1_ButtonVentilation1_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge109() {

        if (this.doInfoPrintOutput) this.printOutput(317, true);
        if (this.doInfoEvent) this.infoEvent(317, true);

        if (((spec.Tunnel_Traffictube1_ButtonVentilation1_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonVentilation1_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonVentilation1_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonVentilation1_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonVentilation1_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonVentilation1_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonVentilation1_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonVentilation1_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(317, false);
        if (this.doInfoPrintOutput) this.printOutput(317, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 110 and event "Tunnel_Traffictube1_ButtonVentilation2_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge110() {

        if (this.doInfoPrintOutput) this.printOutput(320, true);
        if (this.doInfoEvent) this.infoEvent(320, true);

        if (((spec.Tunnel_Traffictube1_ButtonVentilation2_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonVentilation2_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonVentilation2_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonVentilation2_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonVentilation2_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonVentilation2_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonVentilation2_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonVentilation2_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(320, false);
        if (this.doInfoPrintOutput) this.printOutput(320, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 111 and event "Tunnel_Traffictube1_ButtonVentilation3_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge111() {

        if (this.doInfoPrintOutput) this.printOutput(323, true);
        if (this.doInfoEvent) this.infoEvent(323, true);

        if (((spec.Tunnel_Traffictube1_ButtonVentilation3_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonVentilation3_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonVentilation3_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonVentilation3_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonVentilation3_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonVentilation3_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonVentilation3_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonVentilation3_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(323, false);
        if (this.doInfoPrintOutput) this.printOutput(323, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 112 and event "Tunnel_Traffictube1_ButtonVentilation4_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge112() {

        if (this.doInfoPrintOutput) this.printOutput(326, true);
        if (this.doInfoEvent) this.infoEvent(326, true);

        if (((spec.Tunnel_Traffictube1_ButtonVentilation4_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonVentilation4_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonVentilation4_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonVentilation4_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonVentilation4_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonVentilation4_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonVentilation4_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonVentilation4_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(326, false);
        if (this.doInfoPrintOutput) this.printOutput(326, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 113 and event "Tunnel_Traffictube1_ButtonVentilation5_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge113() {

        if (this.doInfoPrintOutput) this.printOutput(329, true);
        if (this.doInfoEvent) this.infoEvent(329, true);

        if (((spec.Tunnel_Traffictube1_ButtonVentilation5_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonVentilation5_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonVentilation5_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonVentilation5_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonVentilation5_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonVentilation5_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonVentilation5_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonVentilation5_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(329, false);
        if (this.doInfoPrintOutput) this.printOutput(329, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 114 and event "Tunnel_Traffictube1_ButtonVentilation6_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge114() {

        if (this.doInfoPrintOutput) this.printOutput(332, true);
        if (this.doInfoEvent) this.infoEvent(332, true);

        if (((spec.Tunnel_Traffictube1_ButtonVentilation6_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonVentilation6_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonVentilation6_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonVentilation6_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonVentilation6_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonVentilation6_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonVentilation6_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonVentilation6_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(332, false);
        if (this.doInfoPrintOutput) this.printOutput(332, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 115 and event "Tunnel_Traffictube1_ButtonVentilation7_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge115() {

        if (this.doInfoPrintOutput) this.printOutput(335, true);
        if (this.doInfoEvent) this.infoEvent(335, true);

        if (((spec.Tunnel_Traffictube1_ButtonVentilation7_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonVentilation7_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonVentilation7_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonVentilation7_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonVentilation7_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonVentilation7_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonVentilation7_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonVentilation7_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(335, false);
        if (this.doInfoPrintOutput) this.printOutput(335, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 116 and event "Tunnel_Traffictube1_ButtonVentilation8_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge116() {

        if (this.doInfoPrintOutput) this.printOutput(338, true);
        if (this.doInfoEvent) this.infoEvent(338, true);

        if (((spec.Tunnel_Traffictube1_ButtonVentilation8_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonVentilation8_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonVentilation8_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonVentilation8_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonVentilation8_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonVentilation8_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonVentilation8_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonVentilation8_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(338, false);
        if (this.doInfoPrintOutput) this.printOutput(338, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 117 and event "Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge117() {

        if (this.doInfoPrintOutput) this.printOutput(341, true);
        if (this.doInfoEvent) this.infoEvent(341, true);

        if (((spec.Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(341, false);
        if (this.doInfoPrintOutput) this.printOutput(341, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 118 and event "Tunnel_Traffictube1_ButtonVentilationDrivingDirection_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge118() {

        if (this.doInfoPrintOutput) this.printOutput(344, true);
        if (this.doInfoEvent) this.infoEvent(344, true);

        if (((spec.Tunnel_Traffictube1_ButtonVentilationDrivingDirection_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ButtonVentilationDrivingDirection_conditionPush_())) {
            spec.Tunnel_Traffictube1_ButtonVentilationDrivingDirection_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ButtonVentilationDrivingDirection_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ButtonVentilationDrivingDirection_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ButtonVentilationDrivingDirection_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ButtonVentilationDrivingDirection_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ButtonVentilationDrivingDirection_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(344, false);
        if (this.doInfoPrintOutput) this.printOutput(344, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 119 and event "Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge119() {

        if (this.doInfoPrintOutput) this.printOutput(362, true);
        if (this.doInfoEvent) this.infoEvent(362, true);

        if (((spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_conditionPush_())) {
            spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(362, false);
        if (this.doInfoPrintOutput) this.printOutput(362, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 120 and event "Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge120() {

        if (this.doInfoPrintOutput) this.printOutput(365, true);
        if (this.doInfoEvent) this.infoEvent(365, true);

        if (((spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_conditionPush_())) {
            spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(365, false);
        if (this.doInfoPrintOutput) this.printOutput(365, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 121 and event "Tunnel_Traffictube1_ControlLighting_ButtonAuto_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge121() {

        if (this.doInfoPrintOutput) this.printOutput(370, true);
        if (this.doInfoEvent) this.infoEvent(370, true);

        if (((spec.Tunnel_Traffictube1_ControlLighting_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ControlLighting_ButtonAuto_conditionPush_())) {
            spec.Tunnel_Traffictube1_ControlLighting_ButtonAuto_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ControlLighting_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ControlLighting_ButtonAuto_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ControlLighting_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ControlLighting_ButtonAuto_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ControlLighting_ButtonAuto_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(370, false);
        if (this.doInfoPrintOutput) this.printOutput(370, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 122 and event "Tunnel_Traffictube1_ControlLighting_ButtonManual_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge122() {

        if (this.doInfoPrintOutput) this.printOutput(373, true);
        if (this.doInfoEvent) this.infoEvent(373, true);

        if (((spec.Tunnel_Traffictube1_ControlLighting_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ControlLighting_ButtonManual_conditionPush_())) {
            spec.Tunnel_Traffictube1_ControlLighting_ButtonManual_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ControlLighting_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ControlLighting_ButtonManual_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ControlLighting_ButtonManual_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ControlLighting_ButtonManual_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ControlLighting_ButtonManual_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(373, false);
        if (this.doInfoPrintOutput) this.printOutput(373, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 123 and event "Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge123() {

        if (this.doInfoPrintOutput) this.printOutput(378, true);
        if (this.doInfoEvent) this.infoEvent(378, true);

        if (((spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_conditionPush_())) {
            spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(378, false);
        if (this.doInfoPrintOutput) this.printOutput(378, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 124 and event "Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge124() {

        if (this.doInfoPrintOutput) this.printOutput(381, true);
        if (this.doInfoEvent) this.infoEvent(381, true);

        if (((spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_conditionPush_())) {
            spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(381, false);
        if (this.doInfoPrintOutput) this.printOutput(381, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 125 and event "Tunnel_Traffictube1_ControlVentilation_ButtonAuto_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge125() {

        if (this.doInfoPrintOutput) this.printOutput(386, true);
        if (this.doInfoEvent) this.infoEvent(386, true);

        if (((spec.Tunnel_Traffictube1_ControlVentilation_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ControlVentilation_ButtonAuto_conditionPush_())) {
            spec.Tunnel_Traffictube1_ControlVentilation_ButtonAuto_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ControlVentilation_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ControlVentilation_ButtonAuto_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ControlVentilation_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ControlVentilation_ButtonAuto_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ControlVentilation_ButtonAuto_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(386, false);
        if (this.doInfoPrintOutput) this.printOutput(386, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 126 and event "Tunnel_Traffictube1_ControlVentilation_ButtonManual_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge126() {

        if (this.doInfoPrintOutput) this.printOutput(389, true);
        if (this.doInfoEvent) this.infoEvent(389, true);

        if (((spec.Tunnel_Traffictube1_ControlVentilation_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_ControlVentilation_ButtonManual_conditionPush_())) {
            spec.Tunnel_Traffictube1_ControlVentilation_ButtonManual_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_ControlVentilation_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_ControlVentilation_ButtonManual_conditionPush_()))) {
            spec.Tunnel_Traffictube1_ControlVentilation_ButtonManual_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_ControlVentilation_ButtonManual_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_ControlVentilation_ButtonManual_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(389, false);
        if (this.doInfoPrintOutput) this.printOutput(389, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 127 and event "Tunnel_Traffictube1_EmergencyCabinetA_Firehose.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge127() {
        var guard = (spec.Tunnel_Traffictube1_EmergencyCabinetA_Firehose_) == (spec.specEnum._on);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(394, true);
        if (this.doInfoEvent) this.infoEvent(394, true);

        spec.Tunnel_Traffictube1_EmergencyCabinetA_Firehose_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(394, false);
        if (this.doInfoPrintOutput) this.printOutput(394, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 128 and event "Tunnel_Traffictube1_EmergencyCabinetA_Firehose.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge128() {
        var guard = (spec.Tunnel_Traffictube1_EmergencyCabinetA_Firehose_) == (spec.specEnum._off);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(395, true);
        if (this.doInfoEvent) this.infoEvent(395, true);

        spec.Tunnel_Traffictube1_EmergencyCabinetA_Firehose_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(395, false);
        if (this.doInfoPrintOutput) this.printOutput(395, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 129 and event "Tunnel_Traffictube1_EmergencyCabinetA_HandheldExtinguisher.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge129() {
        var guard = (spec.Tunnel_Traffictube1_EmergencyCabinetA_HandheldExtinguisher_) == (spec.specEnum._on);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(396, true);
        if (this.doInfoEvent) this.infoEvent(396, true);

        spec.Tunnel_Traffictube1_EmergencyCabinetA_HandheldExtinguisher_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(396, false);
        if (this.doInfoPrintOutput) this.printOutput(396, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 130 and event "Tunnel_Traffictube1_EmergencyCabinetA_HandheldExtinguisher.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge130() {
        var guard = (spec.Tunnel_Traffictube1_EmergencyCabinetA_HandheldExtinguisher_) == (spec.specEnum._off);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(397, true);
        if (this.doInfoEvent) this.infoEvent(397, true);

        spec.Tunnel_Traffictube1_EmergencyCabinetA_HandheldExtinguisher_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(397, false);
        if (this.doInfoPrintOutput) this.printOutput(397, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 131 and event "Tunnel_Traffictube1_EmergencyCabinetA_Phone.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge131() {
        var guard = (spec.Tunnel_Traffictube1_EmergencyCabinetA_Phone_) == (spec.specEnum._on);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(398, true);
        if (this.doInfoEvent) this.infoEvent(398, true);

        spec.Tunnel_Traffictube1_EmergencyCabinetA_Phone_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(398, false);
        if (this.doInfoPrintOutput) this.printOutput(398, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 132 and event "Tunnel_Traffictube1_EmergencyCabinetA_Phone.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge132() {
        var guard = (spec.Tunnel_Traffictube1_EmergencyCabinetA_Phone_) == (spec.specEnum._off);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(399, true);
        if (this.doInfoEvent) this.infoEvent(399, true);

        spec.Tunnel_Traffictube1_EmergencyCabinetA_Phone_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(399, false);
        if (this.doInfoPrintOutput) this.printOutput(399, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 133 and event "Tunnel_Traffictube1_EmergencyCabinetA_SensorOpen.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge133() {
        var guard = (spec.Tunnel_Traffictube1_EmergencyCabinetA_SensorOpen_) == (spec.specEnum._on);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(400, true);
        if (this.doInfoEvent) this.infoEvent(400, true);

        spec.Tunnel_Traffictube1_EmergencyCabinetA_SensorOpen_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(400, false);
        if (this.doInfoPrintOutput) this.printOutput(400, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 134 and event "Tunnel_Traffictube1_EmergencyCabinetA_SensorOpen.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge134() {
        var guard = (spec.Tunnel_Traffictube1_EmergencyCabinetA_SensorOpen_) == (spec.specEnum._off);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(401, true);
        if (this.doInfoEvent) this.infoEvent(401, true);

        spec.Tunnel_Traffictube1_EmergencyCabinetA_SensorOpen_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(401, false);
        if (this.doInfoPrintOutput) this.printOutput(401, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 135 and event "Tunnel_Traffictube1_EmergencyCabinetC_HandheldExtinguisher.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge135() {
        var guard = (spec.Tunnel_Traffictube1_EmergencyCabinetC_HandheldExtinguisher_) == (spec.specEnum._on);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(402, true);
        if (this.doInfoEvent) this.infoEvent(402, true);

        spec.Tunnel_Traffictube1_EmergencyCabinetC_HandheldExtinguisher_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(402, false);
        if (this.doInfoPrintOutput) this.printOutput(402, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 136 and event "Tunnel_Traffictube1_EmergencyCabinetC_HandheldExtinguisher.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge136() {
        var guard = (spec.Tunnel_Traffictube1_EmergencyCabinetC_HandheldExtinguisher_) == (spec.specEnum._off);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(403, true);
        if (this.doInfoEvent) this.infoEvent(403, true);

        spec.Tunnel_Traffictube1_EmergencyCabinetC_HandheldExtinguisher_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(403, false);
        if (this.doInfoPrintOutput) this.printOutput(403, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 137 and event "Tunnel_Traffictube1_EmergencyCabinetC_Phone.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge137() {
        var guard = (spec.Tunnel_Traffictube1_EmergencyCabinetC_Phone_) == (spec.specEnum._on);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(404, true);
        if (this.doInfoEvent) this.infoEvent(404, true);

        spec.Tunnel_Traffictube1_EmergencyCabinetC_Phone_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(404, false);
        if (this.doInfoPrintOutput) this.printOutput(404, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 138 and event "Tunnel_Traffictube1_EmergencyCabinetC_Phone.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge138() {
        var guard = (spec.Tunnel_Traffictube1_EmergencyCabinetC_Phone_) == (spec.specEnum._off);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(405, true);
        if (this.doInfoEvent) this.infoEvent(405, true);

        spec.Tunnel_Traffictube1_EmergencyCabinetC_Phone_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(405, false);
        if (this.doInfoPrintOutput) this.printOutput(405, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 139 and event "Tunnel_Traffictube1_EmergencyCabinetC_SensorOpen.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge139() {
        var guard = (spec.Tunnel_Traffictube1_EmergencyCabinetC_SensorOpen_) == (spec.specEnum._on);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(406, true);
        if (this.doInfoEvent) this.infoEvent(406, true);

        spec.Tunnel_Traffictube1_EmergencyCabinetC_SensorOpen_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(406, false);
        if (this.doInfoPrintOutput) this.printOutput(406, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 140 and event "Tunnel_Traffictube1_EmergencyCabinetC_SensorOpen.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge140() {
        var guard = (spec.Tunnel_Traffictube1_EmergencyCabinetC_SensorOpen_) == (spec.specEnum._off);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(407, true);
        if (this.doInfoEvent) this.infoEvent(407, true);

        spec.Tunnel_Traffictube1_EmergencyCabinetC_SensorOpen_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(407, false);
        if (this.doInfoPrintOutput) this.printOutput(407, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 141 and event "Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge141() {

        if (this.doInfoPrintOutput) this.printOutput(411, true);
        if (this.doInfoEvent) this.infoEvent(411, true);

        if (((spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_conditionPush_())) {
            spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_conditionPush_()))) {
            spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(411, false);
        if (this.doInfoPrintOutput) this.printOutput(411, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 142 and event "Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge142() {

        if (this.doInfoPrintOutput) this.printOutput(414, true);
        if (this.doInfoEvent) this.infoEvent(414, true);

        if (((spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_conditionPush_())) {
            spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_conditionPush_()))) {
            spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(414, false);
        if (this.doInfoPrintOutput) this.printOutput(414, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 143 and event "Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge143() {

        if (this.doInfoPrintOutput) this.printOutput(417, true);
        if (this.doInfoEvent) this.infoEvent(417, true);

        if (((spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_conditionPush_())) {
            spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_conditionPush_()))) {
            spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(417, false);
        if (this.doInfoPrintOutput) this.printOutput(417, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 144 and event "Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge144() {

        if (this.doInfoPrintOutput) this.printOutput(420, true);
        if (this.doInfoEvent) this.infoEvent(420, true);

        if (((spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_conditionPush_())) {
            spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_conditionPush_()))) {
            spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(420, false);
        if (this.doInfoPrintOutput) this.printOutput(420, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 145 and event "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge145() {

        if (this.doInfoPrintOutput) this.printOutput(423, true);
        if (this.doInfoEvent) this.infoEvent(423, true);

        if (((spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_conditionPush_())) {
            spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_conditionPush_()))) {
            spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(423, false);
        if (this.doInfoPrintOutput) this.printOutput(423, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 146 and event "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge146() {

        if (this.doInfoPrintOutput) this.printOutput(426, true);
        if (this.doInfoEvent) this.infoEvent(426, true);

        if (((spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_conditionPush_())) {
            spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_conditionPush_()))) {
            spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(426, false);
        if (this.doInfoPrintOutput) this.printOutput(426, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 147 and event "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge147() {

        if (this.doInfoPrintOutput) this.printOutput(431, true);
        if (this.doInfoEvent) this.infoEvent(431, true);

        if (((spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_conditionPush_())) {
            spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_conditionPush_()))) {
            spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(431, false);
        if (this.doInfoPrintOutput) this.printOutput(431, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 148 and event "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge148() {

        if (this.doInfoPrintOutput) this.printOutput(434, true);
        if (this.doInfoEvent) this.infoEvent(434, true);

        if (((spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_conditionPush_())) {
            spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_conditionPush_()))) {
            spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(434, false);
        if (this.doInfoPrintOutput) this.printOutput(434, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 149 and event "Tunnel_Traffictube1_J32_TimerReleaseSignal.u_timeout".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge149() {
        var guard = (spec.Tunnel_Traffictube1_J32_TimerReleaseSignal_) == (spec.specEnum._running);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(445, true);
        if (this.doInfoEvent) this.infoEvent(445, true);

        spec.Tunnel_Traffictube1_J32_TimerReleaseSignal_ = spec.specEnum._finished;

        if (this.doInfoEvent) this.infoEvent(445, false);
        if (this.doInfoPrintOutput) this.printOutput(445, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 150 and event "Tunnel_Traffictube1_Lightsensor.u_0".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge150() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube1_Lightsensor_setting_, 0);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(455, true);
        if (this.doInfoEvent) this.infoEvent(455, true);

        spec.Tunnel_Traffictube1_Lightsensor_setting_ = 0;

        if (this.doInfoEvent) this.infoEvent(455, false);
        if (this.doInfoPrintOutput) this.printOutput(455, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 151 and event "Tunnel_Traffictube1_Lightsensor.u_1".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge151() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube1_Lightsensor_setting_, 1);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(456, true);
        if (this.doInfoEvent) this.infoEvent(456, true);

        spec.Tunnel_Traffictube1_Lightsensor_setting_ = 1;

        if (this.doInfoEvent) this.infoEvent(456, false);
        if (this.doInfoPrintOutput) this.printOutput(456, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 152 and event "Tunnel_Traffictube1_Lightsensor.u_2".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge152() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube1_Lightsensor_setting_, 2);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(457, true);
        if (this.doInfoEvent) this.infoEvent(457, true);

        spec.Tunnel_Traffictube1_Lightsensor_setting_ = 2;

        if (this.doInfoEvent) this.infoEvent(457, false);
        if (this.doInfoPrintOutput) this.printOutput(457, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 153 and event "Tunnel_Traffictube1_Lightsensor.u_3".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge153() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube1_Lightsensor_setting_, 3);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(458, true);
        if (this.doInfoEvent) this.infoEvent(458, true);

        spec.Tunnel_Traffictube1_Lightsensor_setting_ = 3;

        if (this.doInfoEvent) this.infoEvent(458, false);
        if (this.doInfoPrintOutput) this.printOutput(458, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 154 and event "Tunnel_Traffictube1_Lightsensor.u_4".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge154() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube1_Lightsensor_setting_, 4);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(459, true);
        if (this.doInfoEvent) this.infoEvent(459, true);

        spec.Tunnel_Traffictube1_Lightsensor_setting_ = 4;

        if (this.doInfoEvent) this.infoEvent(459, false);
        if (this.doInfoPrintOutput) this.printOutput(459, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 155 and event "Tunnel_Traffictube1_Lightsensor.u_5".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge155() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube1_Lightsensor_setting_, 5);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(460, true);
        if (this.doInfoEvent) this.infoEvent(460, true);

        spec.Tunnel_Traffictube1_Lightsensor_setting_ = 5;

        if (this.doInfoEvent) this.infoEvent(460, false);
        if (this.doInfoPrintOutput) this.printOutput(460, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 156 and event "Tunnel_Traffictube1_Lightsensor.u_6".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge156() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube1_Lightsensor_setting_, 6);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(461, true);
        if (this.doInfoEvent) this.infoEvent(461, true);

        spec.Tunnel_Traffictube1_Lightsensor_setting_ = 6;

        if (this.doInfoEvent) this.infoEvent(461, false);
        if (this.doInfoPrintOutput) this.printOutput(461, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 157 and event "Tunnel_Traffictube1_Lightsensor.u_7".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge157() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube1_Lightsensor_setting_, 7);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(462, true);
        if (this.doInfoEvent) this.infoEvent(462, true);

        spec.Tunnel_Traffictube1_Lightsensor_setting_ = 7;

        if (this.doInfoEvent) this.infoEvent(462, false);
        if (this.doInfoPrintOutput) this.printOutput(462, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 158 and event "Tunnel_Traffictube1_Lightsensor.u_8".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge158() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube1_Lightsensor_setting_, 8);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(463, true);
        if (this.doInfoEvent) this.infoEvent(463, true);

        spec.Tunnel_Traffictube1_Lightsensor_setting_ = 8;

        if (this.doInfoEvent) this.infoEvent(463, false);
        if (this.doInfoPrintOutput) this.printOutput(463, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 159 and event "Tunnel_Traffictube1_PopUp_ButtonAccept_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge159() {
        var guard = (spec.Tunnel_Traffictube1_PopUp_Window_) == (spec.specEnum._on);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(476, true);
        if (this.doInfoEvent) this.infoEvent(476, true);

        if (((spec.Tunnel_Traffictube1_PopUp_ButtonAccept_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_PopUp_ButtonAccept_conditionPush_())) {
            spec.Tunnel_Traffictube1_PopUp_ButtonAccept_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_PopUp_ButtonAccept_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_PopUp_ButtonAccept_conditionPush_()))) {
            spec.Tunnel_Traffictube1_PopUp_ButtonAccept_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_PopUp_ButtonAccept_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_PopUp_ButtonAccept_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(476, false);
        if (this.doInfoPrintOutput) this.printOutput(476, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 160 and event "Tunnel_Traffictube1_PopUp_ButtonReject_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge160() {
        var guard = (spec.Tunnel_Traffictube1_PopUp_Window_) == (spec.specEnum._on);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(479, true);
        if (this.doInfoEvent) this.infoEvent(479, true);

        if (((spec.Tunnel_Traffictube1_PopUp_ButtonReject_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube1_PopUp_ButtonReject_conditionPush_())) {
            spec.Tunnel_Traffictube1_PopUp_ButtonReject_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube1_PopUp_ButtonReject_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube1_PopUp_ButtonReject_conditionPush_()))) {
            spec.Tunnel_Traffictube1_PopUp_ButtonReject_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube1_PopUp_ButtonReject_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube1_PopUp_ButtonReject_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(479, false);
        if (this.doInfoPrintOutput) this.printOutput(479, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 161 and event "Tunnel_Traffictube1_PopUp_Timer.u_timeout".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge161() {
        var guard = (spec.Tunnel_Traffictube1_PopUp_Timer_) == (spec.specEnum._running);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(484, true);
        if (this.doInfoEvent) this.infoEvent(484, true);

        spec.Tunnel_Traffictube1_PopUp_Timer_ = spec.specEnum._finished;

        if (this.doInfoEvent) this.infoEvent(484, false);
        if (this.doInfoPrintOutput) this.printOutput(484, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 162 and event "Tunnel_Traffictube1_Smokedetection.u_0".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge162() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube1_Smokedetection_setting_, 0);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(489, true);
        if (this.doInfoEvent) this.infoEvent(489, true);

        spec.Tunnel_Traffictube1_Smokedetection_setting_ = 0;

        if (this.doInfoEvent) this.infoEvent(489, false);
        if (this.doInfoPrintOutput) this.printOutput(489, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 163 and event "Tunnel_Traffictube1_Smokedetection.u_1".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge163() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube1_Smokedetection_setting_, 1);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(490, true);
        if (this.doInfoEvent) this.infoEvent(490, true);

        spec.Tunnel_Traffictube1_Smokedetection_setting_ = 1;

        if (this.doInfoEvent) this.infoEvent(490, false);
        if (this.doInfoPrintOutput) this.printOutput(490, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 164 and event "Tunnel_Traffictube1_Smokedetection.u_2".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge164() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube1_Smokedetection_setting_, 2);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(491, true);
        if (this.doInfoEvent) this.infoEvent(491, true);

        spec.Tunnel_Traffictube1_Smokedetection_setting_ = 2;

        if (this.doInfoEvent) this.infoEvent(491, false);
        if (this.doInfoPrintOutput) this.printOutput(491, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 165 and event "Tunnel_Traffictube1_Smokedetection.u_3".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge165() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube1_Smokedetection_setting_, 3);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(492, true);
        if (this.doInfoEvent) this.infoEvent(492, true);

        spec.Tunnel_Traffictube1_Smokedetection_setting_ = 3;

        if (this.doInfoEvent) this.infoEvent(492, false);
        if (this.doInfoPrintOutput) this.printOutput(492, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 166 and event "Tunnel_Traffictube1_Smokedetection.u_4".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge166() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube1_Smokedetection_setting_, 4);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(493, true);
        if (this.doInfoEvent) this.infoEvent(493, true);

        spec.Tunnel_Traffictube1_Smokedetection_setting_ = 4;

        if (this.doInfoEvent) this.infoEvent(493, false);
        if (this.doInfoPrintOutput) this.printOutput(493, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 167 and event "Tunnel_Traffictube1_Smokedetection.u_5".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge167() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube1_Smokedetection_setting_, 5);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(494, true);
        if (this.doInfoEvent) this.infoEvent(494, true);

        spec.Tunnel_Traffictube1_Smokedetection_setting_ = 5;

        if (this.doInfoEvent) this.infoEvent(494, false);
        if (this.doInfoPrintOutput) this.printOutput(494, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 168 and event "Tunnel_Traffictube1_Smokedetection.u_6".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge168() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube1_Smokedetection_setting_, 6);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(495, true);
        if (this.doInfoEvent) this.infoEvent(495, true);

        spec.Tunnel_Traffictube1_Smokedetection_setting_ = 6;

        if (this.doInfoEvent) this.infoEvent(495, false);
        if (this.doInfoPrintOutput) this.printOutput(495, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 169 and event "Tunnel_Traffictube1_Smokedetection.u_7".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge169() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube1_Smokedetection_setting_, 7);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(496, true);
        if (this.doInfoEvent) this.infoEvent(496, true);

        spec.Tunnel_Traffictube1_Smokedetection_setting_ = 7;

        if (this.doInfoEvent) this.infoEvent(496, false);
        if (this.doInfoPrintOutput) this.printOutput(496, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 170 and event "Tunnel_Traffictube1_Smokedetection.u_8".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge170() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube1_Smokedetection_setting_, 8);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(497, true);
        if (this.doInfoEvent) this.infoEvent(497, true);

        spec.Tunnel_Traffictube1_Smokedetection_setting_ = 8;

        if (this.doInfoEvent) this.infoEvent(497, false);
        if (this.doInfoPrintOutput) this.printOutput(497, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 171 and event "Tunnel_Traffictube1_Standstilldetection.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge171() {
        var guard = ((spec.Tunnel_Traffictube1_Standstilldetection_) == (spec.specEnum._standstill)) || ((spec.Tunnel_Traffictube1_Standstilldetection_) == (spec.specEnum._wrongway));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(498, true);
        if (this.doInfoEvent) this.infoEvent(498, true);

        if ((spec.Tunnel_Traffictube1_Standstilldetection_) == (spec.specEnum._standstill)) {
            spec.Tunnel_Traffictube1_Standstilldetection_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube1_Standstilldetection_) == (spec.specEnum._wrongway)) {
            spec.Tunnel_Traffictube1_Standstilldetection_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(498, false);
        if (this.doInfoPrintOutput) this.printOutput(498, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 172 and event "Tunnel_Traffictube1_Standstilldetection.u_standstill".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge172() {
        var guard = ((spec.Tunnel_Traffictube1_Standstilldetection_) == (spec.specEnum._off)) || ((spec.Tunnel_Traffictube1_Standstilldetection_) == (spec.specEnum._wrongway));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(499, true);
        if (this.doInfoEvent) this.infoEvent(499, true);

        if ((spec.Tunnel_Traffictube1_Standstilldetection_) == (spec.specEnum._off)) {
            spec.Tunnel_Traffictube1_Standstilldetection_ = spec.specEnum._standstill;
        } else if ((spec.Tunnel_Traffictube1_Standstilldetection_) == (spec.specEnum._wrongway)) {
            spec.Tunnel_Traffictube1_Standstilldetection_ = spec.specEnum._standstill;
        }

        if (this.doInfoEvent) this.infoEvent(499, false);
        if (this.doInfoPrintOutput) this.printOutput(499, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 173 and event "Tunnel_Traffictube1_Standstilldetection.u_wrongway".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge173() {
        var guard = ((spec.Tunnel_Traffictube1_Standstilldetection_) == (spec.specEnum._off)) || ((spec.Tunnel_Traffictube1_Standstilldetection_) == (spec.specEnum._standstill));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(500, true);
        if (this.doInfoEvent) this.infoEvent(500, true);

        if ((spec.Tunnel_Traffictube1_Standstilldetection_) == (spec.specEnum._off)) {
            spec.Tunnel_Traffictube1_Standstilldetection_ = spec.specEnum._wrongway;
        } else if ((spec.Tunnel_Traffictube1_Standstilldetection_) == (spec.specEnum._standstill)) {
            spec.Tunnel_Traffictube1_Standstilldetection_ = spec.specEnum._wrongway;
        }

        if (this.doInfoEvent) this.infoEvent(500, false);
        if (this.doInfoPrintOutput) this.printOutput(500, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 174 and event "Tunnel_Traffictube1_SwitchTimerAudio.u_timeout".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge174() {
        var guard = ((spec.Tunnel_Traffictube1_SwitchTimerAudio_) == (spec.specEnum._on1)) || ((spec.Tunnel_Traffictube1_SwitchTimerAudio_) == (spec.specEnum._on2));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(503, true);
        if (this.doInfoEvent) this.infoEvent(503, true);

        if ((spec.Tunnel_Traffictube1_SwitchTimerAudio_) == (spec.specEnum._on1)) {
            spec.Tunnel_Traffictube1_SwitchTimerAudio_ = spec.specEnum._on2;
        } else if ((spec.Tunnel_Traffictube1_SwitchTimerAudio_) == (spec.specEnum._on2)) {
            spec.Tunnel_Traffictube1_SwitchTimerAudio_ = spec.specEnum._on1;
        }

        if (this.doInfoEvent) this.infoEvent(503, false);
        if (this.doInfoPrintOutput) this.printOutput(503, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 175 and event "Tunnel_Traffictube1_TimerCameraViewEven.u_timeout".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge175() {
        var guard = (spec.Tunnel_Traffictube1_TimerCameraViewEven_) == (spec.specEnum._running);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(506, true);
        if (this.doInfoEvent) this.infoEvent(506, true);

        spec.Tunnel_Traffictube1_TimerCameraViewEven_ = spec.specEnum._finished;

        if (this.doInfoEvent) this.infoEvent(506, false);
        if (this.doInfoPrintOutput) this.printOutput(506, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 176 and event "Tunnel_Traffictube1_TimerCameraViewUneven.u_timeout".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge176() {
        var guard = (spec.Tunnel_Traffictube1_TimerCameraViewUneven_) == (spec.specEnum._running);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(509, true);
        if (this.doInfoEvent) this.infoEvent(509, true);

        spec.Tunnel_Traffictube1_TimerCameraViewUneven_ = spec.specEnum._finished;

        if (this.doInfoEvent) this.infoEvent(509, false);
        if (this.doInfoPrintOutput) this.printOutput(509, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 177 and event "Tunnel_Traffictube1_Trafficlight1_ReleaseSignal.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge177() {
        var guard = ((spec.Tunnel_Traffictube1_Trafficlight1_Mode_) != (spec.specEnum._red)) && ((spec.Tunnel_Traffictube1_Trafficlight1_ReleaseSignal_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(514, true);
        if (this.doInfoEvent) this.infoEvent(514, true);

        spec.Tunnel_Traffictube1_Trafficlight1_ReleaseSignal_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(514, false);
        if (this.doInfoPrintOutput) this.printOutput(514, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 178 and event "Tunnel_Traffictube1_Trafficlight1_ReleaseSignal.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge178() {
        var guard = ((spec.Tunnel_Traffictube1_Trafficlight1_Mode_) == (spec.specEnum._red)) && (((spec.Tunnel_Traffictube1_Trafficlight1_TimerReleaseSignal_) == (spec.specEnum._finished)) && ((spec.Tunnel_Traffictube1_Trafficlight1_ReleaseSignal_) == (spec.specEnum._off)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(515, true);
        if (this.doInfoEvent) this.infoEvent(515, true);

        spec.Tunnel_Traffictube1_Trafficlight1_ReleaseSignal_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(515, false);
        if (this.doInfoPrintOutput) this.printOutput(515, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 179 and event "Tunnel_Traffictube1_Trafficlight1_TimerReleaseSignal.u_timeout".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge179() {
        var guard = (spec.Tunnel_Traffictube1_Trafficlight1_TimerReleaseSignal_) == (spec.specEnum._running);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(518, true);
        if (this.doInfoEvent) this.infoEvent(518, true);

        spec.Tunnel_Traffictube1_Trafficlight1_TimerReleaseSignal_ = spec.specEnum._finished;

        if (this.doInfoEvent) this.infoEvent(518, false);
        if (this.doInfoPrintOutput) this.printOutput(518, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 180 and event "Tunnel_Traffictube1_Trafficlight2_ReleaseSignal.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge180() {
        var guard = ((spec.Tunnel_Traffictube1_Trafficlight2_Mode_) != (spec.specEnum._red)) && ((spec.Tunnel_Traffictube1_Trafficlight2_ReleaseSignal_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(523, true);
        if (this.doInfoEvent) this.infoEvent(523, true);

        spec.Tunnel_Traffictube1_Trafficlight2_ReleaseSignal_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(523, false);
        if (this.doInfoPrintOutput) this.printOutput(523, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 181 and event "Tunnel_Traffictube1_Trafficlight2_ReleaseSignal.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge181() {
        var guard = ((spec.Tunnel_Traffictube1_Trafficlight2_Mode_) == (spec.specEnum._red)) && (((spec.Tunnel_Traffictube1_Trafficlight2_TimerReleaseSignal_) == (spec.specEnum._finished)) && ((spec.Tunnel_Traffictube1_Trafficlight2_ReleaseSignal_) == (spec.specEnum._off)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(524, true);
        if (this.doInfoEvent) this.infoEvent(524, true);

        spec.Tunnel_Traffictube1_Trafficlight2_ReleaseSignal_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(524, false);
        if (this.doInfoPrintOutput) this.printOutput(524, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 182 and event "Tunnel_Traffictube1_Trafficlight2_TimerReleaseSignal.u_timeout".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge182() {
        var guard = (spec.Tunnel_Traffictube1_Trafficlight2_TimerReleaseSignal_) == (spec.specEnum._running);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(527, true);
        if (this.doInfoEvent) this.infoEvent(527, true);

        spec.Tunnel_Traffictube1_Trafficlight2_TimerReleaseSignal_ = spec.specEnum._finished;

        if (this.doInfoEvent) this.infoEvent(527, false);
        if (this.doInfoPrintOutput) this.printOutput(527, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 183 and event "Tunnel_Traffictube1_Trafficlight3_ReleaseSignal.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge183() {
        var guard = ((spec.Tunnel_Traffictube1_Trafficlight3_Mode_) != (spec.specEnum._red)) && ((spec.Tunnel_Traffictube1_Trafficlight3_ReleaseSignal_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(532, true);
        if (this.doInfoEvent) this.infoEvent(532, true);

        spec.Tunnel_Traffictube1_Trafficlight3_ReleaseSignal_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(532, false);
        if (this.doInfoPrintOutput) this.printOutput(532, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 184 and event "Tunnel_Traffictube1_Trafficlight3_ReleaseSignal.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge184() {
        var guard = ((spec.Tunnel_Traffictube1_Trafficlight3_Mode_) == (spec.specEnum._red)) && (((spec.Tunnel_Traffictube1_Trafficlight3_TimerReleaseSignal_) == (spec.specEnum._finished)) && ((spec.Tunnel_Traffictube1_Trafficlight3_ReleaseSignal_) == (spec.specEnum._off)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(533, true);
        if (this.doInfoEvent) this.infoEvent(533, true);

        spec.Tunnel_Traffictube1_Trafficlight3_ReleaseSignal_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(533, false);
        if (this.doInfoPrintOutput) this.printOutput(533, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 185 and event "Tunnel_Traffictube1_Trafficlight3_TimerReleaseSignal.u_timeout".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge185() {
        var guard = (spec.Tunnel_Traffictube1_Trafficlight3_TimerReleaseSignal_) == (spec.specEnum._running);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(536, true);
        if (this.doInfoEvent) this.infoEvent(536, true);

        spec.Tunnel_Traffictube1_Trafficlight3_TimerReleaseSignal_ = spec.specEnum._finished;

        if (this.doInfoEvent) this.infoEvent(536, false);
        if (this.doInfoPrintOutput) this.printOutput(536, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 186 and event "Tunnel_Traffictube2_Boombarrier1_ObstacleDetection.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge186() {
        var guard = (spec.Tunnel_Traffictube2_Boombarrier1_ObstacleDetection_) == (spec.specEnum._on);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(570, true);
        if (this.doInfoEvent) this.infoEvent(570, true);

        spec.Tunnel_Traffictube2_Boombarrier1_ObstacleDetection_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(570, false);
        if (this.doInfoPrintOutput) this.printOutput(570, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 187 and event "Tunnel_Traffictube2_Boombarrier1_ObstacleDetection.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge187() {
        var guard = (spec.Tunnel_Traffictube2_Boombarrier1_ObstacleDetection_) == (spec.specEnum._off);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(571, true);
        if (this.doInfoEvent) this.infoEvent(571, true);

        spec.Tunnel_Traffictube2_Boombarrier1_ObstacleDetection_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(571, false);
        if (this.doInfoPrintOutput) this.printOutput(571, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 188 and event "Tunnel_Traffictube2_Boombarrier1_SensorClosed.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge188() {
        var guard = ((spec.Tunnel_Traffictube2_Boombarrier1_ActuatorUp_) == (spec.specEnum._on)) && ((spec.Tunnel_Traffictube2_Boombarrier1_SensorClosed_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(572, true);
        if (this.doInfoEvent) this.infoEvent(572, true);

        spec.Tunnel_Traffictube2_Boombarrier1_SensorClosed_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(572, false);
        if (this.doInfoPrintOutput) this.printOutput(572, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 189 and event "Tunnel_Traffictube2_Boombarrier1_SensorClosed.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge189() {
        var guard = ((spec.Tunnel_Traffictube2_Boombarrier1_ActuatorDown_) == (spec.specEnum._on)) && (((spec.Tunnel_Traffictube2_Boombarrier1_SensorOpen_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube2_Boombarrier1_SensorClosed_) == (spec.specEnum._off)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(573, true);
        if (this.doInfoEvent) this.infoEvent(573, true);

        spec.Tunnel_Traffictube2_Boombarrier1_SensorClosed_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(573, false);
        if (this.doInfoPrintOutput) this.printOutput(573, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 190 and event "Tunnel_Traffictube2_Boombarrier1_SensorOpen.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge190() {
        var guard = ((spec.Tunnel_Traffictube2_Boombarrier1_ActuatorDown_) == (spec.specEnum._on)) && ((spec.Tunnel_Traffictube2_Boombarrier1_SensorOpen_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(574, true);
        if (this.doInfoEvent) this.infoEvent(574, true);

        spec.Tunnel_Traffictube2_Boombarrier1_SensorOpen_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(574, false);
        if (this.doInfoPrintOutput) this.printOutput(574, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 191 and event "Tunnel_Traffictube2_Boombarrier1_SensorOpen.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge191() {
        var guard = ((spec.Tunnel_Traffictube2_Boombarrier1_ActuatorUp_) == (spec.specEnum._on)) && (((spec.Tunnel_Traffictube2_Boombarrier1_SensorClosed_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube2_Boombarrier1_SensorOpen_) == (spec.specEnum._off)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(575, true);
        if (this.doInfoEvent) this.infoEvent(575, true);

        spec.Tunnel_Traffictube2_Boombarrier1_SensorOpen_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(575, false);
        if (this.doInfoPrintOutput) this.printOutput(575, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 192 and event "Tunnel_Traffictube2_Boombarrier2_ObstacleDetection.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge192() {
        var guard = (spec.Tunnel_Traffictube2_Boombarrier2_ObstacleDetection_) == (spec.specEnum._on);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(582, true);
        if (this.doInfoEvent) this.infoEvent(582, true);

        spec.Tunnel_Traffictube2_Boombarrier2_ObstacleDetection_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(582, false);
        if (this.doInfoPrintOutput) this.printOutput(582, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 193 and event "Tunnel_Traffictube2_Boombarrier2_ObstacleDetection.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge193() {
        var guard = (spec.Tunnel_Traffictube2_Boombarrier2_ObstacleDetection_) == (spec.specEnum._off);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(583, true);
        if (this.doInfoEvent) this.infoEvent(583, true);

        spec.Tunnel_Traffictube2_Boombarrier2_ObstacleDetection_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(583, false);
        if (this.doInfoPrintOutput) this.printOutput(583, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 194 and event "Tunnel_Traffictube2_Boombarrier2_SensorClosed.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge194() {
        var guard = ((spec.Tunnel_Traffictube2_Boombarrier2_ActuatorUp_) == (spec.specEnum._on)) && ((spec.Tunnel_Traffictube2_Boombarrier2_SensorClosed_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(584, true);
        if (this.doInfoEvent) this.infoEvent(584, true);

        spec.Tunnel_Traffictube2_Boombarrier2_SensorClosed_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(584, false);
        if (this.doInfoPrintOutput) this.printOutput(584, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 195 and event "Tunnel_Traffictube2_Boombarrier2_SensorClosed.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge195() {
        var guard = ((spec.Tunnel_Traffictube2_Boombarrier2_ActuatorDown_) == (spec.specEnum._on)) && (((spec.Tunnel_Traffictube2_Boombarrier2_SensorOpen_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube2_Boombarrier2_SensorClosed_) == (spec.specEnum._off)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(585, true);
        if (this.doInfoEvent) this.infoEvent(585, true);

        spec.Tunnel_Traffictube2_Boombarrier2_SensorClosed_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(585, false);
        if (this.doInfoPrintOutput) this.printOutput(585, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 196 and event "Tunnel_Traffictube2_Boombarrier2_SensorOpen.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge196() {
        var guard = ((spec.Tunnel_Traffictube2_Boombarrier2_ActuatorDown_) == (spec.specEnum._on)) && ((spec.Tunnel_Traffictube2_Boombarrier2_SensorOpen_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(586, true);
        if (this.doInfoEvent) this.infoEvent(586, true);

        spec.Tunnel_Traffictube2_Boombarrier2_SensorOpen_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(586, false);
        if (this.doInfoPrintOutput) this.printOutput(586, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 197 and event "Tunnel_Traffictube2_Boombarrier2_SensorOpen.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge197() {
        var guard = ((spec.Tunnel_Traffictube2_Boombarrier2_ActuatorUp_) == (spec.specEnum._on)) && (((spec.Tunnel_Traffictube2_Boombarrier2_SensorClosed_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube2_Boombarrier2_SensorOpen_) == (spec.specEnum._off)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(587, true);
        if (this.doInfoEvent) this.infoEvent(587, true);

        spec.Tunnel_Traffictube2_Boombarrier2_SensorOpen_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(587, false);
        if (this.doInfoPrintOutput) this.printOutput(587, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 198 and event "Tunnel_Traffictube2_ButtonCamera1_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge198() {

        if (this.doInfoPrintOutput) this.printOutput(591, true);
        if (this.doInfoEvent) this.infoEvent(591, true);

        if (((spec.Tunnel_Traffictube2_ButtonCamera1_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonCamera1_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonCamera1_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonCamera1_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonCamera1_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonCamera1_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonCamera1_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonCamera1_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(591, false);
        if (this.doInfoPrintOutput) this.printOutput(591, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 199 and event "Tunnel_Traffictube2_ButtonCamera2_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge199() {

        if (this.doInfoPrintOutput) this.printOutput(594, true);
        if (this.doInfoEvent) this.infoEvent(594, true);

        if (((spec.Tunnel_Traffictube2_ButtonCamera2_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonCamera2_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonCamera2_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonCamera2_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonCamera2_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonCamera2_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonCamera2_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonCamera2_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(594, false);
        if (this.doInfoPrintOutput) this.printOutput(594, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 200 and event "Tunnel_Traffictube2_ButtonCamera3_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge200() {

        if (this.doInfoPrintOutput) this.printOutput(597, true);
        if (this.doInfoEvent) this.infoEvent(597, true);

        if (((spec.Tunnel_Traffictube2_ButtonCamera3_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonCamera3_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonCamera3_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonCamera3_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonCamera3_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonCamera3_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonCamera3_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonCamera3_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(597, false);
        if (this.doInfoPrintOutput) this.printOutput(597, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 201 and event "Tunnel_Traffictube2_ButtonCamera4_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge201() {

        if (this.doInfoPrintOutput) this.printOutput(600, true);
        if (this.doInfoEvent) this.infoEvent(600, true);

        if (((spec.Tunnel_Traffictube2_ButtonCamera4_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonCamera4_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonCamera4_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonCamera4_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonCamera4_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonCamera4_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonCamera4_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonCamera4_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(600, false);
        if (this.doInfoPrintOutput) this.printOutput(600, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 202 and event "Tunnel_Traffictube2_ButtonCamera5_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge202() {

        if (this.doInfoPrintOutput) this.printOutput(603, true);
        if (this.doInfoEvent) this.infoEvent(603, true);

        if (((spec.Tunnel_Traffictube2_ButtonCamera5_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonCamera5_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonCamera5_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonCamera5_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonCamera5_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonCamera5_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonCamera5_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonCamera5_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(603, false);
        if (this.doInfoPrintOutput) this.printOutput(603, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 203 and event "Tunnel_Traffictube2_ButtonCamera6_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge203() {

        if (this.doInfoPrintOutput) this.printOutput(606, true);
        if (this.doInfoEvent) this.infoEvent(606, true);

        if (((spec.Tunnel_Traffictube2_ButtonCamera6_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonCamera6_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonCamera6_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonCamera6_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonCamera6_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonCamera6_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonCamera6_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonCamera6_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(606, false);
        if (this.doInfoPrintOutput) this.printOutput(606, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 204 and event "Tunnel_Traffictube2_ButtonCameraStopView_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge204() {

        if (this.doInfoPrintOutput) this.printOutput(609, true);
        if (this.doInfoEvent) this.infoEvent(609, true);

        if (((spec.Tunnel_Traffictube2_ButtonCameraStopView_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonCameraStopView_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonCameraStopView_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonCameraStopView_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonCameraStopView_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonCameraStopView_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonCameraStopView_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonCameraStopView_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(609, false);
        if (this.doInfoPrintOutput) this.printOutput(609, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 205 and event "Tunnel_Traffictube2_ButtonCameraView_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge205() {

        if (this.doInfoPrintOutput) this.printOutput(612, true);
        if (this.doInfoEvent) this.infoEvent(612, true);

        if (((spec.Tunnel_Traffictube2_ButtonCameraView_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonCameraView_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonCameraView_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonCameraView_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonCameraView_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonCameraView_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonCameraView_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonCameraView_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(612, false);
        if (this.doInfoPrintOutput) this.printOutput(612, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 206 and event "Tunnel_Traffictube2_ButtonCloseBoombarriers_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge206() {

        if (this.doInfoPrintOutput) this.printOutput(615, true);
        if (this.doInfoEvent) this.infoEvent(615, true);

        if (((spec.Tunnel_Traffictube2_ButtonCloseBoombarriers_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonCloseBoombarriers_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonCloseBoombarriers_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonCloseBoombarriers_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonCloseBoombarriers_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonCloseBoombarriers_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonCloseBoombarriers_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonCloseBoombarriers_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(615, false);
        if (this.doInfoPrintOutput) this.printOutput(615, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 207 and event "Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge207() {

        if (this.doInfoPrintOutput) this.printOutput(618, true);
        if (this.doInfoEvent) this.infoEvent(618, true);

        if (((spec.Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(618, false);
        if (this.doInfoPrintOutput) this.printOutput(618, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 208 and event "Tunnel_Traffictube2_ButtonEmergency_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge208() {

        if (this.doInfoPrintOutput) this.printOutput(621, true);
        if (this.doInfoEvent) this.infoEvent(621, true);

        if (((spec.Tunnel_Traffictube2_ButtonEmergency_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonEmergency_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonEmergency_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonEmergency_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonEmergency_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonEmergency_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonEmergency_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonEmergency_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(621, false);
        if (this.doInfoPrintOutput) this.printOutput(621, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 209 and event "Tunnel_Traffictube2_ButtonEvacuation_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge209() {

        if (this.doInfoPrintOutput) this.printOutput(624, true);
        if (this.doInfoEvent) this.infoEvent(624, true);

        if (((spec.Tunnel_Traffictube2_ButtonEvacuation_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonEvacuation_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonEvacuation_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonEvacuation_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonEvacuation_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonEvacuation_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonEvacuation_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonEvacuation_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(624, false);
        if (this.doInfoPrintOutput) this.printOutput(624, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 210 and event "Tunnel_Traffictube2_ButtonFlashTrafficlights_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge210() {

        if (this.doInfoPrintOutput) this.printOutput(627, true);
        if (this.doInfoEvent) this.infoEvent(627, true);

        if (((spec.Tunnel_Traffictube2_ButtonFlashTrafficlights_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonFlashTrafficlights_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonFlashTrafficlights_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonFlashTrafficlights_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonFlashTrafficlights_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonFlashTrafficlights_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonFlashTrafficlights_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonFlashTrafficlights_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(627, false);
        if (this.doInfoPrintOutput) this.printOutput(627, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 211 and event "Tunnel_Traffictube2_ButtonLighting0_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge211() {

        if (this.doInfoPrintOutput) this.printOutput(630, true);
        if (this.doInfoEvent) this.infoEvent(630, true);

        if (((spec.Tunnel_Traffictube2_ButtonLighting0_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonLighting0_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonLighting0_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonLighting0_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonLighting0_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonLighting0_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonLighting0_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonLighting0_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(630, false);
        if (this.doInfoPrintOutput) this.printOutput(630, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 212 and event "Tunnel_Traffictube2_ButtonLighting1_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge212() {

        if (this.doInfoPrintOutput) this.printOutput(633, true);
        if (this.doInfoEvent) this.infoEvent(633, true);

        if (((spec.Tunnel_Traffictube2_ButtonLighting1_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonLighting1_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonLighting1_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonLighting1_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonLighting1_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonLighting1_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonLighting1_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonLighting1_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(633, false);
        if (this.doInfoPrintOutput) this.printOutput(633, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 213 and event "Tunnel_Traffictube2_ButtonLighting2_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge213() {

        if (this.doInfoPrintOutput) this.printOutput(636, true);
        if (this.doInfoEvent) this.infoEvent(636, true);

        if (((spec.Tunnel_Traffictube2_ButtonLighting2_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonLighting2_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonLighting2_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonLighting2_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonLighting2_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonLighting2_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonLighting2_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonLighting2_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(636, false);
        if (this.doInfoPrintOutput) this.printOutput(636, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 214 and event "Tunnel_Traffictube2_ButtonLighting3_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge214() {

        if (this.doInfoPrintOutput) this.printOutput(639, true);
        if (this.doInfoEvent) this.infoEvent(639, true);

        if (((spec.Tunnel_Traffictube2_ButtonLighting3_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonLighting3_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonLighting3_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonLighting3_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonLighting3_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonLighting3_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonLighting3_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonLighting3_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(639, false);
        if (this.doInfoPrintOutput) this.printOutput(639, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 215 and event "Tunnel_Traffictube2_ButtonLighting4_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge215() {

        if (this.doInfoPrintOutput) this.printOutput(642, true);
        if (this.doInfoEvent) this.infoEvent(642, true);

        if (((spec.Tunnel_Traffictube2_ButtonLighting4_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonLighting4_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonLighting4_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonLighting4_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonLighting4_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonLighting4_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonLighting4_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonLighting4_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(642, false);
        if (this.doInfoPrintOutput) this.printOutput(642, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 216 and event "Tunnel_Traffictube2_ButtonLighting5_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge216() {

        if (this.doInfoPrintOutput) this.printOutput(645, true);
        if (this.doInfoEvent) this.infoEvent(645, true);

        if (((spec.Tunnel_Traffictube2_ButtonLighting5_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonLighting5_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonLighting5_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonLighting5_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonLighting5_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonLighting5_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonLighting5_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonLighting5_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(645, false);
        if (this.doInfoPrintOutput) this.printOutput(645, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 217 and event "Tunnel_Traffictube2_ButtonLighting6_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge217() {

        if (this.doInfoPrintOutput) this.printOutput(648, true);
        if (this.doInfoEvent) this.infoEvent(648, true);

        if (((spec.Tunnel_Traffictube2_ButtonLighting6_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonLighting6_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonLighting6_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonLighting6_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonLighting6_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonLighting6_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonLighting6_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonLighting6_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(648, false);
        if (this.doInfoPrintOutput) this.printOutput(648, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 218 and event "Tunnel_Traffictube2_ButtonLighting7_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge218() {

        if (this.doInfoPrintOutput) this.printOutput(651, true);
        if (this.doInfoEvent) this.infoEvent(651, true);

        if (((spec.Tunnel_Traffictube2_ButtonLighting7_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonLighting7_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonLighting7_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonLighting7_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonLighting7_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonLighting7_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonLighting7_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonLighting7_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(651, false);
        if (this.doInfoPrintOutput) this.printOutput(651, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 219 and event "Tunnel_Traffictube2_ButtonLighting8_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge219() {

        if (this.doInfoPrintOutput) this.printOutput(654, true);
        if (this.doInfoEvent) this.infoEvent(654, true);

        if (((spec.Tunnel_Traffictube2_ButtonLighting8_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonLighting8_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonLighting8_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonLighting8_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonLighting8_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonLighting8_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonLighting8_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonLighting8_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(654, false);
        if (this.doInfoPrintOutput) this.printOutput(654, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 220 and event "Tunnel_Traffictube2_ButtonLive_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge220() {

        if (this.doInfoPrintOutput) this.printOutput(657, true);
        if (this.doInfoEvent) this.infoEvent(657, true);

        if (((spec.Tunnel_Traffictube2_ButtonLive_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonLive_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonLive_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonLive_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonLive_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonLive_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonLive_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonLive_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(657, false);
        if (this.doInfoPrintOutput) this.printOutput(657, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 221 and event "Tunnel_Traffictube2_ButtonMaintenance_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge221() {

        if (this.doInfoPrintOutput) this.printOutput(660, true);
        if (this.doInfoEvent) this.infoEvent(660, true);

        if (((spec.Tunnel_Traffictube2_ButtonMaintenance_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonMaintenance_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonMaintenance_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonMaintenance_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonMaintenance_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonMaintenance_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonMaintenance_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonMaintenance_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(660, false);
        if (this.doInfoPrintOutput) this.printOutput(660, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 222 and event "Tunnel_Traffictube2_ButtonMessage_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge222() {

        if (this.doInfoPrintOutput) this.printOutput(663, true);
        if (this.doInfoEvent) this.infoEvent(663, true);

        if (((spec.Tunnel_Traffictube2_ButtonMessage_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonMessage_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonMessage_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonMessage_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonMessage_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonMessage_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonMessage_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonMessage_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(663, false);
        if (this.doInfoPrintOutput) this.printOutput(663, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 223 and event "Tunnel_Traffictube2_ButtonOffTrafficlights_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge223() {

        if (this.doInfoPrintOutput) this.printOutput(666, true);
        if (this.doInfoEvent) this.infoEvent(666, true);

        if (((spec.Tunnel_Traffictube2_ButtonOffTrafficlights_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonOffTrafficlights_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonOffTrafficlights_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonOffTrafficlights_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonOffTrafficlights_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonOffTrafficlights_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonOffTrafficlights_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonOffTrafficlights_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(666, false);
        if (this.doInfoPrintOutput) this.printOutput(666, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 224 and event "Tunnel_Traffictube2_ButtonOpenBoombarriers_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge224() {

        if (this.doInfoPrintOutput) this.printOutput(669, true);
        if (this.doInfoEvent) this.infoEvent(669, true);

        if (((spec.Tunnel_Traffictube2_ButtonOpenBoombarriers_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonOpenBoombarriers_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonOpenBoombarriers_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonOpenBoombarriers_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonOpenBoombarriers_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonOpenBoombarriers_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonOpenBoombarriers_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonOpenBoombarriers_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(669, false);
        if (this.doInfoPrintOutput) this.printOutput(669, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 225 and event "Tunnel_Traffictube2_ButtonOperational_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge225() {

        if (this.doInfoPrintOutput) this.printOutput(672, true);
        if (this.doInfoEvent) this.infoEvent(672, true);

        if (((spec.Tunnel_Traffictube2_ButtonOperational_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonOperational_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonOperational_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonOperational_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonOperational_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonOperational_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonOperational_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonOperational_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(672, false);
        if (this.doInfoPrintOutput) this.printOutput(672, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 226 and event "Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge226() {

        if (this.doInfoPrintOutput) this.printOutput(675, true);
        if (this.doInfoEvent) this.infoEvent(675, true);

        if (((spec.Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(675, false);
        if (this.doInfoPrintOutput) this.printOutput(675, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 227 and event "Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge227() {

        if (this.doInfoPrintOutput) this.printOutput(678, true);
        if (this.doInfoEvent) this.infoEvent(678, true);

        if (((spec.Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(678, false);
        if (this.doInfoPrintOutput) this.printOutput(678, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 228 and event "Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge228() {

        if (this.doInfoPrintOutput) this.printOutput(681, true);
        if (this.doInfoEvent) this.infoEvent(681, true);

        if (((spec.Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(681, false);
        if (this.doInfoPrintOutput) this.printOutput(681, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 229 and event "Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge229() {

        if (this.doInfoPrintOutput) this.printOutput(684, true);
        if (this.doInfoEvent) this.infoEvent(684, true);

        if (((spec.Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(684, false);
        if (this.doInfoPrintOutput) this.printOutput(684, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 230 and event "Tunnel_Traffictube2_ButtonRecovery_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge230() {

        if (this.doInfoPrintOutput) this.printOutput(687, true);
        if (this.doInfoEvent) this.infoEvent(687, true);

        if (((spec.Tunnel_Traffictube2_ButtonRecovery_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonRecovery_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonRecovery_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonRecovery_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonRecovery_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonRecovery_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonRecovery_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonRecovery_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(687, false);
        if (this.doInfoPrintOutput) this.printOutput(687, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 231 and event "Tunnel_Traffictube2_ButtonRedTrafficlights_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge231() {

        if (this.doInfoPrintOutput) this.printOutput(690, true);
        if (this.doInfoEvent) this.infoEvent(690, true);

        if (((spec.Tunnel_Traffictube2_ButtonRedTrafficlights_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonRedTrafficlights_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonRedTrafficlights_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonRedTrafficlights_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonRedTrafficlights_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonRedTrafficlights_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonRedTrafficlights_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonRedTrafficlights_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(690, false);
        if (this.doInfoPrintOutput) this.printOutput(690, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 232 and event "Tunnel_Traffictube2_ButtonStopBoombarriers_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge232() {

        if (this.doInfoPrintOutput) this.printOutput(693, true);
        if (this.doInfoEvent) this.infoEvent(693, true);

        if (((spec.Tunnel_Traffictube2_ButtonStopBoombarriers_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonStopBoombarriers_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonStopBoombarriers_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonStopBoombarriers_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonStopBoombarriers_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonStopBoombarriers_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonStopBoombarriers_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonStopBoombarriers_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(693, false);
        if (this.doInfoPrintOutput) this.printOutput(693, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 233 and event "Tunnel_Traffictube2_ButtonVentilation0_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge233() {

        if (this.doInfoPrintOutput) this.printOutput(696, true);
        if (this.doInfoEvent) this.infoEvent(696, true);

        if (((spec.Tunnel_Traffictube2_ButtonVentilation0_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonVentilation0_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonVentilation0_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonVentilation0_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonVentilation0_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonVentilation0_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonVentilation0_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonVentilation0_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(696, false);
        if (this.doInfoPrintOutput) this.printOutput(696, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 234 and event "Tunnel_Traffictube2_ButtonVentilation1_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge234() {

        if (this.doInfoPrintOutput) this.printOutput(699, true);
        if (this.doInfoEvent) this.infoEvent(699, true);

        if (((spec.Tunnel_Traffictube2_ButtonVentilation1_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonVentilation1_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonVentilation1_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonVentilation1_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonVentilation1_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonVentilation1_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonVentilation1_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonVentilation1_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(699, false);
        if (this.doInfoPrintOutput) this.printOutput(699, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 235 and event "Tunnel_Traffictube2_ButtonVentilation2_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge235() {

        if (this.doInfoPrintOutput) this.printOutput(702, true);
        if (this.doInfoEvent) this.infoEvent(702, true);

        if (((spec.Tunnel_Traffictube2_ButtonVentilation2_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonVentilation2_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonVentilation2_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonVentilation2_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonVentilation2_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonVentilation2_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonVentilation2_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonVentilation2_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(702, false);
        if (this.doInfoPrintOutput) this.printOutput(702, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 236 and event "Tunnel_Traffictube2_ButtonVentilation3_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge236() {

        if (this.doInfoPrintOutput) this.printOutput(705, true);
        if (this.doInfoEvent) this.infoEvent(705, true);

        if (((spec.Tunnel_Traffictube2_ButtonVentilation3_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonVentilation3_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonVentilation3_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonVentilation3_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonVentilation3_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonVentilation3_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonVentilation3_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonVentilation3_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(705, false);
        if (this.doInfoPrintOutput) this.printOutput(705, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 237 and event "Tunnel_Traffictube2_ButtonVentilation4_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge237() {

        if (this.doInfoPrintOutput) this.printOutput(708, true);
        if (this.doInfoEvent) this.infoEvent(708, true);

        if (((spec.Tunnel_Traffictube2_ButtonVentilation4_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonVentilation4_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonVentilation4_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonVentilation4_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonVentilation4_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonVentilation4_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonVentilation4_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonVentilation4_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(708, false);
        if (this.doInfoPrintOutput) this.printOutput(708, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 238 and event "Tunnel_Traffictube2_ButtonVentilation5_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge238() {

        if (this.doInfoPrintOutput) this.printOutput(711, true);
        if (this.doInfoEvent) this.infoEvent(711, true);

        if (((spec.Tunnel_Traffictube2_ButtonVentilation5_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonVentilation5_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonVentilation5_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonVentilation5_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonVentilation5_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonVentilation5_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonVentilation5_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonVentilation5_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(711, false);
        if (this.doInfoPrintOutput) this.printOutput(711, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 239 and event "Tunnel_Traffictube2_ButtonVentilation6_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge239() {

        if (this.doInfoPrintOutput) this.printOutput(714, true);
        if (this.doInfoEvent) this.infoEvent(714, true);

        if (((spec.Tunnel_Traffictube2_ButtonVentilation6_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonVentilation6_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonVentilation6_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonVentilation6_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonVentilation6_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonVentilation6_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonVentilation6_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonVentilation6_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(714, false);
        if (this.doInfoPrintOutput) this.printOutput(714, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 240 and event "Tunnel_Traffictube2_ButtonVentilation7_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge240() {

        if (this.doInfoPrintOutput) this.printOutput(717, true);
        if (this.doInfoEvent) this.infoEvent(717, true);

        if (((spec.Tunnel_Traffictube2_ButtonVentilation7_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonVentilation7_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonVentilation7_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonVentilation7_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonVentilation7_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonVentilation7_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonVentilation7_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonVentilation7_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(717, false);
        if (this.doInfoPrintOutput) this.printOutput(717, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 241 and event "Tunnel_Traffictube2_ButtonVentilation8_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge241() {

        if (this.doInfoPrintOutput) this.printOutput(720, true);
        if (this.doInfoEvent) this.infoEvent(720, true);

        if (((spec.Tunnel_Traffictube2_ButtonVentilation8_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonVentilation8_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonVentilation8_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonVentilation8_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonVentilation8_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonVentilation8_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonVentilation8_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonVentilation8_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(720, false);
        if (this.doInfoPrintOutput) this.printOutput(720, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 242 and event "Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge242() {

        if (this.doInfoPrintOutput) this.printOutput(723, true);
        if (this.doInfoEvent) this.infoEvent(723, true);

        if (((spec.Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(723, false);
        if (this.doInfoPrintOutput) this.printOutput(723, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 243 and event "Tunnel_Traffictube2_ButtonVentilationDrivingDirection_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge243() {

        if (this.doInfoPrintOutput) this.printOutput(726, true);
        if (this.doInfoEvent) this.infoEvent(726, true);

        if (((spec.Tunnel_Traffictube2_ButtonVentilationDrivingDirection_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ButtonVentilationDrivingDirection_conditionPush_())) {
            spec.Tunnel_Traffictube2_ButtonVentilationDrivingDirection_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ButtonVentilationDrivingDirection_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ButtonVentilationDrivingDirection_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ButtonVentilationDrivingDirection_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ButtonVentilationDrivingDirection_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ButtonVentilationDrivingDirection_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(726, false);
        if (this.doInfoPrintOutput) this.printOutput(726, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 244 and event "Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge244() {

        if (this.doInfoPrintOutput) this.printOutput(744, true);
        if (this.doInfoEvent) this.infoEvent(744, true);

        if (((spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_conditionPush_())) {
            spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(744, false);
        if (this.doInfoPrintOutput) this.printOutput(744, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 245 and event "Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge245() {

        if (this.doInfoPrintOutput) this.printOutput(747, true);
        if (this.doInfoEvent) this.infoEvent(747, true);

        if (((spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_conditionPush_())) {
            spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(747, false);
        if (this.doInfoPrintOutput) this.printOutput(747, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 246 and event "Tunnel_Traffictube2_ControlLighting_ButtonAuto_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge246() {

        if (this.doInfoPrintOutput) this.printOutput(752, true);
        if (this.doInfoEvent) this.infoEvent(752, true);

        if (((spec.Tunnel_Traffictube2_ControlLighting_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ControlLighting_ButtonAuto_conditionPush_())) {
            spec.Tunnel_Traffictube2_ControlLighting_ButtonAuto_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ControlLighting_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ControlLighting_ButtonAuto_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ControlLighting_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ControlLighting_ButtonAuto_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ControlLighting_ButtonAuto_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(752, false);
        if (this.doInfoPrintOutput) this.printOutput(752, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 247 and event "Tunnel_Traffictube2_ControlLighting_ButtonManual_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge247() {

        if (this.doInfoPrintOutput) this.printOutput(755, true);
        if (this.doInfoEvent) this.infoEvent(755, true);

        if (((spec.Tunnel_Traffictube2_ControlLighting_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ControlLighting_ButtonManual_conditionPush_())) {
            spec.Tunnel_Traffictube2_ControlLighting_ButtonManual_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ControlLighting_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ControlLighting_ButtonManual_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ControlLighting_ButtonManual_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ControlLighting_ButtonManual_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ControlLighting_ButtonManual_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(755, false);
        if (this.doInfoPrintOutput) this.printOutput(755, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 248 and event "Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge248() {

        if (this.doInfoPrintOutput) this.printOutput(760, true);
        if (this.doInfoEvent) this.infoEvent(760, true);

        if (((spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_conditionPush_())) {
            spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(760, false);
        if (this.doInfoPrintOutput) this.printOutput(760, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 249 and event "Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge249() {

        if (this.doInfoPrintOutput) this.printOutput(763, true);
        if (this.doInfoEvent) this.infoEvent(763, true);

        if (((spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_conditionPush_())) {
            spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(763, false);
        if (this.doInfoPrintOutput) this.printOutput(763, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 250 and event "Tunnel_Traffictube2_ControlVentilation_ButtonAuto_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge250() {

        if (this.doInfoPrintOutput) this.printOutput(768, true);
        if (this.doInfoEvent) this.infoEvent(768, true);

        if (((spec.Tunnel_Traffictube2_ControlVentilation_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ControlVentilation_ButtonAuto_conditionPush_())) {
            spec.Tunnel_Traffictube2_ControlVentilation_ButtonAuto_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ControlVentilation_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ControlVentilation_ButtonAuto_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ControlVentilation_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ControlVentilation_ButtonAuto_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ControlVentilation_ButtonAuto_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(768, false);
        if (this.doInfoPrintOutput) this.printOutput(768, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 251 and event "Tunnel_Traffictube2_ControlVentilation_ButtonManual_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge251() {

        if (this.doInfoPrintOutput) this.printOutput(771, true);
        if (this.doInfoEvent) this.infoEvent(771, true);

        if (((spec.Tunnel_Traffictube2_ControlVentilation_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_ControlVentilation_ButtonManual_conditionPush_())) {
            spec.Tunnel_Traffictube2_ControlVentilation_ButtonManual_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_ControlVentilation_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_ControlVentilation_ButtonManual_conditionPush_()))) {
            spec.Tunnel_Traffictube2_ControlVentilation_ButtonManual_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_ControlVentilation_ButtonManual_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_ControlVentilation_ButtonManual_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(771, false);
        if (this.doInfoPrintOutput) this.printOutput(771, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 252 and event "Tunnel_Traffictube2_EmergencyCabinetA_Firehose.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge252() {
        var guard = (spec.Tunnel_Traffictube2_EmergencyCabinetA_Firehose_) == (spec.specEnum._on);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(776, true);
        if (this.doInfoEvent) this.infoEvent(776, true);

        spec.Tunnel_Traffictube2_EmergencyCabinetA_Firehose_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(776, false);
        if (this.doInfoPrintOutput) this.printOutput(776, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 253 and event "Tunnel_Traffictube2_EmergencyCabinetA_Firehose.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge253() {
        var guard = (spec.Tunnel_Traffictube2_EmergencyCabinetA_Firehose_) == (spec.specEnum._off);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(777, true);
        if (this.doInfoEvent) this.infoEvent(777, true);

        spec.Tunnel_Traffictube2_EmergencyCabinetA_Firehose_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(777, false);
        if (this.doInfoPrintOutput) this.printOutput(777, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 254 and event "Tunnel_Traffictube2_EmergencyCabinetA_HandheldExtinguisher.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge254() {
        var guard = (spec.Tunnel_Traffictube2_EmergencyCabinetA_HandheldExtinguisher_) == (spec.specEnum._on);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(778, true);
        if (this.doInfoEvent) this.infoEvent(778, true);

        spec.Tunnel_Traffictube2_EmergencyCabinetA_HandheldExtinguisher_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(778, false);
        if (this.doInfoPrintOutput) this.printOutput(778, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 255 and event "Tunnel_Traffictube2_EmergencyCabinetA_HandheldExtinguisher.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge255() {
        var guard = (spec.Tunnel_Traffictube2_EmergencyCabinetA_HandheldExtinguisher_) == (spec.specEnum._off);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(779, true);
        if (this.doInfoEvent) this.infoEvent(779, true);

        spec.Tunnel_Traffictube2_EmergencyCabinetA_HandheldExtinguisher_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(779, false);
        if (this.doInfoPrintOutput) this.printOutput(779, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 256 and event "Tunnel_Traffictube2_EmergencyCabinetA_Phone.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge256() {
        var guard = (spec.Tunnel_Traffictube2_EmergencyCabinetA_Phone_) == (spec.specEnum._on);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(780, true);
        if (this.doInfoEvent) this.infoEvent(780, true);

        spec.Tunnel_Traffictube2_EmergencyCabinetA_Phone_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(780, false);
        if (this.doInfoPrintOutput) this.printOutput(780, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 257 and event "Tunnel_Traffictube2_EmergencyCabinetA_Phone.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge257() {
        var guard = (spec.Tunnel_Traffictube2_EmergencyCabinetA_Phone_) == (spec.specEnum._off);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(781, true);
        if (this.doInfoEvent) this.infoEvent(781, true);

        spec.Tunnel_Traffictube2_EmergencyCabinetA_Phone_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(781, false);
        if (this.doInfoPrintOutput) this.printOutput(781, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 258 and event "Tunnel_Traffictube2_EmergencyCabinetA_SensorOpen.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge258() {
        var guard = (spec.Tunnel_Traffictube2_EmergencyCabinetA_SensorOpen_) == (spec.specEnum._on);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(782, true);
        if (this.doInfoEvent) this.infoEvent(782, true);

        spec.Tunnel_Traffictube2_EmergencyCabinetA_SensorOpen_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(782, false);
        if (this.doInfoPrintOutput) this.printOutput(782, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 259 and event "Tunnel_Traffictube2_EmergencyCabinetA_SensorOpen.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge259() {
        var guard = (spec.Tunnel_Traffictube2_EmergencyCabinetA_SensorOpen_) == (spec.specEnum._off);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(783, true);
        if (this.doInfoEvent) this.infoEvent(783, true);

        spec.Tunnel_Traffictube2_EmergencyCabinetA_SensorOpen_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(783, false);
        if (this.doInfoPrintOutput) this.printOutput(783, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 260 and event "Tunnel_Traffictube2_EmergencyCabinetC_HandheldExtinguisher.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge260() {
        var guard = (spec.Tunnel_Traffictube2_EmergencyCabinetC_HandheldExtinguisher_) == (spec.specEnum._on);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(784, true);
        if (this.doInfoEvent) this.infoEvent(784, true);

        spec.Tunnel_Traffictube2_EmergencyCabinetC_HandheldExtinguisher_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(784, false);
        if (this.doInfoPrintOutput) this.printOutput(784, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 261 and event "Tunnel_Traffictube2_EmergencyCabinetC_HandheldExtinguisher.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge261() {
        var guard = (spec.Tunnel_Traffictube2_EmergencyCabinetC_HandheldExtinguisher_) == (spec.specEnum._off);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(785, true);
        if (this.doInfoEvent) this.infoEvent(785, true);

        spec.Tunnel_Traffictube2_EmergencyCabinetC_HandheldExtinguisher_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(785, false);
        if (this.doInfoPrintOutput) this.printOutput(785, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 262 and event "Tunnel_Traffictube2_EmergencyCabinetC_Phone.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge262() {
        var guard = (spec.Tunnel_Traffictube2_EmergencyCabinetC_Phone_) == (spec.specEnum._on);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(786, true);
        if (this.doInfoEvent) this.infoEvent(786, true);

        spec.Tunnel_Traffictube2_EmergencyCabinetC_Phone_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(786, false);
        if (this.doInfoPrintOutput) this.printOutput(786, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 263 and event "Tunnel_Traffictube2_EmergencyCabinetC_Phone.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge263() {
        var guard = (spec.Tunnel_Traffictube2_EmergencyCabinetC_Phone_) == (spec.specEnum._off);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(787, true);
        if (this.doInfoEvent) this.infoEvent(787, true);

        spec.Tunnel_Traffictube2_EmergencyCabinetC_Phone_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(787, false);
        if (this.doInfoPrintOutput) this.printOutput(787, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 264 and event "Tunnel_Traffictube2_EmergencyCabinetC_SensorOpen.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge264() {
        var guard = (spec.Tunnel_Traffictube2_EmergencyCabinetC_SensorOpen_) == (spec.specEnum._on);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(788, true);
        if (this.doInfoEvent) this.infoEvent(788, true);

        spec.Tunnel_Traffictube2_EmergencyCabinetC_SensorOpen_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(788, false);
        if (this.doInfoPrintOutput) this.printOutput(788, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 265 and event "Tunnel_Traffictube2_EmergencyCabinetC_SensorOpen.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge265() {
        var guard = (spec.Tunnel_Traffictube2_EmergencyCabinetC_SensorOpen_) == (spec.specEnum._off);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(789, true);
        if (this.doInfoEvent) this.infoEvent(789, true);

        spec.Tunnel_Traffictube2_EmergencyCabinetC_SensorOpen_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(789, false);
        if (this.doInfoPrintOutput) this.printOutput(789, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 266 and event "Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge266() {

        if (this.doInfoPrintOutput) this.printOutput(793, true);
        if (this.doInfoEvent) this.infoEvent(793, true);

        if (((spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_conditionPush_())) {
            spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_conditionPush_()))) {
            spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(793, false);
        if (this.doInfoPrintOutput) this.printOutput(793, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 267 and event "Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge267() {

        if (this.doInfoPrintOutput) this.printOutput(796, true);
        if (this.doInfoEvent) this.infoEvent(796, true);

        if (((spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_conditionPush_())) {
            spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_conditionPush_()))) {
            spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(796, false);
        if (this.doInfoPrintOutput) this.printOutput(796, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 268 and event "Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge268() {

        if (this.doInfoPrintOutput) this.printOutput(799, true);
        if (this.doInfoEvent) this.infoEvent(799, true);

        if (((spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_conditionPush_())) {
            spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_conditionPush_()))) {
            spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(799, false);
        if (this.doInfoPrintOutput) this.printOutput(799, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 269 and event "Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge269() {

        if (this.doInfoPrintOutput) this.printOutput(802, true);
        if (this.doInfoEvent) this.infoEvent(802, true);

        if (((spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_conditionPush_())) {
            spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_conditionPush_()))) {
            spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(802, false);
        if (this.doInfoPrintOutput) this.printOutput(802, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 270 and event "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge270() {

        if (this.doInfoPrintOutput) this.printOutput(805, true);
        if (this.doInfoEvent) this.infoEvent(805, true);

        if (((spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_conditionPush_())) {
            spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_conditionPush_()))) {
            spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(805, false);
        if (this.doInfoPrintOutput) this.printOutput(805, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 271 and event "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge271() {

        if (this.doInfoPrintOutput) this.printOutput(808, true);
        if (this.doInfoEvent) this.infoEvent(808, true);

        if (((spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_conditionPush_())) {
            spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_conditionPush_()))) {
            spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(808, false);
        if (this.doInfoPrintOutput) this.printOutput(808, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 272 and event "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge272() {

        if (this.doInfoPrintOutput) this.printOutput(813, true);
        if (this.doInfoEvent) this.infoEvent(813, true);

        if (((spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_conditionPush_())) {
            spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_conditionPush_()))) {
            spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(813, false);
        if (this.doInfoPrintOutput) this.printOutput(813, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 273 and event "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge273() {

        if (this.doInfoPrintOutput) this.printOutput(816, true);
        if (this.doInfoEvent) this.infoEvent(816, true);

        if (((spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_conditionPush_())) {
            spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_conditionPush_()))) {
            spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(816, false);
        if (this.doInfoPrintOutput) this.printOutput(816, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 274 and event "Tunnel_Traffictube2_J32_TimerReleaseSignal.u_timeout".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge274() {
        var guard = (spec.Tunnel_Traffictube2_J32_TimerReleaseSignal_) == (spec.specEnum._running);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(827, true);
        if (this.doInfoEvent) this.infoEvent(827, true);

        spec.Tunnel_Traffictube2_J32_TimerReleaseSignal_ = spec.specEnum._finished;

        if (this.doInfoEvent) this.infoEvent(827, false);
        if (this.doInfoPrintOutput) this.printOutput(827, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 275 and event "Tunnel_Traffictube2_Lightsensor.u_0".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge275() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube2_Lightsensor_setting_, 0);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(837, true);
        if (this.doInfoEvent) this.infoEvent(837, true);

        spec.Tunnel_Traffictube2_Lightsensor_setting_ = 0;

        if (this.doInfoEvent) this.infoEvent(837, false);
        if (this.doInfoPrintOutput) this.printOutput(837, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 276 and event "Tunnel_Traffictube2_Lightsensor.u_1".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge276() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube2_Lightsensor_setting_, 1);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(838, true);
        if (this.doInfoEvent) this.infoEvent(838, true);

        spec.Tunnel_Traffictube2_Lightsensor_setting_ = 1;

        if (this.doInfoEvent) this.infoEvent(838, false);
        if (this.doInfoPrintOutput) this.printOutput(838, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 277 and event "Tunnel_Traffictube2_Lightsensor.u_2".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge277() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube2_Lightsensor_setting_, 2);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(839, true);
        if (this.doInfoEvent) this.infoEvent(839, true);

        spec.Tunnel_Traffictube2_Lightsensor_setting_ = 2;

        if (this.doInfoEvent) this.infoEvent(839, false);
        if (this.doInfoPrintOutput) this.printOutput(839, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 278 and event "Tunnel_Traffictube2_Lightsensor.u_3".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge278() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube2_Lightsensor_setting_, 3);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(840, true);
        if (this.doInfoEvent) this.infoEvent(840, true);

        spec.Tunnel_Traffictube2_Lightsensor_setting_ = 3;

        if (this.doInfoEvent) this.infoEvent(840, false);
        if (this.doInfoPrintOutput) this.printOutput(840, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 279 and event "Tunnel_Traffictube2_Lightsensor.u_4".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge279() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube2_Lightsensor_setting_, 4);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(841, true);
        if (this.doInfoEvent) this.infoEvent(841, true);

        spec.Tunnel_Traffictube2_Lightsensor_setting_ = 4;

        if (this.doInfoEvent) this.infoEvent(841, false);
        if (this.doInfoPrintOutput) this.printOutput(841, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 280 and event "Tunnel_Traffictube2_Lightsensor.u_5".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge280() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube2_Lightsensor_setting_, 5);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(842, true);
        if (this.doInfoEvent) this.infoEvent(842, true);

        spec.Tunnel_Traffictube2_Lightsensor_setting_ = 5;

        if (this.doInfoEvent) this.infoEvent(842, false);
        if (this.doInfoPrintOutput) this.printOutput(842, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 281 and event "Tunnel_Traffictube2_Lightsensor.u_6".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge281() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube2_Lightsensor_setting_, 6);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(843, true);
        if (this.doInfoEvent) this.infoEvent(843, true);

        spec.Tunnel_Traffictube2_Lightsensor_setting_ = 6;

        if (this.doInfoEvent) this.infoEvent(843, false);
        if (this.doInfoPrintOutput) this.printOutput(843, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 282 and event "Tunnel_Traffictube2_Lightsensor.u_7".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge282() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube2_Lightsensor_setting_, 7);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(844, true);
        if (this.doInfoEvent) this.infoEvent(844, true);

        spec.Tunnel_Traffictube2_Lightsensor_setting_ = 7;

        if (this.doInfoEvent) this.infoEvent(844, false);
        if (this.doInfoPrintOutput) this.printOutput(844, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 283 and event "Tunnel_Traffictube2_Lightsensor.u_8".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge283() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube2_Lightsensor_setting_, 8);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(845, true);
        if (this.doInfoEvent) this.infoEvent(845, true);

        spec.Tunnel_Traffictube2_Lightsensor_setting_ = 8;

        if (this.doInfoEvent) this.infoEvent(845, false);
        if (this.doInfoPrintOutput) this.printOutput(845, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 284 and event "Tunnel_Traffictube2_PopUp_ButtonAccept_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge284() {
        var guard = (spec.Tunnel_Traffictube2_PopUp_Window_) == (spec.specEnum._on);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(858, true);
        if (this.doInfoEvent) this.infoEvent(858, true);

        if (((spec.Tunnel_Traffictube2_PopUp_ButtonAccept_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_PopUp_ButtonAccept_conditionPush_())) {
            spec.Tunnel_Traffictube2_PopUp_ButtonAccept_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_PopUp_ButtonAccept_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_PopUp_ButtonAccept_conditionPush_()))) {
            spec.Tunnel_Traffictube2_PopUp_ButtonAccept_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_PopUp_ButtonAccept_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_PopUp_ButtonAccept_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(858, false);
        if (this.doInfoPrintOutput) this.printOutput(858, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 285 and event "Tunnel_Traffictube2_PopUp_ButtonReject_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge285() {
        var guard = (spec.Tunnel_Traffictube2_PopUp_Window_) == (spec.specEnum._on);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(861, true);
        if (this.doInfoEvent) this.infoEvent(861, true);

        if (((spec.Tunnel_Traffictube2_PopUp_ButtonReject_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_Traffictube2_PopUp_ButtonReject_conditionPush_())) {
            spec.Tunnel_Traffictube2_PopUp_ButtonReject_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_Traffictube2_PopUp_ButtonReject_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_Traffictube2_PopUp_ButtonReject_conditionPush_()))) {
            spec.Tunnel_Traffictube2_PopUp_ButtonReject_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_Traffictube2_PopUp_ButtonReject_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_Traffictube2_PopUp_ButtonReject_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(861, false);
        if (this.doInfoPrintOutput) this.printOutput(861, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 286 and event "Tunnel_Traffictube2_PopUp_Timer.u_timeout".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge286() {
        var guard = (spec.Tunnel_Traffictube2_PopUp_Timer_) == (spec.specEnum._running);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(866, true);
        if (this.doInfoEvent) this.infoEvent(866, true);

        spec.Tunnel_Traffictube2_PopUp_Timer_ = spec.specEnum._finished;

        if (this.doInfoEvent) this.infoEvent(866, false);
        if (this.doInfoPrintOutput) this.printOutput(866, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 287 and event "Tunnel_Traffictube2_Smokedetection.u_0".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge287() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube2_Smokedetection_setting_, 0);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(871, true);
        if (this.doInfoEvent) this.infoEvent(871, true);

        spec.Tunnel_Traffictube2_Smokedetection_setting_ = 0;

        if (this.doInfoEvent) this.infoEvent(871, false);
        if (this.doInfoPrintOutput) this.printOutput(871, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 288 and event "Tunnel_Traffictube2_Smokedetection.u_1".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge288() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube2_Smokedetection_setting_, 1);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(872, true);
        if (this.doInfoEvent) this.infoEvent(872, true);

        spec.Tunnel_Traffictube2_Smokedetection_setting_ = 1;

        if (this.doInfoEvent) this.infoEvent(872, false);
        if (this.doInfoPrintOutput) this.printOutput(872, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 289 and event "Tunnel_Traffictube2_Smokedetection.u_2".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge289() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube2_Smokedetection_setting_, 2);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(873, true);
        if (this.doInfoEvent) this.infoEvent(873, true);

        spec.Tunnel_Traffictube2_Smokedetection_setting_ = 2;

        if (this.doInfoEvent) this.infoEvent(873, false);
        if (this.doInfoPrintOutput) this.printOutput(873, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 290 and event "Tunnel_Traffictube2_Smokedetection.u_3".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge290() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube2_Smokedetection_setting_, 3);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(874, true);
        if (this.doInfoEvent) this.infoEvent(874, true);

        spec.Tunnel_Traffictube2_Smokedetection_setting_ = 3;

        if (this.doInfoEvent) this.infoEvent(874, false);
        if (this.doInfoPrintOutput) this.printOutput(874, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 291 and event "Tunnel_Traffictube2_Smokedetection.u_4".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge291() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube2_Smokedetection_setting_, 4);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(875, true);
        if (this.doInfoEvent) this.infoEvent(875, true);

        spec.Tunnel_Traffictube2_Smokedetection_setting_ = 4;

        if (this.doInfoEvent) this.infoEvent(875, false);
        if (this.doInfoPrintOutput) this.printOutput(875, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 292 and event "Tunnel_Traffictube2_Smokedetection.u_5".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge292() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube2_Smokedetection_setting_, 5);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(876, true);
        if (this.doInfoEvent) this.infoEvent(876, true);

        spec.Tunnel_Traffictube2_Smokedetection_setting_ = 5;

        if (this.doInfoEvent) this.infoEvent(876, false);
        if (this.doInfoPrintOutput) this.printOutput(876, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 293 and event "Tunnel_Traffictube2_Smokedetection.u_6".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge293() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube2_Smokedetection_setting_, 6);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(877, true);
        if (this.doInfoEvent) this.infoEvent(877, true);

        spec.Tunnel_Traffictube2_Smokedetection_setting_ = 6;

        if (this.doInfoEvent) this.infoEvent(877, false);
        if (this.doInfoPrintOutput) this.printOutput(877, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 294 and event "Tunnel_Traffictube2_Smokedetection.u_7".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge294() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube2_Smokedetection_setting_, 7);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(878, true);
        if (this.doInfoEvent) this.infoEvent(878, true);

        spec.Tunnel_Traffictube2_Smokedetection_setting_ = 7;

        if (this.doInfoEvent) this.infoEvent(878, false);
        if (this.doInfoPrintOutput) this.printOutput(878, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 295 and event "Tunnel_Traffictube2_Smokedetection.u_8".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge295() {
        var guard = !specUtils.equalObjs(spec.Tunnel_Traffictube2_Smokedetection_setting_, 8);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(879, true);
        if (this.doInfoEvent) this.infoEvent(879, true);

        spec.Tunnel_Traffictube2_Smokedetection_setting_ = 8;

        if (this.doInfoEvent) this.infoEvent(879, false);
        if (this.doInfoPrintOutput) this.printOutput(879, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 296 and event "Tunnel_Traffictube2_Standstilldetection.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge296() {
        var guard = ((spec.Tunnel_Traffictube2_Standstilldetection_) == (spec.specEnum._standstill)) || ((spec.Tunnel_Traffictube2_Standstilldetection_) == (spec.specEnum._wrongway));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(880, true);
        if (this.doInfoEvent) this.infoEvent(880, true);

        if ((spec.Tunnel_Traffictube2_Standstilldetection_) == (spec.specEnum._standstill)) {
            spec.Tunnel_Traffictube2_Standstilldetection_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube2_Standstilldetection_) == (spec.specEnum._wrongway)) {
            spec.Tunnel_Traffictube2_Standstilldetection_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(880, false);
        if (this.doInfoPrintOutput) this.printOutput(880, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 297 and event "Tunnel_Traffictube2_Standstilldetection.u_standstill".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge297() {
        var guard = ((spec.Tunnel_Traffictube2_Standstilldetection_) == (spec.specEnum._off)) || ((spec.Tunnel_Traffictube2_Standstilldetection_) == (spec.specEnum._wrongway));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(881, true);
        if (this.doInfoEvent) this.infoEvent(881, true);

        if ((spec.Tunnel_Traffictube2_Standstilldetection_) == (spec.specEnum._off)) {
            spec.Tunnel_Traffictube2_Standstilldetection_ = spec.specEnum._standstill;
        } else if ((spec.Tunnel_Traffictube2_Standstilldetection_) == (spec.specEnum._wrongway)) {
            spec.Tunnel_Traffictube2_Standstilldetection_ = spec.specEnum._standstill;
        }

        if (this.doInfoEvent) this.infoEvent(881, false);
        if (this.doInfoPrintOutput) this.printOutput(881, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 298 and event "Tunnel_Traffictube2_Standstilldetection.u_wrongway".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge298() {
        var guard = ((spec.Tunnel_Traffictube2_Standstilldetection_) == (spec.specEnum._off)) || ((spec.Tunnel_Traffictube2_Standstilldetection_) == (spec.specEnum._standstill));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(882, true);
        if (this.doInfoEvent) this.infoEvent(882, true);

        if ((spec.Tunnel_Traffictube2_Standstilldetection_) == (spec.specEnum._off)) {
            spec.Tunnel_Traffictube2_Standstilldetection_ = spec.specEnum._wrongway;
        } else if ((spec.Tunnel_Traffictube2_Standstilldetection_) == (spec.specEnum._standstill)) {
            spec.Tunnel_Traffictube2_Standstilldetection_ = spec.specEnum._wrongway;
        }

        if (this.doInfoEvent) this.infoEvent(882, false);
        if (this.doInfoPrintOutput) this.printOutput(882, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 299 and event "Tunnel_Traffictube2_SwitchTimerAudio.u_timeout".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge299() {
        var guard = ((spec.Tunnel_Traffictube2_SwitchTimerAudio_) == (spec.specEnum._on1)) || ((spec.Tunnel_Traffictube2_SwitchTimerAudio_) == (spec.specEnum._on2));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(885, true);
        if (this.doInfoEvent) this.infoEvent(885, true);

        if ((spec.Tunnel_Traffictube2_SwitchTimerAudio_) == (spec.specEnum._on1)) {
            spec.Tunnel_Traffictube2_SwitchTimerAudio_ = spec.specEnum._on2;
        } else if ((spec.Tunnel_Traffictube2_SwitchTimerAudio_) == (spec.specEnum._on2)) {
            spec.Tunnel_Traffictube2_SwitchTimerAudio_ = spec.specEnum._on1;
        }

        if (this.doInfoEvent) this.infoEvent(885, false);
        if (this.doInfoPrintOutput) this.printOutput(885, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 300 and event "Tunnel_Traffictube2_TimerCameraViewEven.u_timeout".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge300() {
        var guard = (spec.Tunnel_Traffictube2_TimerCameraViewEven_) == (spec.specEnum._running);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(888, true);
        if (this.doInfoEvent) this.infoEvent(888, true);

        spec.Tunnel_Traffictube2_TimerCameraViewEven_ = spec.specEnum._finished;

        if (this.doInfoEvent) this.infoEvent(888, false);
        if (this.doInfoPrintOutput) this.printOutput(888, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 301 and event "Tunnel_Traffictube2_TimerCameraViewUneven.u_timeout".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge301() {
        var guard = (spec.Tunnel_Traffictube2_TimerCameraViewUneven_) == (spec.specEnum._running);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(891, true);
        if (this.doInfoEvent) this.infoEvent(891, true);

        spec.Tunnel_Traffictube2_TimerCameraViewUneven_ = spec.specEnum._finished;

        if (this.doInfoEvent) this.infoEvent(891, false);
        if (this.doInfoPrintOutput) this.printOutput(891, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 302 and event "Tunnel_Traffictube2_Trafficlight1_ReleaseSignal.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge302() {
        var guard = ((spec.Tunnel_Traffictube2_Trafficlight1_Mode_) != (spec.specEnum._red)) && ((spec.Tunnel_Traffictube2_Trafficlight1_ReleaseSignal_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(896, true);
        if (this.doInfoEvent) this.infoEvent(896, true);

        spec.Tunnel_Traffictube2_Trafficlight1_ReleaseSignal_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(896, false);
        if (this.doInfoPrintOutput) this.printOutput(896, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 303 and event "Tunnel_Traffictube2_Trafficlight1_ReleaseSignal.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge303() {
        var guard = ((spec.Tunnel_Traffictube2_Trafficlight1_Mode_) == (spec.specEnum._red)) && (((spec.Tunnel_Traffictube2_Trafficlight1_TimerReleaseSignal_) == (spec.specEnum._finished)) && ((spec.Tunnel_Traffictube2_Trafficlight1_ReleaseSignal_) == (spec.specEnum._off)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(897, true);
        if (this.doInfoEvent) this.infoEvent(897, true);

        spec.Tunnel_Traffictube2_Trafficlight1_ReleaseSignal_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(897, false);
        if (this.doInfoPrintOutput) this.printOutput(897, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 304 and event "Tunnel_Traffictube2_Trafficlight1_TimerReleaseSignal.u_timeout".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge304() {
        var guard = (spec.Tunnel_Traffictube2_Trafficlight1_TimerReleaseSignal_) == (spec.specEnum._running);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(900, true);
        if (this.doInfoEvent) this.infoEvent(900, true);

        spec.Tunnel_Traffictube2_Trafficlight1_TimerReleaseSignal_ = spec.specEnum._finished;

        if (this.doInfoEvent) this.infoEvent(900, false);
        if (this.doInfoPrintOutput) this.printOutput(900, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 305 and event "Tunnel_Traffictube2_Trafficlight2_ReleaseSignal.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge305() {
        var guard = ((spec.Tunnel_Traffictube2_Trafficlight2_Mode_) != (spec.specEnum._red)) && ((spec.Tunnel_Traffictube2_Trafficlight2_ReleaseSignal_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(905, true);
        if (this.doInfoEvent) this.infoEvent(905, true);

        spec.Tunnel_Traffictube2_Trafficlight2_ReleaseSignal_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(905, false);
        if (this.doInfoPrintOutput) this.printOutput(905, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 306 and event "Tunnel_Traffictube2_Trafficlight2_ReleaseSignal.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge306() {
        var guard = ((spec.Tunnel_Traffictube2_Trafficlight2_Mode_) == (spec.specEnum._red)) && (((spec.Tunnel_Traffictube2_Trafficlight2_TimerReleaseSignal_) == (spec.specEnum._finished)) && ((spec.Tunnel_Traffictube2_Trafficlight2_ReleaseSignal_) == (spec.specEnum._off)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(906, true);
        if (this.doInfoEvent) this.infoEvent(906, true);

        spec.Tunnel_Traffictube2_Trafficlight2_ReleaseSignal_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(906, false);
        if (this.doInfoPrintOutput) this.printOutput(906, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 307 and event "Tunnel_Traffictube2_Trafficlight2_TimerReleaseSignal.u_timeout".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge307() {
        var guard = (spec.Tunnel_Traffictube2_Trafficlight2_TimerReleaseSignal_) == (spec.specEnum._running);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(909, true);
        if (this.doInfoEvent) this.infoEvent(909, true);

        spec.Tunnel_Traffictube2_Trafficlight2_TimerReleaseSignal_ = spec.specEnum._finished;

        if (this.doInfoEvent) this.infoEvent(909, false);
        if (this.doInfoPrintOutput) this.printOutput(909, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 308 and event "Tunnel_Traffictube2_Trafficlight3_ReleaseSignal.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge308() {
        var guard = ((spec.Tunnel_Traffictube2_Trafficlight3_Mode_) != (spec.specEnum._red)) && ((spec.Tunnel_Traffictube2_Trafficlight3_ReleaseSignal_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(914, true);
        if (this.doInfoEvent) this.infoEvent(914, true);

        spec.Tunnel_Traffictube2_Trafficlight3_ReleaseSignal_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(914, false);
        if (this.doInfoPrintOutput) this.printOutput(914, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 309 and event "Tunnel_Traffictube2_Trafficlight3_ReleaseSignal.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge309() {
        var guard = ((spec.Tunnel_Traffictube2_Trafficlight3_Mode_) == (spec.specEnum._red)) && (((spec.Tunnel_Traffictube2_Trafficlight3_TimerReleaseSignal_) == (spec.specEnum._finished)) && ((spec.Tunnel_Traffictube2_Trafficlight3_ReleaseSignal_) == (spec.specEnum._off)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(915, true);
        if (this.doInfoEvent) this.infoEvent(915, true);

        spec.Tunnel_Traffictube2_Trafficlight3_ReleaseSignal_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(915, false);
        if (this.doInfoPrintOutput) this.printOutput(915, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 310 and event "Tunnel_Traffictube2_Trafficlight3_TimerReleaseSignal.u_timeout".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge310() {
        var guard = (spec.Tunnel_Traffictube2_Trafficlight3_TimerReleaseSignal_) == (spec.specEnum._running);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(918, true);
        if (this.doInfoEvent) this.infoEvent(918, true);

        spec.Tunnel_Traffictube2_Trafficlight3_TimerReleaseSignal_ = spec.specEnum._finished;

        if (this.doInfoEvent) this.infoEvent(918, false);
        if (this.doInfoPrintOutput) this.printOutput(918, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 311 and event "Tunnel_u_broadcastBothTubes".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge311() {

        if (this.doInfoPrintOutput) this.printOutput(939, true);
        if (this.doInfoEvent) this.infoEvent(939, true);

        if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._off)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._traffictube;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._traffictube)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._traffictube;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._section)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._traffictube;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._camera)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._traffictube;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._evacuation)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._traffictube;
        }
        if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._off)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._traffictube;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._traffictube)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._traffictube;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._section)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._traffictube;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._camera)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._traffictube;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._evacuation)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._traffictube;
        }

        if (this.doInfoEvent) this.infoEvent(939, false);
        if (this.doInfoPrintOutput) this.printOutput(939, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 312 and event "Tunnel_u_broadcastCamera1".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge312() {

        if (this.doInfoPrintOutput) this.printOutput(940, true);
        if (this.doInfoEvent) this.infoEvent(940, true);

        if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._off)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._camera;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._traffictube)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._camera;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._section)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._camera;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._camera)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._camera;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._evacuation)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._camera;
        }
        if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._off)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._traffictube)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._section)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._camera)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._evacuation)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(940, false);
        if (this.doInfoPrintOutput) this.printOutput(940, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 313 and event "Tunnel_u_broadcastCamera2".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge313() {

        if (this.doInfoPrintOutput) this.printOutput(941, true);
        if (this.doInfoEvent) this.infoEvent(941, true);

        if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._off)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._traffictube)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._section)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._camera)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._evacuation)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._off;
        }
        if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._off)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._camera;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._traffictube)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._camera;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._section)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._camera;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._camera)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._camera;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._evacuation)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._camera;
        }

        if (this.doInfoEvent) this.infoEvent(941, false);
        if (this.doInfoPrintOutput) this.printOutput(941, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 314 and event "Tunnel_u_broadcastSection1".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge314() {

        if (this.doInfoPrintOutput) this.printOutput(942, true);
        if (this.doInfoEvent) this.infoEvent(942, true);

        if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._off)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._section;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._traffictube)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._section;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._section)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._section;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._camera)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._section;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._evacuation)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._section;
        }
        if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._off)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._traffictube)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._section)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._camera)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._evacuation)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(942, false);
        if (this.doInfoPrintOutput) this.printOutput(942, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 315 and event "Tunnel_u_broadcastSection2".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge315() {

        if (this.doInfoPrintOutput) this.printOutput(943, true);
        if (this.doInfoEvent) this.infoEvent(943, true);

        if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._off)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._traffictube)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._section)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._camera)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._evacuation)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._off;
        }
        if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._off)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._section;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._traffictube)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._section;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._section)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._section;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._camera)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._section;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._evacuation)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._section;
        }

        if (this.doInfoEvent) this.infoEvent(943, false);
        if (this.doInfoPrintOutput) this.printOutput(943, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 316 and event "Tunnel_u_broadcastStop".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge316() {

        if (this.doInfoPrintOutput) this.printOutput(944, true);
        if (this.doInfoEvent) this.infoEvent(944, true);

        if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._off)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._traffictube)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._section)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._camera)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._evacuation)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._off;
        }
        if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._off)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._traffictube)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._section)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._camera)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._evacuation)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(944, false);
        if (this.doInfoPrintOutput) this.printOutput(944, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 317 and event "Tunnel_u_broadcastTraffictube1".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge317() {

        if (this.doInfoPrintOutput) this.printOutput(945, true);
        if (this.doInfoEvent) this.infoEvent(945, true);

        if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._off)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._traffictube;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._traffictube)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._traffictube;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._section)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._traffictube;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._camera)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._traffictube;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._evacuation)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._traffictube;
        }
        if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._off)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._traffictube)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._section)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._camera)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._evacuation)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(945, false);
        if (this.doInfoPrintOutput) this.printOutput(945, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 318 and event "Tunnel_u_broadcastTraffictube2".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge318() {

        if (this.doInfoPrintOutput) this.printOutput(946, true);
        if (this.doInfoEvent) this.infoEvent(946, true);

        if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._off)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._traffictube)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._section)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._camera)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._off;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._evacuation)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._off;
        }
        if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._off)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._traffictube;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._traffictube)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._traffictube;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._section)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._traffictube;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._camera)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._traffictube;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._evacuation)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._traffictube;
        }

        if (this.doInfoEvent) this.infoEvent(946, false);
        if (this.doInfoPrintOutput) this.printOutput(946, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 319 and event "Tunnel_WatercellarFirehoses_ButtonExtinguish_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge319() {

        if (this.doInfoPrintOutput) this.printOutput(947, true);
        if (this.doInfoEvent) this.infoEvent(947, true);

        if (((spec.Tunnel_WatercellarFirehoses_ButtonExtinguish_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_WatercellarFirehoses_ButtonExtinguish_conditionPush_())) {
            spec.Tunnel_WatercellarFirehoses_ButtonExtinguish_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_WatercellarFirehoses_ButtonExtinguish_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_WatercellarFirehoses_ButtonExtinguish_conditionPush_()))) {
            spec.Tunnel_WatercellarFirehoses_ButtonExtinguish_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_WatercellarFirehoses_ButtonExtinguish_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_WatercellarFirehoses_ButtonExtinguish_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(947, false);
        if (this.doInfoPrintOutput) this.printOutput(947, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 320 and event "Tunnel_WatercellarFirehoses_ButtonGuard_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge320() {

        if (this.doInfoPrintOutput) this.printOutput(950, true);
        if (this.doInfoEvent) this.infoEvent(950, true);

        if (((spec.Tunnel_WatercellarFirehoses_ButtonGuard_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_WatercellarFirehoses_ButtonGuard_conditionPush_())) {
            spec.Tunnel_WatercellarFirehoses_ButtonGuard_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_WatercellarFirehoses_ButtonGuard_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_WatercellarFirehoses_ButtonGuard_conditionPush_()))) {
            spec.Tunnel_WatercellarFirehoses_ButtonGuard_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_WatercellarFirehoses_ButtonGuard_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_WatercellarFirehoses_ButtonGuard_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(950, false);
        if (this.doInfoPrintOutput) this.printOutput(950, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 321 and event "Tunnel_WatercellarFirehoses_Control_ButtonAuto_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge321() {

        if (this.doInfoPrintOutput) this.printOutput(953, true);
        if (this.doInfoEvent) this.infoEvent(953, true);

        if (((spec.Tunnel_WatercellarFirehoses_Control_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_WatercellarFirehoses_Control_ButtonAuto_conditionPush_())) {
            spec.Tunnel_WatercellarFirehoses_Control_ButtonAuto_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_WatercellarFirehoses_Control_ButtonAuto_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_WatercellarFirehoses_Control_ButtonAuto_conditionPush_()))) {
            spec.Tunnel_WatercellarFirehoses_Control_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_WatercellarFirehoses_Control_ButtonAuto_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_WatercellarFirehoses_Control_ButtonAuto_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(953, false);
        if (this.doInfoPrintOutput) this.printOutput(953, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 322 and event "Tunnel_WatercellarFirehoses_Control_ButtonManual_Button.u_push".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge322() {

        if (this.doInfoPrintOutput) this.printOutput(956, true);
        if (this.doInfoEvent) this.infoEvent(956, true);

        if (((spec.Tunnel_WatercellarFirehoses_Control_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (spec.Tunnel_WatercellarFirehoses_Control_ButtonManual_conditionPush_())) {
            spec.Tunnel_WatercellarFirehoses_Control_ButtonManual_Observer_ = spec.specEnum._pressed;
        } else if (((spec.Tunnel_WatercellarFirehoses_Control_ButtonManual_Observer_) == (spec.specEnum._unpressed)) && (!(spec.Tunnel_WatercellarFirehoses_Control_ButtonManual_conditionPush_()))) {
            spec.Tunnel_WatercellarFirehoses_Control_ButtonManual_Observer_ = spec.specEnum._unpressed;
        } else if ((spec.Tunnel_WatercellarFirehoses_Control_ButtonManual_Observer_) == (spec.specEnum._pressed)) {
            spec.Tunnel_WatercellarFirehoses_Control_ButtonManual_Observer_ = spec.specEnum._pressed;
        }

        if (this.doInfoEvent) this.infoEvent(956, false);
        if (this.doInfoPrintOutput) this.printOutput(956, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 323 and event "Tunnel_WatercellarFirehoses_SensorHigh.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge323() {
        var guard = (spec.Tunnel_WatercellarFirehoses_SensorHigh_) == (spec.specEnum._on);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(965, true);
        if (this.doInfoEvent) this.infoEvent(965, true);

        spec.Tunnel_WatercellarFirehoses_SensorHigh_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(965, false);
        if (this.doInfoPrintOutput) this.printOutput(965, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 324 and event "Tunnel_WatercellarFirehoses_SensorHigh.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge324() {
        var guard = ((spec.Tunnel_WatercellarFirehoses_SensorLow_) == (spec.specEnum._on)) && ((spec.Tunnel_WatercellarFirehoses_SensorHigh_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(966, true);
        if (this.doInfoEvent) this.infoEvent(966, true);

        spec.Tunnel_WatercellarFirehoses_SensorHigh_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(966, false);
        if (this.doInfoPrintOutput) this.printOutput(966, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 325 and event "Tunnel_WatercellarFirehoses_SensorLow.u_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge325() {
        var guard = ((spec.Tunnel_WatercellarFirehoses_SensorHigh_) == (spec.specEnum._off)) && ((spec.Tunnel_WatercellarFirehoses_SensorLow_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(967, true);
        if (this.doInfoEvent) this.infoEvent(967, true);

        spec.Tunnel_WatercellarFirehoses_SensorLow_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(967, false);
        if (this.doInfoPrintOutput) this.printOutput(967, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 326 and event "Tunnel_WatercellarFirehoses_SensorLow.u_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge326() {
        var guard = (spec.Tunnel_WatercellarFirehoses_SensorLow_) == (spec.specEnum._off);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(968, true);
        if (this.doInfoEvent) this.infoEvent(968, true);

        spec.Tunnel_WatercellarFirehoses_SensorLow_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(968, false);
        if (this.doInfoPrintOutput) this.printOutput(968, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 327 and event "Tunnel_BroadcastButtons1.c_evacuation".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge327() {
        var guard = ((spec.Tunnel_Traffictube1_SwitchTimerAudio_) == (spec.specEnum._on1)) && ((((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._off)) || ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._traffictube))) || (((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._section)) || ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._camera))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(0, true);
        if (this.doInfoEvent) this.infoEvent(0, true);

        if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._off)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._evacuation;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._traffictube)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._evacuation;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._section)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._evacuation;
        } else if ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._camera)) {
            spec.Tunnel_BroadcastButtons1_ = spec.specEnum._evacuation;
        }

        if (this.doInfoEvent) this.infoEvent(0, false);
        if (this.doInfoPrintOutput) this.printOutput(0, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 328 and event "Tunnel_BroadcastButtons1.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge328() {
        var guard = ((spec.Tunnel_Traffictube1_SwitchTimerAudio_) == (spec.specEnum._off)) && ((spec.Tunnel_BroadcastButtons1_) == (spec.specEnum._evacuation));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(1, true);
        if (this.doInfoEvent) this.infoEvent(1, true);

        spec.Tunnel_BroadcastButtons1_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(1, false);
        if (this.doInfoPrintOutput) this.printOutput(1, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 329 and event "Tunnel_BroadcastButtons2.c_evacuation".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge329() {
        var guard = ((spec.Tunnel_Traffictube2_SwitchTimerAudio_) == (spec.specEnum._on1)) && ((((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._off)) || ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._traffictube))) || (((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._section)) || ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._camera))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(2, true);
        if (this.doInfoEvent) this.infoEvent(2, true);

        if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._off)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._evacuation;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._traffictube)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._evacuation;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._section)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._evacuation;
        } else if ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._camera)) {
            spec.Tunnel_BroadcastButtons2_ = spec.specEnum._evacuation;
        }

        if (this.doInfoEvent) this.infoEvent(2, false);
        if (this.doInfoPrintOutput) this.printOutput(2, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 330 and event "Tunnel_BroadcastButtons2.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge330() {
        var guard = ((spec.Tunnel_Traffictube2_SwitchTimerAudio_) == (spec.specEnum._off)) && ((spec.Tunnel_BroadcastButtons2_) == (spec.specEnum._evacuation));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(3, true);
        if (this.doInfoEvent) this.infoEvent(3, true);

        spec.Tunnel_BroadcastButtons2_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(3, false);
        if (this.doInfoPrintOutput) this.printOutput(3, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 331 and event "Tunnel_HeadDrainCellar1_ButtonEmptying_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge331() {
        var guard = ((spec.Tunnel_HeadDrainCellar1_ButtonEmptying_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_HeadDrainCellar1_ButtonEmptying_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(5, true);
        if (this.doInfoEvent) this.infoEvent(5, true);

        spec.Tunnel_HeadDrainCellar1_ButtonEmptying_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(5, false);
        if (this.doInfoPrintOutput) this.printOutput(5, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 332 and event "Tunnel_HeadDrainCellar1_ButtonEmptying_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge332() {
        var guard = ((spec.Tunnel_HeadDrainCellar1_ButtonEmptying_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_HeadDrainCellar1_ButtonEmptying_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(6, true);
        if (this.doInfoEvent) this.infoEvent(6, true);

        spec.Tunnel_HeadDrainCellar1_ButtonEmptying_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(6, false);
        if (this.doInfoPrintOutput) this.printOutput(6, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 333 and event "Tunnel_HeadDrainCellar1_ButtonOff_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge333() {
        var guard = ((spec.Tunnel_HeadDrainCellar1_ButtonOff_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_HeadDrainCellar1_ButtonOff_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(8, true);
        if (this.doInfoEvent) this.infoEvent(8, true);

        spec.Tunnel_HeadDrainCellar1_ButtonOff_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(8, false);
        if (this.doInfoPrintOutput) this.printOutput(8, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 334 and event "Tunnel_HeadDrainCellar1_ButtonOff_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge334() {
        var guard = ((spec.Tunnel_HeadDrainCellar1_ButtonOff_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_HeadDrainCellar1_ButtonOff_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(9, true);
        if (this.doInfoEvent) this.infoEvent(9, true);

        spec.Tunnel_HeadDrainCellar1_ButtonOff_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(9, false);
        if (this.doInfoPrintOutput) this.printOutput(9, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 335 and event "Tunnel_HeadDrainCellar1_ButtonStoring_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge335() {
        var guard = ((spec.Tunnel_HeadDrainCellar1_ButtonStoring_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_HeadDrainCellar1_ButtonStoring_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(11, true);
        if (this.doInfoEvent) this.infoEvent(11, true);

        spec.Tunnel_HeadDrainCellar1_ButtonStoring_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(11, false);
        if (this.doInfoPrintOutput) this.printOutput(11, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 336 and event "Tunnel_HeadDrainCellar1_ButtonStoring_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge336() {
        var guard = ((spec.Tunnel_HeadDrainCellar1_ButtonStoring_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_HeadDrainCellar1_ButtonStoring_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(12, true);
        if (this.doInfoEvent) this.infoEvent(12, true);

        spec.Tunnel_HeadDrainCellar1_ButtonStoring_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(12, false);
        if (this.doInfoPrintOutput) this.printOutput(12, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 337 and event "Tunnel_HeadDrainCellar1_Control_ButtonAuto_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge337() {
        var guard = ((spec.Tunnel_HeadDrainCellar1_Control_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_HeadDrainCellar1_Control_ButtonAuto_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(14, true);
        if (this.doInfoEvent) this.infoEvent(14, true);

        spec.Tunnel_HeadDrainCellar1_Control_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(14, false);
        if (this.doInfoPrintOutput) this.printOutput(14, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 338 and event "Tunnel_HeadDrainCellar1_Control_ButtonAuto_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge338() {
        var guard = ((spec.Tunnel_HeadDrainCellar1_Control_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_HeadDrainCellar1_Control_ButtonAuto_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(15, true);
        if (this.doInfoEvent) this.infoEvent(15, true);

        spec.Tunnel_HeadDrainCellar1_Control_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(15, false);
        if (this.doInfoPrintOutput) this.printOutput(15, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 339 and event "Tunnel_HeadDrainCellar1_Control_ButtonManual_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge339() {
        var guard = ((spec.Tunnel_HeadDrainCellar1_Control_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_HeadDrainCellar1_Control_ButtonManual_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(17, true);
        if (this.doInfoEvent) this.infoEvent(17, true);

        spec.Tunnel_HeadDrainCellar1_Control_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(17, false);
        if (this.doInfoPrintOutput) this.printOutput(17, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 340 and event "Tunnel_HeadDrainCellar1_Control_ButtonManual_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge340() {
        var guard = ((spec.Tunnel_HeadDrainCellar1_Control_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_HeadDrainCellar1_Control_ButtonManual_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(18, true);
        if (this.doInfoEvent) this.infoEvent(18, true);

        spec.Tunnel_HeadDrainCellar1_Control_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(18, false);
        if (this.doInfoPrintOutput) this.printOutput(18, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 341 and event "Tunnel_HeadDrainCellar1_Control_Mode.c_auto".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge341() {
        var guard = ((spec.Tunnel_HeadDrainCellar1_Control_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_HeadDrainCellar1_Control_Mode_) == (spec.specEnum._manual));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(19, true);
        if (this.doInfoEvent) this.infoEvent(19, true);

        spec.Tunnel_HeadDrainCellar1_Control_Mode_ = spec.specEnum._auto;

        if (this.doInfoEvent) this.infoEvent(19, false);
        if (this.doInfoPrintOutput) this.printOutput(19, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 342 and event "Tunnel_HeadDrainCellar1_Control_Mode.c_manual".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge342() {
        var guard = ((spec.Tunnel_HeadDrainCellar1_Control_ButtonManual_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_HeadDrainCellar1_Control_Mode_) == (spec.specEnum._auto));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(20, true);
        if (this.doInfoEvent) this.infoEvent(20, true);

        spec.Tunnel_HeadDrainCellar1_Control_Mode_ = spec.specEnum._manual;

        if (this.doInfoEvent) this.infoEvent(20, false);
        if (this.doInfoPrintOutput) this.printOutput(20, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 343 and event "Tunnel_HeadDrainCellar1_Pump1.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge343() {
        var guard = ((((spec.Tunnel_HeadDrainCellar1_Regime_) == (spec.specEnum._storing)) && ((spec.Tunnel_HeadDrainCellar1_Sensor4_) == (spec.specEnum._off))) || ((((spec.Tunnel_HeadDrainCellar1_Regime_) == (spec.specEnum._emptying)) && ((spec.Tunnel_HeadDrainCellar1_Sensor1_) == (spec.specEnum._off))) || ((spec.Tunnel_HeadDrainCellar1_Regime_) == (spec.specEnum._off)))) && ((spec.Tunnel_HeadDrainCellar1_Pump1_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(21, true);
        if (this.doInfoEvent) this.infoEvent(21, true);

        spec.Tunnel_HeadDrainCellar1_Pump1_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(21, false);
        if (this.doInfoPrintOutput) this.printOutput(21, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 344 and event "Tunnel_HeadDrainCellar1_Pump1.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge344() {
        var guard = ((((spec.Tunnel_HeadDrainCellar1_Regime_) == (spec.specEnum._storing)) && ((spec.Tunnel_HeadDrainCellar1_Sensor5_) == (spec.specEnum._on))) || (((spec.Tunnel_HeadDrainCellar1_Regime_) == (spec.specEnum._emptying)) && ((spec.Tunnel_HeadDrainCellar1_Sensor2_) == (spec.specEnum._on)))) && ((spec.Tunnel_HeadDrainCellar1_Pump1_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(22, true);
        if (this.doInfoEvent) this.infoEvent(22, true);

        spec.Tunnel_HeadDrainCellar1_Pump1_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(22, false);
        if (this.doInfoPrintOutput) this.printOutput(22, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 345 and event "Tunnel_HeadDrainCellar1_Pump2.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge345() {
        var guard = ((((spec.Tunnel_HeadDrainCellar1_Regime_) == (spec.specEnum._storing)) && ((spec.Tunnel_HeadDrainCellar1_Sensor4_) == (spec.specEnum._off))) || ((((spec.Tunnel_HeadDrainCellar1_Regime_) == (spec.specEnum._emptying)) && ((spec.Tunnel_HeadDrainCellar1_Sensor1_) == (spec.specEnum._off))) || ((spec.Tunnel_HeadDrainCellar1_Regime_) == (spec.specEnum._off)))) && ((spec.Tunnel_HeadDrainCellar1_Pump2_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(23, true);
        if (this.doInfoEvent) this.infoEvent(23, true);

        spec.Tunnel_HeadDrainCellar1_Pump2_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(23, false);
        if (this.doInfoPrintOutput) this.printOutput(23, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 346 and event "Tunnel_HeadDrainCellar1_Pump2.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge346() {
        var guard = ((((spec.Tunnel_HeadDrainCellar1_Regime_) == (spec.specEnum._storing)) && ((spec.Tunnel_HeadDrainCellar1_Sensor5_) == (spec.specEnum._on))) || (((spec.Tunnel_HeadDrainCellar1_Regime_) == (spec.specEnum._emptying)) && ((spec.Tunnel_HeadDrainCellar1_Sensor3_) == (spec.specEnum._on)))) && ((spec.Tunnel_HeadDrainCellar1_Pump2_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(24, true);
        if (this.doInfoEvent) this.infoEvent(24, true);

        spec.Tunnel_HeadDrainCellar1_Pump2_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(24, false);
        if (this.doInfoPrintOutput) this.printOutput(24, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 347 and event "Tunnel_HeadDrainCellar1_Regime.c_empty".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge347() {
        var guard = (((spec.Tunnel_RequirementsHeadDrainCellar1_control_auto_()) && (((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational)) && ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational)))) || ((spec.Tunnel_RequirementsHeadDrainCellar1_control_manual_()) && (spec.Tunnel_RequirementsHeadDrainCellar1_button_empty_()))) && (((spec.Tunnel_HeadDrainCellar1_Regime_) == (spec.specEnum._storing)) || ((spec.Tunnel_HeadDrainCellar1_Regime_) == (spec.specEnum._off)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(25, true);
        if (this.doInfoEvent) this.infoEvent(25, true);

        if ((spec.Tunnel_HeadDrainCellar1_Regime_) == (spec.specEnum._storing)) {
            spec.Tunnel_HeadDrainCellar1_Regime_ = spec.specEnum._emptying;
        } else if ((spec.Tunnel_HeadDrainCellar1_Regime_) == (spec.specEnum._off)) {
            spec.Tunnel_HeadDrainCellar1_Regime_ = spec.specEnum._emptying;
        }

        if (this.doInfoEvent) this.infoEvent(25, false);
        if (this.doInfoPrintOutput) this.printOutput(25, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 348 and event "Tunnel_HeadDrainCellar1_Regime.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge348() {
        var guard = (spec.Tunnel_RequirementsHeadDrainCellar1_control_manual_()) && ((spec.Tunnel_RequirementsHeadDrainCellar1_button_off_()) && (((spec.Tunnel_HeadDrainCellar1_Regime_) == (spec.specEnum._emptying)) || ((spec.Tunnel_HeadDrainCellar1_Regime_) == (spec.specEnum._storing))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(26, true);
        if (this.doInfoEvent) this.infoEvent(26, true);

        if ((spec.Tunnel_HeadDrainCellar1_Regime_) == (spec.specEnum._emptying)) {
            spec.Tunnel_HeadDrainCellar1_Regime_ = spec.specEnum._off;
        } else if ((spec.Tunnel_HeadDrainCellar1_Regime_) == (spec.specEnum._storing)) {
            spec.Tunnel_HeadDrainCellar1_Regime_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(26, false);
        if (this.doInfoPrintOutput) this.printOutput(26, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 349 and event "Tunnel_HeadDrainCellar1_Regime.c_store".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge349() {
        var guard = (((spec.Tunnel_RequirementsHeadDrainCellar1_control_auto_()) && (((((((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._emergency)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._evacuation))) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery))) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._emergency))) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._evacuation))) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery)))) || ((spec.Tunnel_RequirementsHeadDrainCellar1_control_manual_()) && (spec.Tunnel_RequirementsHeadDrainCellar1_button_store_()))) && (((spec.Tunnel_HeadDrainCellar1_Regime_) == (spec.specEnum._emptying)) || ((spec.Tunnel_HeadDrainCellar1_Regime_) == (spec.specEnum._off)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(27, true);
        if (this.doInfoEvent) this.infoEvent(27, true);

        if ((spec.Tunnel_HeadDrainCellar1_Regime_) == (spec.specEnum._emptying)) {
            spec.Tunnel_HeadDrainCellar1_Regime_ = spec.specEnum._storing;
        } else if ((spec.Tunnel_HeadDrainCellar1_Regime_) == (spec.specEnum._off)) {
            spec.Tunnel_HeadDrainCellar1_Regime_ = spec.specEnum._storing;
        }

        if (this.doInfoEvent) this.infoEvent(27, false);
        if (this.doInfoPrintOutput) this.printOutput(27, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 350 and event "Tunnel_HeadDrainCellar2_ButtonEmptying_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge350() {
        var guard = ((spec.Tunnel_HeadDrainCellar2_ButtonEmptying_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_HeadDrainCellar2_ButtonEmptying_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(39, true);
        if (this.doInfoEvent) this.infoEvent(39, true);

        spec.Tunnel_HeadDrainCellar2_ButtonEmptying_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(39, false);
        if (this.doInfoPrintOutput) this.printOutput(39, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 351 and event "Tunnel_HeadDrainCellar2_ButtonEmptying_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge351() {
        var guard = ((spec.Tunnel_HeadDrainCellar2_ButtonEmptying_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_HeadDrainCellar2_ButtonEmptying_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(40, true);
        if (this.doInfoEvent) this.infoEvent(40, true);

        spec.Tunnel_HeadDrainCellar2_ButtonEmptying_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(40, false);
        if (this.doInfoPrintOutput) this.printOutput(40, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 352 and event "Tunnel_HeadDrainCellar2_ButtonOff_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge352() {
        var guard = ((spec.Tunnel_HeadDrainCellar2_ButtonOff_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_HeadDrainCellar2_ButtonOff_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(42, true);
        if (this.doInfoEvent) this.infoEvent(42, true);

        spec.Tunnel_HeadDrainCellar2_ButtonOff_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(42, false);
        if (this.doInfoPrintOutput) this.printOutput(42, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 353 and event "Tunnel_HeadDrainCellar2_ButtonOff_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge353() {
        var guard = ((spec.Tunnel_HeadDrainCellar2_ButtonOff_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_HeadDrainCellar2_ButtonOff_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(43, true);
        if (this.doInfoEvent) this.infoEvent(43, true);

        spec.Tunnel_HeadDrainCellar2_ButtonOff_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(43, false);
        if (this.doInfoPrintOutput) this.printOutput(43, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 354 and event "Tunnel_HeadDrainCellar2_ButtonStoring_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge354() {
        var guard = ((spec.Tunnel_HeadDrainCellar2_ButtonStoring_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_HeadDrainCellar2_ButtonStoring_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(45, true);
        if (this.doInfoEvent) this.infoEvent(45, true);

        spec.Tunnel_HeadDrainCellar2_ButtonStoring_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(45, false);
        if (this.doInfoPrintOutput) this.printOutput(45, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 355 and event "Tunnel_HeadDrainCellar2_ButtonStoring_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge355() {
        var guard = ((spec.Tunnel_HeadDrainCellar2_ButtonStoring_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_HeadDrainCellar2_ButtonStoring_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(46, true);
        if (this.doInfoEvent) this.infoEvent(46, true);

        spec.Tunnel_HeadDrainCellar2_ButtonStoring_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(46, false);
        if (this.doInfoPrintOutput) this.printOutput(46, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 356 and event "Tunnel_HeadDrainCellar2_Control_ButtonAuto_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge356() {
        var guard = ((spec.Tunnel_HeadDrainCellar2_Control_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_HeadDrainCellar2_Control_ButtonAuto_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(48, true);
        if (this.doInfoEvent) this.infoEvent(48, true);

        spec.Tunnel_HeadDrainCellar2_Control_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(48, false);
        if (this.doInfoPrintOutput) this.printOutput(48, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 357 and event "Tunnel_HeadDrainCellar2_Control_ButtonAuto_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge357() {
        var guard = ((spec.Tunnel_HeadDrainCellar2_Control_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_HeadDrainCellar2_Control_ButtonAuto_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(49, true);
        if (this.doInfoEvent) this.infoEvent(49, true);

        spec.Tunnel_HeadDrainCellar2_Control_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(49, false);
        if (this.doInfoPrintOutput) this.printOutput(49, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 358 and event "Tunnel_HeadDrainCellar2_Control_ButtonManual_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge358() {
        var guard = ((spec.Tunnel_HeadDrainCellar2_Control_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_HeadDrainCellar2_Control_ButtonManual_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(51, true);
        if (this.doInfoEvent) this.infoEvent(51, true);

        spec.Tunnel_HeadDrainCellar2_Control_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(51, false);
        if (this.doInfoPrintOutput) this.printOutput(51, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 359 and event "Tunnel_HeadDrainCellar2_Control_ButtonManual_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge359() {
        var guard = ((spec.Tunnel_HeadDrainCellar2_Control_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_HeadDrainCellar2_Control_ButtonManual_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(52, true);
        if (this.doInfoEvent) this.infoEvent(52, true);

        spec.Tunnel_HeadDrainCellar2_Control_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(52, false);
        if (this.doInfoPrintOutput) this.printOutput(52, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 360 and event "Tunnel_HeadDrainCellar2_Control_Mode.c_auto".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge360() {
        var guard = ((spec.Tunnel_HeadDrainCellar2_Control_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_HeadDrainCellar2_Control_Mode_) == (spec.specEnum._manual));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(53, true);
        if (this.doInfoEvent) this.infoEvent(53, true);

        spec.Tunnel_HeadDrainCellar2_Control_Mode_ = spec.specEnum._auto;

        if (this.doInfoEvent) this.infoEvent(53, false);
        if (this.doInfoPrintOutput) this.printOutput(53, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 361 and event "Tunnel_HeadDrainCellar2_Control_Mode.c_manual".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge361() {
        var guard = ((spec.Tunnel_HeadDrainCellar2_Control_ButtonManual_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_HeadDrainCellar2_Control_Mode_) == (spec.specEnum._auto));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(54, true);
        if (this.doInfoEvent) this.infoEvent(54, true);

        spec.Tunnel_HeadDrainCellar2_Control_Mode_ = spec.specEnum._manual;

        if (this.doInfoEvent) this.infoEvent(54, false);
        if (this.doInfoPrintOutput) this.printOutput(54, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 362 and event "Tunnel_HeadDrainCellar2_Pump1.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge362() {
        var guard = ((((spec.Tunnel_HeadDrainCellar2_Regime_) == (spec.specEnum._storing)) && ((spec.Tunnel_HeadDrainCellar2_Sensor4_) == (spec.specEnum._off))) || ((((spec.Tunnel_HeadDrainCellar2_Regime_) == (spec.specEnum._emptying)) && ((spec.Tunnel_HeadDrainCellar2_Sensor1_) == (spec.specEnum._off))) || ((spec.Tunnel_HeadDrainCellar2_Regime_) == (spec.specEnum._off)))) && ((spec.Tunnel_HeadDrainCellar2_Pump1_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(55, true);
        if (this.doInfoEvent) this.infoEvent(55, true);

        spec.Tunnel_HeadDrainCellar2_Pump1_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(55, false);
        if (this.doInfoPrintOutput) this.printOutput(55, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 363 and event "Tunnel_HeadDrainCellar2_Pump1.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge363() {
        var guard = ((((spec.Tunnel_HeadDrainCellar2_Regime_) == (spec.specEnum._storing)) && ((spec.Tunnel_HeadDrainCellar2_Sensor5_) == (spec.specEnum._on))) || (((spec.Tunnel_HeadDrainCellar2_Regime_) == (spec.specEnum._emptying)) && ((spec.Tunnel_HeadDrainCellar2_Sensor2_) == (spec.specEnum._on)))) && ((spec.Tunnel_HeadDrainCellar2_Pump1_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(56, true);
        if (this.doInfoEvent) this.infoEvent(56, true);

        spec.Tunnel_HeadDrainCellar2_Pump1_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(56, false);
        if (this.doInfoPrintOutput) this.printOutput(56, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 364 and event "Tunnel_HeadDrainCellar2_Pump2.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge364() {
        var guard = ((((spec.Tunnel_HeadDrainCellar2_Regime_) == (spec.specEnum._storing)) && ((spec.Tunnel_HeadDrainCellar2_Sensor4_) == (spec.specEnum._off))) || ((((spec.Tunnel_HeadDrainCellar2_Regime_) == (spec.specEnum._emptying)) && ((spec.Tunnel_HeadDrainCellar2_Sensor1_) == (spec.specEnum._off))) || ((spec.Tunnel_HeadDrainCellar2_Regime_) == (spec.specEnum._off)))) && ((spec.Tunnel_HeadDrainCellar2_Pump2_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(57, true);
        if (this.doInfoEvent) this.infoEvent(57, true);

        spec.Tunnel_HeadDrainCellar2_Pump2_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(57, false);
        if (this.doInfoPrintOutput) this.printOutput(57, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 365 and event "Tunnel_HeadDrainCellar2_Pump2.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge365() {
        var guard = ((((spec.Tunnel_HeadDrainCellar2_Regime_) == (spec.specEnum._storing)) && ((spec.Tunnel_HeadDrainCellar2_Sensor5_) == (spec.specEnum._on))) || (((spec.Tunnel_HeadDrainCellar2_Regime_) == (spec.specEnum._emptying)) && ((spec.Tunnel_HeadDrainCellar2_Sensor3_) == (spec.specEnum._on)))) && ((spec.Tunnel_HeadDrainCellar2_Pump2_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(58, true);
        if (this.doInfoEvent) this.infoEvent(58, true);

        spec.Tunnel_HeadDrainCellar2_Pump2_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(58, false);
        if (this.doInfoPrintOutput) this.printOutput(58, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 366 and event "Tunnel_HeadDrainCellar2_Regime.c_empty".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge366() {
        var guard = (((spec.Tunnel_RequirementsHeadDrainCellar2_control_auto_()) && (((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational)) && ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational)))) || ((spec.Tunnel_RequirementsHeadDrainCellar2_control_manual_()) && (spec.Tunnel_RequirementsHeadDrainCellar2_button_empty_()))) && (((spec.Tunnel_HeadDrainCellar2_Regime_) == (spec.specEnum._storing)) || ((spec.Tunnel_HeadDrainCellar2_Regime_) == (spec.specEnum._off)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(59, true);
        if (this.doInfoEvent) this.infoEvent(59, true);

        if ((spec.Tunnel_HeadDrainCellar2_Regime_) == (spec.specEnum._storing)) {
            spec.Tunnel_HeadDrainCellar2_Regime_ = spec.specEnum._emptying;
        } else if ((spec.Tunnel_HeadDrainCellar2_Regime_) == (spec.specEnum._off)) {
            spec.Tunnel_HeadDrainCellar2_Regime_ = spec.specEnum._emptying;
        }

        if (this.doInfoEvent) this.infoEvent(59, false);
        if (this.doInfoPrintOutput) this.printOutput(59, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 367 and event "Tunnel_HeadDrainCellar2_Regime.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge367() {
        var guard = (spec.Tunnel_RequirementsHeadDrainCellar2_control_manual_()) && ((spec.Tunnel_RequirementsHeadDrainCellar2_button_off_()) && (((spec.Tunnel_HeadDrainCellar2_Regime_) == (spec.specEnum._emptying)) || ((spec.Tunnel_HeadDrainCellar2_Regime_) == (spec.specEnum._storing))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(60, true);
        if (this.doInfoEvent) this.infoEvent(60, true);

        if ((spec.Tunnel_HeadDrainCellar2_Regime_) == (spec.specEnum._emptying)) {
            spec.Tunnel_HeadDrainCellar2_Regime_ = spec.specEnum._off;
        } else if ((spec.Tunnel_HeadDrainCellar2_Regime_) == (spec.specEnum._storing)) {
            spec.Tunnel_HeadDrainCellar2_Regime_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(60, false);
        if (this.doInfoPrintOutput) this.printOutput(60, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 368 and event "Tunnel_HeadDrainCellar2_Regime.c_store".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge368() {
        var guard = (((spec.Tunnel_RequirementsHeadDrainCellar2_control_auto_()) && (((((((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._emergency)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._evacuation))) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery))) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._emergency))) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._evacuation))) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery)))) || ((spec.Tunnel_RequirementsHeadDrainCellar2_control_manual_()) && (spec.Tunnel_RequirementsHeadDrainCellar2_button_store_()))) && (((spec.Tunnel_HeadDrainCellar2_Regime_) == (spec.specEnum._emptying)) || ((spec.Tunnel_HeadDrainCellar2_Regime_) == (spec.specEnum._off)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(61, true);
        if (this.doInfoEvent) this.infoEvent(61, true);

        if ((spec.Tunnel_HeadDrainCellar2_Regime_) == (spec.specEnum._emptying)) {
            spec.Tunnel_HeadDrainCellar2_Regime_ = spec.specEnum._storing;
        } else if ((spec.Tunnel_HeadDrainCellar2_Regime_) == (spec.specEnum._off)) {
            spec.Tunnel_HeadDrainCellar2_Regime_ = spec.specEnum._storing;
        }

        if (this.doInfoEvent) this.infoEvent(61, false);
        if (this.doInfoPrintOutput) this.printOutput(61, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 369 and event "Tunnel_MiddleDrainCellar_ButtonEmptying_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge369() {
        var guard = ((spec.Tunnel_MiddleDrainCellar_ButtonEmptying_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleDrainCellar_ButtonEmptying_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(73, true);
        if (this.doInfoEvent) this.infoEvent(73, true);

        spec.Tunnel_MiddleDrainCellar_ButtonEmptying_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(73, false);
        if (this.doInfoPrintOutput) this.printOutput(73, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 370 and event "Tunnel_MiddleDrainCellar_ButtonEmptying_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge370() {
        var guard = ((spec.Tunnel_MiddleDrainCellar_ButtonEmptying_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleDrainCellar_ButtonEmptying_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(74, true);
        if (this.doInfoEvent) this.infoEvent(74, true);

        spec.Tunnel_MiddleDrainCellar_ButtonEmptying_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(74, false);
        if (this.doInfoPrintOutput) this.printOutput(74, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 371 and event "Tunnel_MiddleDrainCellar_ButtonOff_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge371() {
        var guard = ((spec.Tunnel_MiddleDrainCellar_ButtonOff_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleDrainCellar_ButtonOff_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(76, true);
        if (this.doInfoEvent) this.infoEvent(76, true);

        spec.Tunnel_MiddleDrainCellar_ButtonOff_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(76, false);
        if (this.doInfoPrintOutput) this.printOutput(76, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 372 and event "Tunnel_MiddleDrainCellar_ButtonOff_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge372() {
        var guard = ((spec.Tunnel_MiddleDrainCellar_ButtonOff_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleDrainCellar_ButtonOff_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(77, true);
        if (this.doInfoEvent) this.infoEvent(77, true);

        spec.Tunnel_MiddleDrainCellar_ButtonOff_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(77, false);
        if (this.doInfoPrintOutput) this.printOutput(77, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 373 and event "Tunnel_MiddleDrainCellar_ButtonStoring_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge373() {
        var guard = ((spec.Tunnel_MiddleDrainCellar_ButtonStoring_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleDrainCellar_ButtonStoring_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(79, true);
        if (this.doInfoEvent) this.infoEvent(79, true);

        spec.Tunnel_MiddleDrainCellar_ButtonStoring_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(79, false);
        if (this.doInfoPrintOutput) this.printOutput(79, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 374 and event "Tunnel_MiddleDrainCellar_ButtonStoring_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge374() {
        var guard = ((spec.Tunnel_MiddleDrainCellar_ButtonStoring_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleDrainCellar_ButtonStoring_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(80, true);
        if (this.doInfoEvent) this.infoEvent(80, true);

        spec.Tunnel_MiddleDrainCellar_ButtonStoring_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(80, false);
        if (this.doInfoPrintOutput) this.printOutput(80, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 375 and event "Tunnel_MiddleDrainCellar_Control_ButtonAuto_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge375() {
        var guard = ((spec.Tunnel_MiddleDrainCellar_Control_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleDrainCellar_Control_ButtonAuto_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(82, true);
        if (this.doInfoEvent) this.infoEvent(82, true);

        spec.Tunnel_MiddleDrainCellar_Control_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(82, false);
        if (this.doInfoPrintOutput) this.printOutput(82, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 376 and event "Tunnel_MiddleDrainCellar_Control_ButtonAuto_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge376() {
        var guard = ((spec.Tunnel_MiddleDrainCellar_Control_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleDrainCellar_Control_ButtonAuto_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(83, true);
        if (this.doInfoEvent) this.infoEvent(83, true);

        spec.Tunnel_MiddleDrainCellar_Control_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(83, false);
        if (this.doInfoPrintOutput) this.printOutput(83, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 377 and event "Tunnel_MiddleDrainCellar_Control_ButtonManual_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge377() {
        var guard = ((spec.Tunnel_MiddleDrainCellar_Control_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleDrainCellar_Control_ButtonManual_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(85, true);
        if (this.doInfoEvent) this.infoEvent(85, true);

        spec.Tunnel_MiddleDrainCellar_Control_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(85, false);
        if (this.doInfoPrintOutput) this.printOutput(85, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 378 and event "Tunnel_MiddleDrainCellar_Control_ButtonManual_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge378() {
        var guard = ((spec.Tunnel_MiddleDrainCellar_Control_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleDrainCellar_Control_ButtonManual_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(86, true);
        if (this.doInfoEvent) this.infoEvent(86, true);

        spec.Tunnel_MiddleDrainCellar_Control_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(86, false);
        if (this.doInfoPrintOutput) this.printOutput(86, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 379 and event "Tunnel_MiddleDrainCellar_Control_Mode.c_auto".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge379() {
        var guard = ((spec.Tunnel_MiddleDrainCellar_Control_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_MiddleDrainCellar_Control_Mode_) == (spec.specEnum._manual));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(87, true);
        if (this.doInfoEvent) this.infoEvent(87, true);

        spec.Tunnel_MiddleDrainCellar_Control_Mode_ = spec.specEnum._auto;

        if (this.doInfoEvent) this.infoEvent(87, false);
        if (this.doInfoPrintOutput) this.printOutput(87, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 380 and event "Tunnel_MiddleDrainCellar_Control_Mode.c_manual".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge380() {
        var guard = ((spec.Tunnel_MiddleDrainCellar_Control_ButtonManual_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_MiddleDrainCellar_Control_Mode_) == (spec.specEnum._auto));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(88, true);
        if (this.doInfoEvent) this.infoEvent(88, true);

        spec.Tunnel_MiddleDrainCellar_Control_Mode_ = spec.specEnum._manual;

        if (this.doInfoEvent) this.infoEvent(88, false);
        if (this.doInfoPrintOutput) this.printOutput(88, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 381 and event "Tunnel_MiddleDrainCellar_Pump1.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge381() {
        var guard = ((((spec.Tunnel_MiddleDrainCellar_Regime_) == (spec.specEnum._storing)) && ((spec.Tunnel_MiddleDrainCellar_Sensor4_) == (spec.specEnum._off))) || ((((spec.Tunnel_MiddleDrainCellar_Regime_) == (spec.specEnum._emptying)) && ((spec.Tunnel_MiddleDrainCellar_Sensor1_) == (spec.specEnum._off))) || ((spec.Tunnel_MiddleDrainCellar_Regime_) == (spec.specEnum._off)))) && ((spec.Tunnel_MiddleDrainCellar_Pump1_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(89, true);
        if (this.doInfoEvent) this.infoEvent(89, true);

        spec.Tunnel_MiddleDrainCellar_Pump1_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(89, false);
        if (this.doInfoPrintOutput) this.printOutput(89, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 382 and event "Tunnel_MiddleDrainCellar_Pump1.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge382() {
        var guard = ((((spec.Tunnel_MiddleDrainCellar_Regime_) == (spec.specEnum._storing)) && ((spec.Tunnel_MiddleDrainCellar_Sensor5_) == (spec.specEnum._on))) || (((spec.Tunnel_MiddleDrainCellar_Regime_) == (spec.specEnum._emptying)) && ((spec.Tunnel_MiddleDrainCellar_Sensor2_) == (spec.specEnum._on)))) && ((spec.Tunnel_MiddleDrainCellar_Pump1_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(90, true);
        if (this.doInfoEvent) this.infoEvent(90, true);

        spec.Tunnel_MiddleDrainCellar_Pump1_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(90, false);
        if (this.doInfoPrintOutput) this.printOutput(90, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 383 and event "Tunnel_MiddleDrainCellar_Pump2.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge383() {
        var guard = ((((spec.Tunnel_MiddleDrainCellar_Regime_) == (spec.specEnum._storing)) && ((spec.Tunnel_MiddleDrainCellar_Sensor4_) == (spec.specEnum._off))) || ((((spec.Tunnel_MiddleDrainCellar_Regime_) == (spec.specEnum._emptying)) && ((spec.Tunnel_MiddleDrainCellar_Sensor1_) == (spec.specEnum._off))) || ((spec.Tunnel_MiddleDrainCellar_Regime_) == (spec.specEnum._off)))) && ((spec.Tunnel_MiddleDrainCellar_Pump2_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(91, true);
        if (this.doInfoEvent) this.infoEvent(91, true);

        spec.Tunnel_MiddleDrainCellar_Pump2_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(91, false);
        if (this.doInfoPrintOutput) this.printOutput(91, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 384 and event "Tunnel_MiddleDrainCellar_Pump2.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge384() {
        var guard = ((((spec.Tunnel_MiddleDrainCellar_Regime_) == (spec.specEnum._storing)) && ((spec.Tunnel_MiddleDrainCellar_Sensor5_) == (spec.specEnum._on))) || (((spec.Tunnel_MiddleDrainCellar_Regime_) == (spec.specEnum._emptying)) && ((spec.Tunnel_MiddleDrainCellar_Sensor3_) == (spec.specEnum._on)))) && ((spec.Tunnel_MiddleDrainCellar_Pump2_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(92, true);
        if (this.doInfoEvent) this.infoEvent(92, true);

        spec.Tunnel_MiddleDrainCellar_Pump2_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(92, false);
        if (this.doInfoPrintOutput) this.printOutput(92, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 385 and event "Tunnel_MiddleDrainCellar_PumpDirection.c_headDrainCellar1".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge385() {
        var guard = ((spec.Tunnel_HeadDrainCellar1_Sensor4_) == (spec.specEnum._off)) && ((spec.Tunnel_MiddleDrainCellar_PumpDirection_) == (spec.specEnum._headDrainCellar2));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(93, true);
        if (this.doInfoEvent) this.infoEvent(93, true);

        spec.Tunnel_MiddleDrainCellar_PumpDirection_ = spec.specEnum._headDrainCellar1;

        if (this.doInfoEvent) this.infoEvent(93, false);
        if (this.doInfoPrintOutput) this.printOutput(93, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 386 and event "Tunnel_MiddleDrainCellar_PumpDirection.c_headDrainCellar2".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge386() {
        var guard = ((spec.Tunnel_HeadDrainCellar1_Sensor5_) == (spec.specEnum._on)) && ((spec.Tunnel_MiddleDrainCellar_PumpDirection_) == (spec.specEnum._headDrainCellar1));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(94, true);
        if (this.doInfoEvent) this.infoEvent(94, true);

        spec.Tunnel_MiddleDrainCellar_PumpDirection_ = spec.specEnum._headDrainCellar2;

        if (this.doInfoEvent) this.infoEvent(94, false);
        if (this.doInfoPrintOutput) this.printOutput(94, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 387 and event "Tunnel_MiddleDrainCellar_Regime.c_empty".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge387() {
        var guard = (((spec.Tunnel_RequirementsMiddleDrainCellar_control_auto_()) && (((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational)) && ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational)))) || ((spec.Tunnel_RequirementsMiddleDrainCellar_control_manual_()) && (spec.Tunnel_RequirementsMiddleDrainCellar_button_empty_()))) && (((spec.Tunnel_MiddleDrainCellar_Regime_) == (spec.specEnum._storing)) || ((spec.Tunnel_MiddleDrainCellar_Regime_) == (spec.specEnum._off)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(95, true);
        if (this.doInfoEvent) this.infoEvent(95, true);

        if ((spec.Tunnel_MiddleDrainCellar_Regime_) == (spec.specEnum._storing)) {
            spec.Tunnel_MiddleDrainCellar_Regime_ = spec.specEnum._emptying;
        } else if ((spec.Tunnel_MiddleDrainCellar_Regime_) == (spec.specEnum._off)) {
            spec.Tunnel_MiddleDrainCellar_Regime_ = spec.specEnum._emptying;
        }

        if (this.doInfoEvent) this.infoEvent(95, false);
        if (this.doInfoPrintOutput) this.printOutput(95, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 388 and event "Tunnel_MiddleDrainCellar_Regime.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge388() {
        var guard = (spec.Tunnel_RequirementsMiddleDrainCellar_control_manual_()) && ((spec.Tunnel_RequirementsMiddleDrainCellar_button_off_()) && (((spec.Tunnel_MiddleDrainCellar_Regime_) == (spec.specEnum._emptying)) || ((spec.Tunnel_MiddleDrainCellar_Regime_) == (spec.specEnum._storing))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(96, true);
        if (this.doInfoEvent) this.infoEvent(96, true);

        if ((spec.Tunnel_MiddleDrainCellar_Regime_) == (spec.specEnum._emptying)) {
            spec.Tunnel_MiddleDrainCellar_Regime_ = spec.specEnum._off;
        } else if ((spec.Tunnel_MiddleDrainCellar_Regime_) == (spec.specEnum._storing)) {
            spec.Tunnel_MiddleDrainCellar_Regime_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(96, false);
        if (this.doInfoPrintOutput) this.printOutput(96, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 389 and event "Tunnel_MiddleDrainCellar_Regime.c_store".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge389() {
        var guard = (((spec.Tunnel_RequirementsMiddleDrainCellar_control_auto_()) && (((((((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._emergency)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._evacuation))) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery))) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._emergency))) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._evacuation))) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery)))) || ((spec.Tunnel_RequirementsMiddleDrainCellar_control_manual_()) && (spec.Tunnel_RequirementsMiddleDrainCellar_button_store_()))) && (((spec.Tunnel_MiddleDrainCellar_Regime_) == (spec.specEnum._emptying)) || ((spec.Tunnel_MiddleDrainCellar_Regime_) == (spec.specEnum._off)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(97, true);
        if (this.doInfoEvent) this.infoEvent(97, true);

        if ((spec.Tunnel_MiddleDrainCellar_Regime_) == (spec.specEnum._emptying)) {
            spec.Tunnel_MiddleDrainCellar_Regime_ = spec.specEnum._storing;
        } else if ((spec.Tunnel_MiddleDrainCellar_Regime_) == (spec.specEnum._off)) {
            spec.Tunnel_MiddleDrainCellar_Regime_ = spec.specEnum._storing;
        }

        if (this.doInfoEvent) this.infoEvent(97, false);
        if (this.doInfoPrintOutput) this.printOutput(97, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 390 and event "Tunnel_MiddleTunnelChannel_Broadcast.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge390() {
        var guard = ((spec.Tunnel_Traffictube1_ModeTraffictube_) != (spec.specEnum._evacuation)) && (((spec.Tunnel_Traffictube2_ModeTraffictube_) != (spec.specEnum._evacuation)) && (((spec.Tunnel_MiddleTunnelChannel_Broadcast_) == (spec.specEnum._on)) || (((spec.Tunnel_MiddleTunnelChannel_Broadcast_) == (spec.specEnum._suppressed)) || ((spec.Tunnel_MiddleTunnelChannel_Broadcast_) == (spec.specEnum._suppressedManual)))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(108, true);
        if (this.doInfoEvent) this.infoEvent(108, true);

        if ((spec.Tunnel_MiddleTunnelChannel_Broadcast_) == (spec.specEnum._on)) {
            spec.Tunnel_MiddleTunnelChannel_Broadcast_ = spec.specEnum._off;
        } else if ((spec.Tunnel_MiddleTunnelChannel_Broadcast_) == (spec.specEnum._suppressed)) {
            spec.Tunnel_MiddleTunnelChannel_Broadcast_ = spec.specEnum._off;
        } else if ((spec.Tunnel_MiddleTunnelChannel_Broadcast_) == (spec.specEnum._suppressedManual)) {
            spec.Tunnel_MiddleTunnelChannel_Broadcast_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(108, false);
        if (this.doInfoPrintOutput) this.printOutput(108, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 391 and event "Tunnel_MiddleTunnelChannel_Broadcast.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge391() {
        var guard = ((((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._evacuation)) && ((spec.Tunnel_Traffictube1_SwitchTimerAudio_) == (spec.specEnum._on1))) || (((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._evacuation)) && ((spec.Tunnel_Traffictube2_SwitchTimerAudio_) == (spec.specEnum._on1)))) && (((spec.Tunnel_MiddleTunnelChannel_Broadcast_) == (spec.specEnum._off)) || ((spec.Tunnel_MiddleTunnelChannel_Broadcast_) == (spec.specEnum._suppressed)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(109, true);
        if (this.doInfoEvent) this.infoEvent(109, true);

        if ((spec.Tunnel_MiddleTunnelChannel_Broadcast_) == (spec.specEnum._off)) {
            spec.Tunnel_MiddleTunnelChannel_Broadcast_ = spec.specEnum._on;
        } else if ((spec.Tunnel_MiddleTunnelChannel_Broadcast_) == (spec.specEnum._suppressed)) {
            spec.Tunnel_MiddleTunnelChannel_Broadcast_ = spec.specEnum._on;
        }

        if (this.doInfoEvent) this.infoEvent(109, false);
        if (this.doInfoPrintOutput) this.printOutput(109, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 392 and event "Tunnel_MiddleTunnelChannel_Broadcast.c_onManual".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge392() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ButtonStartMessage_Observer_) == (spec.specEnum._pressed)) && (((spec.Tunnel_MiddleTunnelChannel_Broadcast_) == (spec.specEnum._off)) || ((spec.Tunnel_MiddleTunnelChannel_Broadcast_) == (spec.specEnum._suppressedManual)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(110, true);
        if (this.doInfoEvent) this.infoEvent(110, true);

        if ((spec.Tunnel_MiddleTunnelChannel_Broadcast_) == (spec.specEnum._off)) {
            spec.Tunnel_MiddleTunnelChannel_Broadcast_ = spec.specEnum._on;
        } else if ((spec.Tunnel_MiddleTunnelChannel_Broadcast_) == (spec.specEnum._suppressedManual)) {
            spec.Tunnel_MiddleTunnelChannel_Broadcast_ = spec.specEnum._on;
        }

        if (this.doInfoEvent) this.infoEvent(110, false);
        if (this.doInfoPrintOutput) this.printOutput(110, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 393 and event "Tunnel_MiddleTunnelChannel_Broadcast.c_suppressed".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge393() {
        var guard = (((spec.Tunnel_Traffictube1_SwitchTimerAudio_) == (spec.specEnum._on2)) || ((spec.Tunnel_Traffictube2_SwitchTimerAudio_) == (spec.specEnum._on2))) && ((spec.Tunnel_MiddleTunnelChannel_Broadcast_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(111, true);
        if (this.doInfoEvent) this.infoEvent(111, true);

        spec.Tunnel_MiddleTunnelChannel_Broadcast_ = spec.specEnum._suppressed;

        if (this.doInfoEvent) this.infoEvent(111, false);
        if (this.doInfoPrintOutput) this.printOutput(111, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 394 and event "Tunnel_MiddleTunnelChannel_Broadcast.c_suppressedManual".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge394() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ButtonStopMessage_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_MiddleTunnelChannel_Broadcast_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(112, true);
        if (this.doInfoEvent) this.infoEvent(112, true);

        spec.Tunnel_MiddleTunnelChannel_Broadcast_ = spec.specEnum._suppressedManual;

        if (this.doInfoEvent) this.infoEvent(112, false);
        if (this.doInfoPrintOutput) this.printOutput(112, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 395 and event "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge395() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(114, true);
        if (this.doInfoEvent) this.infoEvent(114, true);

        spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(114, false);
        if (this.doInfoPrintOutput) this.printOutput(114, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 396 and event "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge396() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(115, true);
        if (this.doInfoEvent) this.infoEvent(115, true);

        spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(115, false);
        if (this.doInfoPrintOutput) this.printOutput(115, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 397 and event "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge397() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(117, true);
        if (this.doInfoEvent) this.infoEvent(117, true);

        spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(117, false);
        if (this.doInfoPrintOutput) this.printOutput(117, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 398 and event "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge398() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(118, true);
        if (this.doInfoEvent) this.infoEvent(118, true);

        spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(118, false);
        if (this.doInfoPrintOutput) this.printOutput(118, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 399 and event "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge399() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(120, true);
        if (this.doInfoEvent) this.infoEvent(120, true);

        spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(120, false);
        if (this.doInfoPrintOutput) this.printOutput(120, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 400 and event "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge400() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(121, true);
        if (this.doInfoEvent) this.infoEvent(121, true);

        spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(121, false);
        if (this.doInfoPrintOutput) this.printOutput(121, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 401 and event "Tunnel_MiddleTunnelChannel_ButtonLightingOff_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge401() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ButtonLightingOff_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ButtonLightingOff_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(123, true);
        if (this.doInfoEvent) this.infoEvent(123, true);

        spec.Tunnel_MiddleTunnelChannel_ButtonLightingOff_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(123, false);
        if (this.doInfoPrintOutput) this.printOutput(123, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 402 and event "Tunnel_MiddleTunnelChannel_ButtonLightingOff_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge402() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ButtonLightingOff_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ButtonLightingOff_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(124, true);
        if (this.doInfoEvent) this.infoEvent(124, true);

        spec.Tunnel_MiddleTunnelChannel_ButtonLightingOff_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(124, false);
        if (this.doInfoPrintOutput) this.printOutput(124, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 403 and event "Tunnel_MiddleTunnelChannel_ButtonLightingOn_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge403() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ButtonLightingOn_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ButtonLightingOn_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(126, true);
        if (this.doInfoEvent) this.infoEvent(126, true);

        spec.Tunnel_MiddleTunnelChannel_ButtonLightingOn_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(126, false);
        if (this.doInfoPrintOutput) this.printOutput(126, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 404 and event "Tunnel_MiddleTunnelChannel_ButtonLightingOn_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge404() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ButtonLightingOn_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ButtonLightingOn_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(127, true);
        if (this.doInfoEvent) this.infoEvent(127, true);

        spec.Tunnel_MiddleTunnelChannel_ButtonLightingOn_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(127, false);
        if (this.doInfoPrintOutput) this.printOutput(127, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 405 and event "Tunnel_MiddleTunnelChannel_ButtonPressureLeft_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge405() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ButtonPressureLeft_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ButtonPressureLeft_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(129, true);
        if (this.doInfoEvent) this.infoEvent(129, true);

        spec.Tunnel_MiddleTunnelChannel_ButtonPressureLeft_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(129, false);
        if (this.doInfoPrintOutput) this.printOutput(129, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 406 and event "Tunnel_MiddleTunnelChannel_ButtonPressureLeft_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge406() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ButtonPressureLeft_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ButtonPressureLeft_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(130, true);
        if (this.doInfoEvent) this.infoEvent(130, true);

        spec.Tunnel_MiddleTunnelChannel_ButtonPressureLeft_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(130, false);
        if (this.doInfoPrintOutput) this.printOutput(130, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 407 and event "Tunnel_MiddleTunnelChannel_ButtonPressureOff_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge407() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ButtonPressureOff_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ButtonPressureOff_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(132, true);
        if (this.doInfoEvent) this.infoEvent(132, true);

        spec.Tunnel_MiddleTunnelChannel_ButtonPressureOff_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(132, false);
        if (this.doInfoPrintOutput) this.printOutput(132, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 408 and event "Tunnel_MiddleTunnelChannel_ButtonPressureOff_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge408() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ButtonPressureOff_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ButtonPressureOff_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(133, true);
        if (this.doInfoEvent) this.infoEvent(133, true);

        spec.Tunnel_MiddleTunnelChannel_ButtonPressureOff_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(133, false);
        if (this.doInfoPrintOutput) this.printOutput(133, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 409 and event "Tunnel_MiddleTunnelChannel_ButtonPressureRight_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge409() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ButtonPressureRight_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ButtonPressureRight_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(135, true);
        if (this.doInfoEvent) this.infoEvent(135, true);

        spec.Tunnel_MiddleTunnelChannel_ButtonPressureRight_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(135, false);
        if (this.doInfoPrintOutput) this.printOutput(135, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 410 and event "Tunnel_MiddleTunnelChannel_ButtonPressureRight_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge410() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ButtonPressureRight_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ButtonPressureRight_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(136, true);
        if (this.doInfoEvent) this.infoEvent(136, true);

        spec.Tunnel_MiddleTunnelChannel_ButtonPressureRight_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(136, false);
        if (this.doInfoPrintOutput) this.printOutput(136, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 411 and event "Tunnel_MiddleTunnelChannel_ButtonStartMessage_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge411() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ButtonStartMessage_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ButtonStartMessage_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(138, true);
        if (this.doInfoEvent) this.infoEvent(138, true);

        spec.Tunnel_MiddleTunnelChannel_ButtonStartMessage_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(138, false);
        if (this.doInfoPrintOutput) this.printOutput(138, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 412 and event "Tunnel_MiddleTunnelChannel_ButtonStartMessage_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge412() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ButtonStartMessage_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ButtonStartMessage_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(139, true);
        if (this.doInfoEvent) this.infoEvent(139, true);

        spec.Tunnel_MiddleTunnelChannel_ButtonStartMessage_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(139, false);
        if (this.doInfoPrintOutput) this.printOutput(139, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 413 and event "Tunnel_MiddleTunnelChannel_ButtonStopMessage_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge413() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ButtonStopMessage_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ButtonStopMessage_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(141, true);
        if (this.doInfoEvent) this.infoEvent(141, true);

        spec.Tunnel_MiddleTunnelChannel_ButtonStopMessage_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(141, false);
        if (this.doInfoPrintOutput) this.printOutput(141, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 414 and event "Tunnel_MiddleTunnelChannel_ButtonStopMessage_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge414() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ButtonStopMessage_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ButtonStopMessage_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(142, true);
        if (this.doInfoEvent) this.infoEvent(142, true);

        spec.Tunnel_MiddleTunnelChannel_ButtonStopMessage_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(142, false);
        if (this.doInfoPrintOutput) this.printOutput(142, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 415 and event "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge415() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(144, true);
        if (this.doInfoEvent) this.infoEvent(144, true);

        spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(144, false);
        if (this.doInfoPrintOutput) this.printOutput(144, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 416 and event "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge416() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(145, true);
        if (this.doInfoEvent) this.infoEvent(145, true);

        spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(145, false);
        if (this.doInfoPrintOutput) this.printOutput(145, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 417 and event "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge417() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(147, true);
        if (this.doInfoEvent) this.infoEvent(147, true);

        spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(147, false);
        if (this.doInfoPrintOutput) this.printOutput(147, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 418 and event "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge418() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(148, true);
        if (this.doInfoEvent) this.infoEvent(148, true);

        spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(148, false);
        if (this.doInfoPrintOutput) this.printOutput(148, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 419 and event "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_Mode.c_auto".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge419() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_Mode_) == (spec.specEnum._manual));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(149, true);
        if (this.doInfoEvent) this.infoEvent(149, true);

        spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_Mode_ = spec.specEnum._auto;

        if (this.doInfoEvent) this.infoEvent(149, false);
        if (this.doInfoPrintOutput) this.printOutput(149, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 420 and event "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_Mode.c_manual".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge420() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_Mode_) == (spec.specEnum._auto));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(150, true);
        if (this.doInfoEvent) this.infoEvent(150, true);

        spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_Mode_ = spec.specEnum._manual;

        if (this.doInfoEvent) this.infoEvent(150, false);
        if (this.doInfoPrintOutput) this.printOutput(150, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 421 and event "Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge421() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(152, true);
        if (this.doInfoEvent) this.infoEvent(152, true);

        spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(152, false);
        if (this.doInfoPrintOutput) this.printOutput(152, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 422 and event "Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge422() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(153, true);
        if (this.doInfoEvent) this.infoEvent(153, true);

        spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(153, false);
        if (this.doInfoPrintOutput) this.printOutput(153, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 423 and event "Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge423() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(155, true);
        if (this.doInfoEvent) this.infoEvent(155, true);

        spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(155, false);
        if (this.doInfoPrintOutput) this.printOutput(155, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 424 and event "Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge424() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(156, true);
        if (this.doInfoEvent) this.infoEvent(156, true);

        spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(156, false);
        if (this.doInfoPrintOutput) this.printOutput(156, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 425 and event "Tunnel_MiddleTunnelChannel_ControlLighting_Mode.c_auto".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge425() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_MiddleTunnelChannel_ControlLighting_Mode_) == (spec.specEnum._manual));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(157, true);
        if (this.doInfoEvent) this.infoEvent(157, true);

        spec.Tunnel_MiddleTunnelChannel_ControlLighting_Mode_ = spec.specEnum._auto;

        if (this.doInfoEvent) this.infoEvent(157, false);
        if (this.doInfoPrintOutput) this.printOutput(157, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 426 and event "Tunnel_MiddleTunnelChannel_ControlLighting_Mode.c_manual".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge426() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_MiddleTunnelChannel_ControlLighting_Mode_) == (spec.specEnum._auto));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(158, true);
        if (this.doInfoEvent) this.infoEvent(158, true);

        spec.Tunnel_MiddleTunnelChannel_ControlLighting_Mode_ = spec.specEnum._manual;

        if (this.doInfoEvent) this.infoEvent(158, false);
        if (this.doInfoPrintOutput) this.printOutput(158, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 427 and event "Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge427() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(160, true);
        if (this.doInfoEvent) this.infoEvent(160, true);

        spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(160, false);
        if (this.doInfoPrintOutput) this.printOutput(160, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 428 and event "Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge428() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(161, true);
        if (this.doInfoEvent) this.infoEvent(161, true);

        spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(161, false);
        if (this.doInfoPrintOutput) this.printOutput(161, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 429 and event "Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge429() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(163, true);
        if (this.doInfoEvent) this.infoEvent(163, true);

        spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(163, false);
        if (this.doInfoPrintOutput) this.printOutput(163, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 430 and event "Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge430() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(164, true);
        if (this.doInfoEvent) this.infoEvent(164, true);

        spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(164, false);
        if (this.doInfoPrintOutput) this.printOutput(164, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 431 and event "Tunnel_MiddleTunnelChannel_ControlPressure_Mode.c_auto".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge431() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_MiddleTunnelChannel_ControlPressure_Mode_) == (spec.specEnum._manual));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(165, true);
        if (this.doInfoEvent) this.infoEvent(165, true);

        spec.Tunnel_MiddleTunnelChannel_ControlPressure_Mode_ = spec.specEnum._auto;

        if (this.doInfoEvent) this.infoEvent(165, false);
        if (this.doInfoPrintOutput) this.printOutput(165, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 432 and event "Tunnel_MiddleTunnelChannel_ControlPressure_Mode.c_manual".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge432() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_MiddleTunnelChannel_ControlPressure_Mode_) == (spec.specEnum._auto));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(166, true);
        if (this.doInfoEvent) this.infoEvent(166, true);

        spec.Tunnel_MiddleTunnelChannel_ControlPressure_Mode_ = spec.specEnum._manual;

        if (this.doInfoEvent) this.infoEvent(166, false);
        if (this.doInfoPrintOutput) this.printOutput(166, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 433 and event "Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication.c_downward".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge433() {
        var guard = ((((spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_Mode_) == (spec.specEnum._auto)) && ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._evacuation))) || (((spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_Observer_) == (spec.specEnum._pressed)))) && (((spec.Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication_) == (spec.specEnum._off)) || ((spec.Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication_) == (spec.specEnum._upward)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(167, true);
        if (this.doInfoEvent) this.infoEvent(167, true);

        if ((spec.Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication_) == (spec.specEnum._off)) {
            spec.Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication_ = spec.specEnum._downward;
        } else if ((spec.Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication_) == (spec.specEnum._upward)) {
            spec.Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication_ = spec.specEnum._downward;
        }

        if (this.doInfoEvent) this.infoEvent(167, false);
        if (this.doInfoPrintOutput) this.printOutput(167, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 434 and event "Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge434() {
        var guard = (((((spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_Mode_) == (spec.specEnum._auto)) && ((spec.Tunnel_Traffictube1_ModeTraffictube_) != (spec.specEnum._evacuation))) && ((spec.Tunnel_Traffictube2_ModeTraffictube_) != (spec.specEnum._evacuation))) || (((spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_Observer_) == (spec.specEnum._pressed)))) && (((spec.Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication_) == (spec.specEnum._upward)) || ((spec.Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication_) == (spec.specEnum._downward)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(168, true);
        if (this.doInfoEvent) this.infoEvent(168, true);

        if ((spec.Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication_) == (spec.specEnum._upward)) {
            spec.Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication_ = spec.specEnum._off;
        } else if ((spec.Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication_) == (spec.specEnum._downward)) {
            spec.Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(168, false);
        if (this.doInfoPrintOutput) this.printOutput(168, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 435 and event "Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication.c_upward".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge435() {
        var guard = ((((spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_Mode_) == (spec.specEnum._auto)) && ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._evacuation))) || (((spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_Observer_) == (spec.specEnum._pressed)))) && (((spec.Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication_) == (spec.specEnum._off)) || ((spec.Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication_) == (spec.specEnum._downward)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(169, true);
        if (this.doInfoEvent) this.infoEvent(169, true);

        if ((spec.Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication_) == (spec.specEnum._off)) {
            spec.Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication_ = spec.specEnum._upward;
        } else if ((spec.Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication_) == (spec.specEnum._downward)) {
            spec.Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication_ = spec.specEnum._upward;
        }

        if (this.doInfoEvent) this.infoEvent(169, false);
        if (this.doInfoPrintOutput) this.printOutput(169, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 436 and event "Tunnel_MiddleTunnelChannel_Lighting.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge436() {
        var guard = ((((spec.Tunnel_MiddleTunnelChannel_ControlLighting_Mode_) == (spec.specEnum._auto)) && ((((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery))) && (((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery))))) || (((spec.Tunnel_MiddleTunnelChannel_ControlLighting_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_MiddleTunnelChannel_ButtonLightingOff_Observer_) == (spec.specEnum._pressed)))) && ((spec.Tunnel_MiddleTunnelChannel_Lighting_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(170, true);
        if (this.doInfoEvent) this.infoEvent(170, true);

        spec.Tunnel_MiddleTunnelChannel_Lighting_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(170, false);
        if (this.doInfoPrintOutput) this.printOutput(170, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 437 and event "Tunnel_MiddleTunnelChannel_Lighting.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge437() {
        var guard = ((((spec.Tunnel_MiddleTunnelChannel_ControlLighting_Mode_) == (spec.specEnum._auto)) && (((((((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._standby)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._emergency))) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._evacuation))) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._standby))) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._emergency))) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._evacuation)))) || (((spec.Tunnel_MiddleTunnelChannel_ControlLighting_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_MiddleTunnelChannel_ButtonLightingOn_Observer_) == (spec.specEnum._pressed)))) && ((spec.Tunnel_MiddleTunnelChannel_Lighting_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(171, true);
        if (this.doInfoEvent) this.infoEvent(171, true);

        spec.Tunnel_MiddleTunnelChannel_Lighting_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(171, false);
        if (this.doInfoPrintOutput) this.printOutput(171, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 438 and event "Tunnel_MiddleTunnelChannel_Pressure.c_left".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge438() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_Pressure_) == (spec.specEnum._off)) && (((((spec.Tunnel_MiddleTunnelChannel_ControlPressure_Mode_) == (spec.specEnum._auto)) && (((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._standby)) || (((spec.Tunnel_Traffictube1_ModeTraffictube_) != (spec.specEnum._operational)) && ((spec.Tunnel_Traffictube1_ModeTraffictube_) != (spec.specEnum._support))))) || (((spec.Tunnel_MiddleTunnelChannel_ControlPressure_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_MiddleTunnelChannel_ButtonPressureLeft_Observer_) == (spec.specEnum._pressed)))) && (((spec.Tunnel_MiddleTunnelChannel_Pressure_) == (spec.specEnum._off)) || ((spec.Tunnel_MiddleTunnelChannel_Pressure_) == (spec.specEnum._right))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(172, true);
        if (this.doInfoEvent) this.infoEvent(172, true);

        if ((spec.Tunnel_MiddleTunnelChannel_Pressure_) == (spec.specEnum._off)) {
            spec.Tunnel_MiddleTunnelChannel_Pressure_ = spec.specEnum._left;
        } else if ((spec.Tunnel_MiddleTunnelChannel_Pressure_) == (spec.specEnum._right)) {
            spec.Tunnel_MiddleTunnelChannel_Pressure_ = spec.specEnum._left;
        }

        if (this.doInfoEvent) this.infoEvent(172, false);
        if (this.doInfoPrintOutput) this.printOutput(172, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 439 and event "Tunnel_MiddleTunnelChannel_Pressure.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge439() {
        var guard = (((((spec.Tunnel_MiddleTunnelChannel_ControlPressure_Mode_) == (spec.specEnum._auto)) && ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational))) && ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational))) || (((spec.Tunnel_MiddleTunnelChannel_ControlPressure_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_MiddleTunnelChannel_ButtonPressureOff_Observer_) == (spec.specEnum._pressed)))) && (((spec.Tunnel_MiddleTunnelChannel_Pressure_) == (spec.specEnum._left)) || ((spec.Tunnel_MiddleTunnelChannel_Pressure_) == (spec.specEnum._right)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(173, true);
        if (this.doInfoEvent) this.infoEvent(173, true);

        if ((spec.Tunnel_MiddleTunnelChannel_Pressure_) == (spec.specEnum._left)) {
            spec.Tunnel_MiddleTunnelChannel_Pressure_ = spec.specEnum._off;
        } else if ((spec.Tunnel_MiddleTunnelChannel_Pressure_) == (spec.specEnum._right)) {
            spec.Tunnel_MiddleTunnelChannel_Pressure_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(173, false);
        if (this.doInfoPrintOutput) this.printOutput(173, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 440 and event "Tunnel_MiddleTunnelChannel_Pressure.c_right".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge440() {
        var guard = ((spec.Tunnel_MiddleTunnelChannel_Pressure_) == (spec.specEnum._off)) && (((((spec.Tunnel_MiddleTunnelChannel_ControlPressure_Mode_) == (spec.specEnum._auto)) && (((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._standby)) || (((spec.Tunnel_Traffictube2_ModeTraffictube_) != (spec.specEnum._operational)) && ((spec.Tunnel_Traffictube2_ModeTraffictube_) != (spec.specEnum._support))))) || (((spec.Tunnel_MiddleTunnelChannel_ControlPressure_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_MiddleTunnelChannel_ButtonPressureRight_Observer_) == (spec.specEnum._pressed)))) && (((spec.Tunnel_MiddleTunnelChannel_Pressure_) == (spec.specEnum._off)) || ((spec.Tunnel_MiddleTunnelChannel_Pressure_) == (spec.specEnum._left))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(174, true);
        if (this.doInfoEvent) this.infoEvent(174, true);

        if ((spec.Tunnel_MiddleTunnelChannel_Pressure_) == (spec.specEnum._off)) {
            spec.Tunnel_MiddleTunnelChannel_Pressure_ = spec.specEnum._right;
        } else if ((spec.Tunnel_MiddleTunnelChannel_Pressure_) == (spec.specEnum._left)) {
            spec.Tunnel_MiddleTunnelChannel_Pressure_ = spec.specEnum._right;
        }

        if (this.doInfoEvent) this.infoEvent(174, false);
        if (this.doInfoPrintOutput) this.printOutput(174, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 441 and event "Tunnel_Traffictube1_AccessBoombarriers.c_close".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge441() {
        var guard = ((((spec.Tunnel_Traffictube1_ControlBoombarriers_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonCloseBoombarriers_Observer_) == (spec.specEnum._pressed))) || ((spec.Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_Observer_) == (spec.specEnum._pressed))) && (((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._stopped)) || ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._opening)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(175, true);
        if (this.doInfoEvent) this.infoEvent(175, true);

        if ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._stopped)) {
            spec.Tunnel_Traffictube1_AccessBoombarriers_ = spec.specEnum._closing;
        } else if ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._opening)) {
            spec.Tunnel_Traffictube1_AccessBoombarriers_ = spec.specEnum._closing;
        }

        if (this.doInfoEvent) this.infoEvent(175, false);
        if (this.doInfoPrintOutput) this.printOutput(175, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 442 and event "Tunnel_Traffictube1_AccessBoombarriers.c_closeUnconditionally".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge442() {
        var guard = ((spec.Tunnel_Traffictube1_ControlBoombarriers_Mode_) == (spec.specEnum._manual)) && (((spec.Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_Observer_) == (spec.specEnum._pressed)) && (((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._stopped)) || ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._opening))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(176, true);
        if (this.doInfoEvent) this.infoEvent(176, true);

        if ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._stopped)) {
            spec.Tunnel_Traffictube1_AccessBoombarriers_ = spec.specEnum._closingUnconditionally;
        } else if ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._opening)) {
            spec.Tunnel_Traffictube1_AccessBoombarriers_ = spec.specEnum._closingUnconditionally;
        }

        if (this.doInfoEvent) this.infoEvent(176, false);
        if (this.doInfoPrintOutput) this.printOutput(176, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 443 and event "Tunnel_Traffictube1_AccessBoombarriers.c_open".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge443() {
        var guard = ((((spec.Tunnel_Traffictube1_ControlBoombarriers_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonOpenBoombarriers_Observer_) == (spec.specEnum._pressed))) || ((spec.Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_Observer_) == (spec.specEnum._pressed))) && (((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._stopped)) || (((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._closing)) || ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(177, true);
        if (this.doInfoEvent) this.infoEvent(177, true);

        if ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._stopped)) {
            spec.Tunnel_Traffictube1_AccessBoombarriers_ = spec.specEnum._opening;
        } else if ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._closing)) {
            spec.Tunnel_Traffictube1_AccessBoombarriers_ = spec.specEnum._opening;
        } else if ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally)) {
            spec.Tunnel_Traffictube1_AccessBoombarriers_ = spec.specEnum._opening;
        }

        if (this.doInfoEvent) this.infoEvent(177, false);
        if (this.doInfoPrintOutput) this.printOutput(177, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 444 and event "Tunnel_Traffictube1_AccessBoombarriers.c_stop".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge444() {
        var guard = ((((spec.Tunnel_Traffictube1_ControlBoombarriers_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonStopBoombarriers_Observer_) == (spec.specEnum._pressed))) || (((spec.Tunnel_Traffictube1_AccessBoombarriers_) != (spec.specEnum._closingUnconditionally)) && ((((spec.Tunnel_Traffictube1_Boombarrier1_ObstacleDetection_) == (spec.specEnum._on)) || ((spec.Tunnel_Traffictube1_Boombarrier2_ObstacleDetection_) == (spec.specEnum._on))) || ((((spec.Tunnel_Traffictube1_Boombarrier1_ActuatorDown_) == (spec.specEnum._on)) && ((spec.Tunnel_Traffictube1_Boombarrier2_ActuatorDown_) == (spec.specEnum._on))) && ((((spec.Tunnel_Traffictube1_Trafficlight1_ReleaseSignal_) == (spec.specEnum._off)) || ((spec.Tunnel_Traffictube1_Trafficlight2_ReleaseSignal_) == (spec.specEnum._off))) || ((spec.Tunnel_Traffictube1_Trafficlight3_ReleaseSignal_) == (spec.specEnum._off))))))) && (((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._opening)) || (((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._closing)) || ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(178, true);
        if (this.doInfoEvent) this.infoEvent(178, true);

        if ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._opening)) {
            spec.Tunnel_Traffictube1_AccessBoombarriers_ = spec.specEnum._stopped;
        } else if ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._closing)) {
            spec.Tunnel_Traffictube1_AccessBoombarriers_ = spec.specEnum._stopped;
        } else if ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally)) {
            spec.Tunnel_Traffictube1_AccessBoombarriers_ = spec.specEnum._stopped;
        }

        if (this.doInfoEvent) this.infoEvent(178, false);
        if (this.doInfoPrintOutput) this.printOutput(178, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 445 and event "Tunnel_Traffictube1_AccessTrafficlights.c_flash".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge445() {
        var guard = ((spec.Tunnel_Traffictube1_ControlTrafficlights_Mode_) == (spec.specEnum._manual)) && (((spec.Tunnel_Traffictube1_ButtonFlashTrafficlights_Observer_) == (spec.specEnum._pressed)) && (((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._off)) || ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._red))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(179, true);
        if (this.doInfoEvent) this.infoEvent(179, true);

        if ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._off)) {
            spec.Tunnel_Traffictube1_AccessTrafficlights_ = spec.specEnum._flash;
        } else if ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._red)) {
            spec.Tunnel_Traffictube1_AccessTrafficlights_ = spec.specEnum._flash;
        }

        if (this.doInfoEvent) this.infoEvent(179, false);
        if (this.doInfoPrintOutput) this.printOutput(179, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 446 and event "Tunnel_Traffictube1_AccessTrafficlights.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge446() {
        var guard = ((((spec.Tunnel_Traffictube1_ControlTrafficlights_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonOffTrafficlights_Observer_) == (spec.specEnum._pressed))) || (((spec.Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_Observer_) == (spec.specEnum._pressed)) || ((spec.Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_Observer_) == (spec.specEnum._pressed)))) && (((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._flash)) || ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._red)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(180, true);
        if (this.doInfoEvent) this.infoEvent(180, true);

        if ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._flash)) {
            spec.Tunnel_Traffictube1_AccessTrafficlights_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._red)) {
            spec.Tunnel_Traffictube1_AccessTrafficlights_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(180, false);
        if (this.doInfoPrintOutput) this.printOutput(180, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 447 and event "Tunnel_Traffictube1_AccessTrafficlights.c_red".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge447() {
        var guard = ((((spec.Tunnel_Traffictube1_ControlTrafficlights_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonRedTrafficlights_Observer_) == (spec.specEnum._pressed))) || (((spec.Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_Observer_) == (spec.specEnum._pressed)) || ((spec.Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_Observer_) == (spec.specEnum._pressed)))) && (((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._off)) || ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._flash)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(181, true);
        if (this.doInfoEvent) this.infoEvent(181, true);

        if ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._off)) {
            spec.Tunnel_Traffictube1_AccessTrafficlights_ = spec.specEnum._red;
        } else if ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._flash)) {
            spec.Tunnel_Traffictube1_AccessTrafficlights_ = spec.specEnum._red;
        }

        if (this.doInfoEvent) this.infoEvent(181, false);
        if (this.doInfoPrintOutput) this.printOutput(181, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 448 and event "Tunnel_Traffictube1_Boombarrier1_ActuatorDown.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge448() {
        var guard = (((spec.Tunnel_Traffictube1_Boombarrier1_SensorOpen_) == (spec.specEnum._off)) || (((spec.Tunnel_Traffictube1_Boombarrier1_ActuatorUp_) == (spec.specEnum._on)) && ((spec.Tunnel_Traffictube1_Boombarrier1_SensorClosed_) == (spec.specEnum._on)))) && ((spec.Tunnel_Traffictube1_Boombarrier1_ActuatorDown_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(182, true);
        if (this.doInfoEvent) this.infoEvent(182, true);

        spec.Tunnel_Traffictube1_Boombarrier1_ActuatorDown_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(182, false);
        if (this.doInfoPrintOutput) this.printOutput(182, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 449 and event "Tunnel_Traffictube1_Boombarrier1_ActuatorDown.c_offEmergency".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge449() {
        var guard = (((spec.Tunnel_Traffictube1_Boombarrier1_SensorClosed_) == (spec.specEnum._off)) || ((((spec.Tunnel_Traffictube1_Boombarrier1_SensorOpen_) == (spec.specEnum._off)) || ((spec.Tunnel_Traffictube1_Boombarrier1_ActuatorUp_) == (spec.specEnum._on))) && (((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._stopped)) || ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._opening))))) && ((spec.Tunnel_Traffictube1_Boombarrier1_ActuatorDown_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(183, true);
        if (this.doInfoEvent) this.infoEvent(183, true);

        spec.Tunnel_Traffictube1_Boombarrier1_ActuatorDown_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(183, false);
        if (this.doInfoPrintOutput) this.printOutput(183, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 450 and event "Tunnel_Traffictube1_Boombarrier1_ActuatorDown.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge450() {
        var guard = (((spec.Tunnel_Traffictube1_Boombarrier1_ActuatorUp_) == (spec.specEnum._off)) && ((!(spec.Tunnel_Traffictube1_Boombarrier1_closed_())) && (((spec.Tunnel_Traffictube1_Trafficlight1_ReleaseSignal_) == (spec.specEnum._on)) || ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally))))) && (((((spec.Tunnel_Traffictube1_Trafficlight2_ReleaseSignal_) == (spec.specEnum._on)) || ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally))) && (((spec.Tunnel_Traffictube1_Trafficlight3_ReleaseSignal_) == (spec.specEnum._on)) || ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally)))) && (((!(spec.Tunnel_Traffictube1_RequirementsBoombarrier1_obstacleDetectionOn_())) || ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally))) && ((((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._closing)) || ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally))) && ((spec.Tunnel_Traffictube1_Boombarrier1_ActuatorDown_) == (spec.specEnum._off)))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(184, true);
        if (this.doInfoEvent) this.infoEvent(184, true);

        spec.Tunnel_Traffictube1_Boombarrier1_ActuatorDown_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(184, false);
        if (this.doInfoPrintOutput) this.printOutput(184, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 451 and event "Tunnel_Traffictube1_Boombarrier1_ActuatorUp.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge451() {
        var guard = (((spec.Tunnel_Traffictube1_Boombarrier1_SensorClosed_) == (spec.specEnum._off)) || (((spec.Tunnel_Traffictube1_Boombarrier1_ActuatorDown_) == (spec.specEnum._on)) && ((spec.Tunnel_Traffictube1_Boombarrier1_SensorOpen_) == (spec.specEnum._on)))) && ((spec.Tunnel_Traffictube1_Boombarrier1_ActuatorUp_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(185, true);
        if (this.doInfoEvent) this.infoEvent(185, true);

        spec.Tunnel_Traffictube1_Boombarrier1_ActuatorUp_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(185, false);
        if (this.doInfoPrintOutput) this.printOutput(185, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 452 and event "Tunnel_Traffictube1_Boombarrier1_ActuatorUp.c_offEmergency".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge452() {
        var guard = (((spec.Tunnel_Traffictube1_Boombarrier1_SensorClosed_) == (spec.specEnum._off)) || ((((spec.Tunnel_Traffictube1_Boombarrier1_SensorOpen_) == (spec.specEnum._off)) || ((spec.Tunnel_Traffictube1_Boombarrier1_ActuatorDown_) == (spec.specEnum._on))) && (((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._stopped)) || ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._closing))))) && ((spec.Tunnel_Traffictube1_Boombarrier1_ActuatorUp_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(186, true);
        if (this.doInfoEvent) this.infoEvent(186, true);

        spec.Tunnel_Traffictube1_Boombarrier1_ActuatorUp_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(186, false);
        if (this.doInfoPrintOutput) this.printOutput(186, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 453 and event "Tunnel_Traffictube1_Boombarrier1_ActuatorUp.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge453() {
        var guard = ((spec.Tunnel_Traffictube1_Boombarrier1_ActuatorDown_) == (spec.specEnum._off)) && ((!(spec.Tunnel_Traffictube1_Boombarrier1_open_())) && (((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._opening)) && ((spec.Tunnel_Traffictube1_Boombarrier1_ActuatorUp_) == (spec.specEnum._off))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(187, true);
        if (this.doInfoEvent) this.infoEvent(187, true);

        spec.Tunnel_Traffictube1_Boombarrier1_ActuatorUp_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(187, false);
        if (this.doInfoPrintOutput) this.printOutput(187, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 454 and event "Tunnel_Traffictube1_Boombarrier2_ActuatorDown.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge454() {
        var guard = (((spec.Tunnel_Traffictube1_Boombarrier2_SensorOpen_) == (spec.specEnum._off)) || (((spec.Tunnel_Traffictube1_Boombarrier2_ActuatorUp_) == (spec.specEnum._on)) && ((spec.Tunnel_Traffictube1_Boombarrier2_SensorClosed_) == (spec.specEnum._on)))) && ((spec.Tunnel_Traffictube1_Boombarrier2_ActuatorDown_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(194, true);
        if (this.doInfoEvent) this.infoEvent(194, true);

        spec.Tunnel_Traffictube1_Boombarrier2_ActuatorDown_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(194, false);
        if (this.doInfoPrintOutput) this.printOutput(194, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 455 and event "Tunnel_Traffictube1_Boombarrier2_ActuatorDown.c_offEmergency".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge455() {
        var guard = (((spec.Tunnel_Traffictube1_Boombarrier2_SensorClosed_) == (spec.specEnum._off)) || ((((spec.Tunnel_Traffictube1_Boombarrier2_SensorOpen_) == (spec.specEnum._off)) || ((spec.Tunnel_Traffictube1_Boombarrier2_ActuatorUp_) == (spec.specEnum._on))) && (((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._stopped)) || ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._opening))))) && ((spec.Tunnel_Traffictube1_Boombarrier2_ActuatorDown_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(195, true);
        if (this.doInfoEvent) this.infoEvent(195, true);

        spec.Tunnel_Traffictube1_Boombarrier2_ActuatorDown_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(195, false);
        if (this.doInfoPrintOutput) this.printOutput(195, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 456 and event "Tunnel_Traffictube1_Boombarrier2_ActuatorDown.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge456() {
        var guard = (((spec.Tunnel_Traffictube1_Boombarrier2_ActuatorUp_) == (spec.specEnum._off)) && ((!(spec.Tunnel_Traffictube1_Boombarrier2_closed_())) && (((spec.Tunnel_Traffictube1_Trafficlight1_ReleaseSignal_) == (spec.specEnum._on)) || ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally))))) && (((((spec.Tunnel_Traffictube1_Trafficlight2_ReleaseSignal_) == (spec.specEnum._on)) || ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally))) && (((spec.Tunnel_Traffictube1_Trafficlight3_ReleaseSignal_) == (spec.specEnum._on)) || ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally)))) && (((!(spec.Tunnel_Traffictube1_RequirementsBoombarrier2_obstacleDetectionOn_())) || ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally))) && ((((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._closing)) || ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally))) && ((spec.Tunnel_Traffictube1_Boombarrier2_ActuatorDown_) == (spec.specEnum._off)))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(196, true);
        if (this.doInfoEvent) this.infoEvent(196, true);

        spec.Tunnel_Traffictube1_Boombarrier2_ActuatorDown_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(196, false);
        if (this.doInfoPrintOutput) this.printOutput(196, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 457 and event "Tunnel_Traffictube1_Boombarrier2_ActuatorUp.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge457() {
        var guard = (((spec.Tunnel_Traffictube1_Boombarrier2_SensorClosed_) == (spec.specEnum._off)) || (((spec.Tunnel_Traffictube1_Boombarrier2_ActuatorDown_) == (spec.specEnum._on)) && ((spec.Tunnel_Traffictube1_Boombarrier2_SensorOpen_) == (spec.specEnum._on)))) && ((spec.Tunnel_Traffictube1_Boombarrier2_ActuatorUp_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(197, true);
        if (this.doInfoEvent) this.infoEvent(197, true);

        spec.Tunnel_Traffictube1_Boombarrier2_ActuatorUp_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(197, false);
        if (this.doInfoPrintOutput) this.printOutput(197, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 458 and event "Tunnel_Traffictube1_Boombarrier2_ActuatorUp.c_offEmergency".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge458() {
        var guard = (((spec.Tunnel_Traffictube1_Boombarrier2_SensorClosed_) == (spec.specEnum._off)) || ((((spec.Tunnel_Traffictube1_Boombarrier2_SensorOpen_) == (spec.specEnum._off)) || ((spec.Tunnel_Traffictube1_Boombarrier2_ActuatorDown_) == (spec.specEnum._on))) && (((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._stopped)) || ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._closing))))) && ((spec.Tunnel_Traffictube1_Boombarrier2_ActuatorUp_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(198, true);
        if (this.doInfoEvent) this.infoEvent(198, true);

        spec.Tunnel_Traffictube1_Boombarrier2_ActuatorUp_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(198, false);
        if (this.doInfoPrintOutput) this.printOutput(198, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 459 and event "Tunnel_Traffictube1_Boombarrier2_ActuatorUp.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge459() {
        var guard = ((spec.Tunnel_Traffictube1_Boombarrier2_ActuatorDown_) == (spec.specEnum._off)) && ((!(spec.Tunnel_Traffictube1_Boombarrier2_open_())) && (((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._opening)) && ((spec.Tunnel_Traffictube1_Boombarrier2_ActuatorUp_) == (spec.specEnum._off))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(199, true);
        if (this.doInfoEvent) this.infoEvent(199, true);

        spec.Tunnel_Traffictube1_Boombarrier2_ActuatorUp_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(199, false);
        if (this.doInfoPrintOutput) this.printOutput(199, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 460 and event "Tunnel_Traffictube1_Broadcast.c_live".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge460() {
        var guard = (((spec.Tunnel_Traffictube1_EscapeDoor_Broadcast_) == (spec.specEnum._off)) || ((spec.Tunnel_Traffictube1_EscapeDoor_Broadcast_) == (spec.specEnum._suppressed))) && (((spec.Tunnel_Traffictube1_ButtonLive_Observer_) == (spec.specEnum._pressed)) && (((spec.Tunnel_Traffictube1_Broadcast_) == (spec.specEnum._message)) || ((spec.Tunnel_Traffictube1_Broadcast_) == (spec.specEnum._suppressed))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(206, true);
        if (this.doInfoEvent) this.infoEvent(206, true);

        if ((spec.Tunnel_Traffictube1_Broadcast_) == (spec.specEnum._message)) {
            spec.Tunnel_Traffictube1_Broadcast_ = spec.specEnum._live;
        } else if ((spec.Tunnel_Traffictube1_Broadcast_) == (spec.specEnum._suppressed)) {
            spec.Tunnel_Traffictube1_Broadcast_ = spec.specEnum._live;
        }

        if (this.doInfoEvent) this.infoEvent(206, false);
        if (this.doInfoPrintOutput) this.printOutput(206, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 461 and event "Tunnel_Traffictube1_Broadcast.c_message".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge461() {
        var guard = (((spec.Tunnel_Traffictube1_EscapeDoor_Broadcast_) == (spec.specEnum._off)) || ((spec.Tunnel_Traffictube1_EscapeDoor_Broadcast_) == (spec.specEnum._suppressed))) && ((((spec.Tunnel_Traffictube1_SwitchTimerAudio_) == (spec.specEnum._on1)) || ((spec.Tunnel_Traffictube1_ButtonMessage_Observer_) == (spec.specEnum._pressed))) && (((spec.Tunnel_Traffictube1_Broadcast_) == (spec.specEnum._live)) || ((spec.Tunnel_Traffictube1_Broadcast_) == (spec.specEnum._suppressed))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(207, true);
        if (this.doInfoEvent) this.infoEvent(207, true);

        if ((spec.Tunnel_Traffictube1_Broadcast_) == (spec.specEnum._live)) {
            spec.Tunnel_Traffictube1_Broadcast_ = spec.specEnum._message;
        } else if ((spec.Tunnel_Traffictube1_Broadcast_) == (spec.specEnum._suppressed)) {
            spec.Tunnel_Traffictube1_Broadcast_ = spec.specEnum._message;
        }

        if (this.doInfoEvent) this.infoEvent(207, false);
        if (this.doInfoPrintOutput) this.printOutput(207, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 462 and event "Tunnel_Traffictube1_Broadcast.c_suppressed".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge462() {
        var guard = ((spec.Tunnel_Traffictube1_SwitchTimerAudio_) == (spec.specEnum._on2)) && ((spec.Tunnel_Traffictube1_Broadcast_) == (spec.specEnum._message));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(208, true);
        if (this.doInfoEvent) this.infoEvent(208, true);

        spec.Tunnel_Traffictube1_Broadcast_ = spec.specEnum._suppressed;

        if (this.doInfoEvent) this.infoEvent(208, false);
        if (this.doInfoPrintOutput) this.printOutput(208, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 463 and event "Tunnel_Traffictube1_ButtonCamera1_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge463() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonCamera1_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonCamera1_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(210, true);
        if (this.doInfoEvent) this.infoEvent(210, true);

        spec.Tunnel_Traffictube1_ButtonCamera1_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(210, false);
        if (this.doInfoPrintOutput) this.printOutput(210, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 464 and event "Tunnel_Traffictube1_ButtonCamera1_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge464() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonCamera1_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonCamera1_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(211, true);
        if (this.doInfoEvent) this.infoEvent(211, true);

        spec.Tunnel_Traffictube1_ButtonCamera1_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(211, false);
        if (this.doInfoPrintOutput) this.printOutput(211, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 465 and event "Tunnel_Traffictube1_ButtonCamera2_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge465() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonCamera2_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonCamera2_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(213, true);
        if (this.doInfoEvent) this.infoEvent(213, true);

        spec.Tunnel_Traffictube1_ButtonCamera2_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(213, false);
        if (this.doInfoPrintOutput) this.printOutput(213, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 466 and event "Tunnel_Traffictube1_ButtonCamera2_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge466() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonCamera2_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonCamera2_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(214, true);
        if (this.doInfoEvent) this.infoEvent(214, true);

        spec.Tunnel_Traffictube1_ButtonCamera2_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(214, false);
        if (this.doInfoPrintOutput) this.printOutput(214, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 467 and event "Tunnel_Traffictube1_ButtonCamera3_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge467() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonCamera3_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonCamera3_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(216, true);
        if (this.doInfoEvent) this.infoEvent(216, true);

        spec.Tunnel_Traffictube1_ButtonCamera3_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(216, false);
        if (this.doInfoPrintOutput) this.printOutput(216, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 468 and event "Tunnel_Traffictube1_ButtonCamera3_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge468() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonCamera3_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonCamera3_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(217, true);
        if (this.doInfoEvent) this.infoEvent(217, true);

        spec.Tunnel_Traffictube1_ButtonCamera3_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(217, false);
        if (this.doInfoPrintOutput) this.printOutput(217, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 469 and event "Tunnel_Traffictube1_ButtonCamera4_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge469() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonCamera4_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonCamera4_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(219, true);
        if (this.doInfoEvent) this.infoEvent(219, true);

        spec.Tunnel_Traffictube1_ButtonCamera4_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(219, false);
        if (this.doInfoPrintOutput) this.printOutput(219, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 470 and event "Tunnel_Traffictube1_ButtonCamera4_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge470() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonCamera4_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonCamera4_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(220, true);
        if (this.doInfoEvent) this.infoEvent(220, true);

        spec.Tunnel_Traffictube1_ButtonCamera4_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(220, false);
        if (this.doInfoPrintOutput) this.printOutput(220, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 471 and event "Tunnel_Traffictube1_ButtonCamera5_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge471() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonCamera5_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonCamera5_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(222, true);
        if (this.doInfoEvent) this.infoEvent(222, true);

        spec.Tunnel_Traffictube1_ButtonCamera5_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(222, false);
        if (this.doInfoPrintOutput) this.printOutput(222, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 472 and event "Tunnel_Traffictube1_ButtonCamera5_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge472() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonCamera5_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonCamera5_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(223, true);
        if (this.doInfoEvent) this.infoEvent(223, true);

        spec.Tunnel_Traffictube1_ButtonCamera5_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(223, false);
        if (this.doInfoPrintOutput) this.printOutput(223, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 473 and event "Tunnel_Traffictube1_ButtonCamera6_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge473() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonCamera6_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonCamera6_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(225, true);
        if (this.doInfoEvent) this.infoEvent(225, true);

        spec.Tunnel_Traffictube1_ButtonCamera6_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(225, false);
        if (this.doInfoPrintOutput) this.printOutput(225, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 474 and event "Tunnel_Traffictube1_ButtonCamera6_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge474() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonCamera6_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonCamera6_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(226, true);
        if (this.doInfoEvent) this.infoEvent(226, true);

        spec.Tunnel_Traffictube1_ButtonCamera6_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(226, false);
        if (this.doInfoPrintOutput) this.printOutput(226, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 475 and event "Tunnel_Traffictube1_ButtonCameraStopView_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge475() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonCameraStopView_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonCameraStopView_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(228, true);
        if (this.doInfoEvent) this.infoEvent(228, true);

        spec.Tunnel_Traffictube1_ButtonCameraStopView_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(228, false);
        if (this.doInfoPrintOutput) this.printOutput(228, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 476 and event "Tunnel_Traffictube1_ButtonCameraStopView_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge476() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonCameraStopView_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonCameraStopView_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(229, true);
        if (this.doInfoEvent) this.infoEvent(229, true);

        spec.Tunnel_Traffictube1_ButtonCameraStopView_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(229, false);
        if (this.doInfoPrintOutput) this.printOutput(229, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 477 and event "Tunnel_Traffictube1_ButtonCameraView_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge477() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonCameraView_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonCameraView_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(231, true);
        if (this.doInfoEvent) this.infoEvent(231, true);

        spec.Tunnel_Traffictube1_ButtonCameraView_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(231, false);
        if (this.doInfoPrintOutput) this.printOutput(231, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 478 and event "Tunnel_Traffictube1_ButtonCameraView_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge478() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonCameraView_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonCameraView_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(232, true);
        if (this.doInfoEvent) this.infoEvent(232, true);

        spec.Tunnel_Traffictube1_ButtonCameraView_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(232, false);
        if (this.doInfoPrintOutput) this.printOutput(232, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 479 and event "Tunnel_Traffictube1_ButtonCloseBoombarriers_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge479() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonCloseBoombarriers_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonCloseBoombarriers_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(234, true);
        if (this.doInfoEvent) this.infoEvent(234, true);

        spec.Tunnel_Traffictube1_ButtonCloseBoombarriers_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(234, false);
        if (this.doInfoPrintOutput) this.printOutput(234, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 480 and event "Tunnel_Traffictube1_ButtonCloseBoombarriers_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge480() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonCloseBoombarriers_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonCloseBoombarriers_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(235, true);
        if (this.doInfoEvent) this.infoEvent(235, true);

        spec.Tunnel_Traffictube1_ButtonCloseBoombarriers_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(235, false);
        if (this.doInfoPrintOutput) this.printOutput(235, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 481 and event "Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge481() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(237, true);
        if (this.doInfoEvent) this.infoEvent(237, true);

        spec.Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(237, false);
        if (this.doInfoPrintOutput) this.printOutput(237, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 482 and event "Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge482() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(238, true);
        if (this.doInfoEvent) this.infoEvent(238, true);

        spec.Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(238, false);
        if (this.doInfoPrintOutput) this.printOutput(238, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 483 and event "Tunnel_Traffictube1_ButtonEmergency_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge483() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonEmergency_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonEmergency_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(240, true);
        if (this.doInfoEvent) this.infoEvent(240, true);

        spec.Tunnel_Traffictube1_ButtonEmergency_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(240, false);
        if (this.doInfoPrintOutput) this.printOutput(240, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 484 and event "Tunnel_Traffictube1_ButtonEmergency_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge484() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonEmergency_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonEmergency_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(241, true);
        if (this.doInfoEvent) this.infoEvent(241, true);

        spec.Tunnel_Traffictube1_ButtonEmergency_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(241, false);
        if (this.doInfoPrintOutput) this.printOutput(241, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 485 and event "Tunnel_Traffictube1_ButtonEvacuation_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge485() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonEvacuation_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonEvacuation_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(243, true);
        if (this.doInfoEvent) this.infoEvent(243, true);

        spec.Tunnel_Traffictube1_ButtonEvacuation_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(243, false);
        if (this.doInfoPrintOutput) this.printOutput(243, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 486 and event "Tunnel_Traffictube1_ButtonEvacuation_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge486() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonEvacuation_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonEvacuation_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(244, true);
        if (this.doInfoEvent) this.infoEvent(244, true);

        spec.Tunnel_Traffictube1_ButtonEvacuation_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(244, false);
        if (this.doInfoPrintOutput) this.printOutput(244, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 487 and event "Tunnel_Traffictube1_ButtonFlashTrafficlights_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge487() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonFlashTrafficlights_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonFlashTrafficlights_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(246, true);
        if (this.doInfoEvent) this.infoEvent(246, true);

        spec.Tunnel_Traffictube1_ButtonFlashTrafficlights_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(246, false);
        if (this.doInfoPrintOutput) this.printOutput(246, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 488 and event "Tunnel_Traffictube1_ButtonFlashTrafficlights_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge488() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonFlashTrafficlights_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonFlashTrafficlights_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(247, true);
        if (this.doInfoEvent) this.infoEvent(247, true);

        spec.Tunnel_Traffictube1_ButtonFlashTrafficlights_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(247, false);
        if (this.doInfoPrintOutput) this.printOutput(247, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 489 and event "Tunnel_Traffictube1_ButtonLighting0_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge489() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonLighting0_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonLighting0_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(249, true);
        if (this.doInfoEvent) this.infoEvent(249, true);

        spec.Tunnel_Traffictube1_ButtonLighting0_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(249, false);
        if (this.doInfoPrintOutput) this.printOutput(249, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 490 and event "Tunnel_Traffictube1_ButtonLighting0_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge490() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonLighting0_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonLighting0_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(250, true);
        if (this.doInfoEvent) this.infoEvent(250, true);

        spec.Tunnel_Traffictube1_ButtonLighting0_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(250, false);
        if (this.doInfoPrintOutput) this.printOutput(250, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 491 and event "Tunnel_Traffictube1_ButtonLighting1_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge491() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonLighting1_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonLighting1_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(252, true);
        if (this.doInfoEvent) this.infoEvent(252, true);

        spec.Tunnel_Traffictube1_ButtonLighting1_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(252, false);
        if (this.doInfoPrintOutput) this.printOutput(252, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 492 and event "Tunnel_Traffictube1_ButtonLighting1_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge492() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonLighting1_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonLighting1_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(253, true);
        if (this.doInfoEvent) this.infoEvent(253, true);

        spec.Tunnel_Traffictube1_ButtonLighting1_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(253, false);
        if (this.doInfoPrintOutput) this.printOutput(253, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 493 and event "Tunnel_Traffictube1_ButtonLighting2_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge493() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonLighting2_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonLighting2_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(255, true);
        if (this.doInfoEvent) this.infoEvent(255, true);

        spec.Tunnel_Traffictube1_ButtonLighting2_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(255, false);
        if (this.doInfoPrintOutput) this.printOutput(255, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 494 and event "Tunnel_Traffictube1_ButtonLighting2_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge494() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonLighting2_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonLighting2_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(256, true);
        if (this.doInfoEvent) this.infoEvent(256, true);

        spec.Tunnel_Traffictube1_ButtonLighting2_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(256, false);
        if (this.doInfoPrintOutput) this.printOutput(256, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 495 and event "Tunnel_Traffictube1_ButtonLighting3_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge495() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonLighting3_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonLighting3_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(258, true);
        if (this.doInfoEvent) this.infoEvent(258, true);

        spec.Tunnel_Traffictube1_ButtonLighting3_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(258, false);
        if (this.doInfoPrintOutput) this.printOutput(258, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 496 and event "Tunnel_Traffictube1_ButtonLighting3_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge496() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonLighting3_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonLighting3_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(259, true);
        if (this.doInfoEvent) this.infoEvent(259, true);

        spec.Tunnel_Traffictube1_ButtonLighting3_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(259, false);
        if (this.doInfoPrintOutput) this.printOutput(259, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 497 and event "Tunnel_Traffictube1_ButtonLighting4_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge497() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonLighting4_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonLighting4_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(261, true);
        if (this.doInfoEvent) this.infoEvent(261, true);

        spec.Tunnel_Traffictube1_ButtonLighting4_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(261, false);
        if (this.doInfoPrintOutput) this.printOutput(261, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 498 and event "Tunnel_Traffictube1_ButtonLighting4_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge498() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonLighting4_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonLighting4_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(262, true);
        if (this.doInfoEvent) this.infoEvent(262, true);

        spec.Tunnel_Traffictube1_ButtonLighting4_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(262, false);
        if (this.doInfoPrintOutput) this.printOutput(262, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 499 and event "Tunnel_Traffictube1_ButtonLighting5_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge499() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonLighting5_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonLighting5_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(264, true);
        if (this.doInfoEvent) this.infoEvent(264, true);

        spec.Tunnel_Traffictube1_ButtonLighting5_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(264, false);
        if (this.doInfoPrintOutput) this.printOutput(264, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 500 and event "Tunnel_Traffictube1_ButtonLighting5_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge500() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonLighting5_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonLighting5_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(265, true);
        if (this.doInfoEvent) this.infoEvent(265, true);

        spec.Tunnel_Traffictube1_ButtonLighting5_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(265, false);
        if (this.doInfoPrintOutput) this.printOutput(265, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 501 and event "Tunnel_Traffictube1_ButtonLighting6_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge501() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonLighting6_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonLighting6_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(267, true);
        if (this.doInfoEvent) this.infoEvent(267, true);

        spec.Tunnel_Traffictube1_ButtonLighting6_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(267, false);
        if (this.doInfoPrintOutput) this.printOutput(267, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 502 and event "Tunnel_Traffictube1_ButtonLighting6_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge502() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonLighting6_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonLighting6_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(268, true);
        if (this.doInfoEvent) this.infoEvent(268, true);

        spec.Tunnel_Traffictube1_ButtonLighting6_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(268, false);
        if (this.doInfoPrintOutput) this.printOutput(268, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 503 and event "Tunnel_Traffictube1_ButtonLighting7_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge503() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonLighting7_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonLighting7_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(270, true);
        if (this.doInfoEvent) this.infoEvent(270, true);

        spec.Tunnel_Traffictube1_ButtonLighting7_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(270, false);
        if (this.doInfoPrintOutput) this.printOutput(270, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 504 and event "Tunnel_Traffictube1_ButtonLighting7_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge504() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonLighting7_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonLighting7_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(271, true);
        if (this.doInfoEvent) this.infoEvent(271, true);

        spec.Tunnel_Traffictube1_ButtonLighting7_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(271, false);
        if (this.doInfoPrintOutput) this.printOutput(271, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 505 and event "Tunnel_Traffictube1_ButtonLighting8_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge505() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonLighting8_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonLighting8_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(273, true);
        if (this.doInfoEvent) this.infoEvent(273, true);

        spec.Tunnel_Traffictube1_ButtonLighting8_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(273, false);
        if (this.doInfoPrintOutput) this.printOutput(273, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 506 and event "Tunnel_Traffictube1_ButtonLighting8_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge506() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonLighting8_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonLighting8_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(274, true);
        if (this.doInfoEvent) this.infoEvent(274, true);

        spec.Tunnel_Traffictube1_ButtonLighting8_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(274, false);
        if (this.doInfoPrintOutput) this.printOutput(274, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 507 and event "Tunnel_Traffictube1_ButtonLive_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge507() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonLive_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonLive_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(276, true);
        if (this.doInfoEvent) this.infoEvent(276, true);

        spec.Tunnel_Traffictube1_ButtonLive_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(276, false);
        if (this.doInfoPrintOutput) this.printOutput(276, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 508 and event "Tunnel_Traffictube1_ButtonLive_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge508() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonLive_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonLive_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(277, true);
        if (this.doInfoEvent) this.infoEvent(277, true);

        spec.Tunnel_Traffictube1_ButtonLive_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(277, false);
        if (this.doInfoPrintOutput) this.printOutput(277, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 509 and event "Tunnel_Traffictube1_ButtonMaintenance_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge509() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonMaintenance_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonMaintenance_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(279, true);
        if (this.doInfoEvent) this.infoEvent(279, true);

        spec.Tunnel_Traffictube1_ButtonMaintenance_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(279, false);
        if (this.doInfoPrintOutput) this.printOutput(279, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 510 and event "Tunnel_Traffictube1_ButtonMaintenance_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge510() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonMaintenance_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonMaintenance_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(280, true);
        if (this.doInfoEvent) this.infoEvent(280, true);

        spec.Tunnel_Traffictube1_ButtonMaintenance_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(280, false);
        if (this.doInfoPrintOutput) this.printOutput(280, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 511 and event "Tunnel_Traffictube1_ButtonMessage_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge511() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonMessage_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonMessage_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(282, true);
        if (this.doInfoEvent) this.infoEvent(282, true);

        spec.Tunnel_Traffictube1_ButtonMessage_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(282, false);
        if (this.doInfoPrintOutput) this.printOutput(282, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 512 and event "Tunnel_Traffictube1_ButtonMessage_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge512() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonMessage_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonMessage_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(283, true);
        if (this.doInfoEvent) this.infoEvent(283, true);

        spec.Tunnel_Traffictube1_ButtonMessage_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(283, false);
        if (this.doInfoPrintOutput) this.printOutput(283, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 513 and event "Tunnel_Traffictube1_ButtonOffTrafficlights_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge513() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonOffTrafficlights_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonOffTrafficlights_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(285, true);
        if (this.doInfoEvent) this.infoEvent(285, true);

        spec.Tunnel_Traffictube1_ButtonOffTrafficlights_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(285, false);
        if (this.doInfoPrintOutput) this.printOutput(285, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 514 and event "Tunnel_Traffictube1_ButtonOffTrafficlights_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge514() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonOffTrafficlights_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonOffTrafficlights_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(286, true);
        if (this.doInfoEvent) this.infoEvent(286, true);

        spec.Tunnel_Traffictube1_ButtonOffTrafficlights_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(286, false);
        if (this.doInfoPrintOutput) this.printOutput(286, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 515 and event "Tunnel_Traffictube1_ButtonOpenBoombarriers_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge515() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonOpenBoombarriers_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonOpenBoombarriers_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(288, true);
        if (this.doInfoEvent) this.infoEvent(288, true);

        spec.Tunnel_Traffictube1_ButtonOpenBoombarriers_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(288, false);
        if (this.doInfoPrintOutput) this.printOutput(288, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 516 and event "Tunnel_Traffictube1_ButtonOpenBoombarriers_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge516() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonOpenBoombarriers_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonOpenBoombarriers_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(289, true);
        if (this.doInfoEvent) this.infoEvent(289, true);

        spec.Tunnel_Traffictube1_ButtonOpenBoombarriers_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(289, false);
        if (this.doInfoPrintOutput) this.printOutput(289, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 517 and event "Tunnel_Traffictube1_ButtonOperational_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge517() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonOperational_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonOperational_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(291, true);
        if (this.doInfoEvent) this.infoEvent(291, true);

        spec.Tunnel_Traffictube1_ButtonOperational_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(291, false);
        if (this.doInfoPrintOutput) this.printOutput(291, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 518 and event "Tunnel_Traffictube1_ButtonOperational_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge518() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonOperational_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonOperational_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(292, true);
        if (this.doInfoEvent) this.infoEvent(292, true);

        spec.Tunnel_Traffictube1_ButtonOperational_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(292, false);
        if (this.doInfoPrintOutput) this.printOutput(292, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 519 and event "Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge519() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(294, true);
        if (this.doInfoEvent) this.infoEvent(294, true);

        spec.Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(294, false);
        if (this.doInfoPrintOutput) this.printOutput(294, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 520 and event "Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge520() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(295, true);
        if (this.doInfoEvent) this.infoEvent(295, true);

        spec.Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(295, false);
        if (this.doInfoPrintOutput) this.printOutput(295, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 521 and event "Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge521() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(297, true);
        if (this.doInfoEvent) this.infoEvent(297, true);

        spec.Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(297, false);
        if (this.doInfoPrintOutput) this.printOutput(297, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 522 and event "Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge522() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(298, true);
        if (this.doInfoEvent) this.infoEvent(298, true);

        spec.Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(298, false);
        if (this.doInfoPrintOutput) this.printOutput(298, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 523 and event "Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge523() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(300, true);
        if (this.doInfoEvent) this.infoEvent(300, true);

        spec.Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(300, false);
        if (this.doInfoPrintOutput) this.printOutput(300, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 524 and event "Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge524() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(301, true);
        if (this.doInfoEvent) this.infoEvent(301, true);

        spec.Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(301, false);
        if (this.doInfoPrintOutput) this.printOutput(301, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 525 and event "Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge525() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(303, true);
        if (this.doInfoEvent) this.infoEvent(303, true);

        spec.Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(303, false);
        if (this.doInfoPrintOutput) this.printOutput(303, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 526 and event "Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge526() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(304, true);
        if (this.doInfoEvent) this.infoEvent(304, true);

        spec.Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(304, false);
        if (this.doInfoPrintOutput) this.printOutput(304, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 527 and event "Tunnel_Traffictube1_ButtonRecovery_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge527() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonRecovery_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonRecovery_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(306, true);
        if (this.doInfoEvent) this.infoEvent(306, true);

        spec.Tunnel_Traffictube1_ButtonRecovery_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(306, false);
        if (this.doInfoPrintOutput) this.printOutput(306, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 528 and event "Tunnel_Traffictube1_ButtonRecovery_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge528() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonRecovery_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonRecovery_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(307, true);
        if (this.doInfoEvent) this.infoEvent(307, true);

        spec.Tunnel_Traffictube1_ButtonRecovery_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(307, false);
        if (this.doInfoPrintOutput) this.printOutput(307, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 529 and event "Tunnel_Traffictube1_ButtonRedTrafficlights_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge529() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonRedTrafficlights_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonRedTrafficlights_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(309, true);
        if (this.doInfoEvent) this.infoEvent(309, true);

        spec.Tunnel_Traffictube1_ButtonRedTrafficlights_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(309, false);
        if (this.doInfoPrintOutput) this.printOutput(309, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 530 and event "Tunnel_Traffictube1_ButtonRedTrafficlights_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge530() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonRedTrafficlights_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonRedTrafficlights_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(310, true);
        if (this.doInfoEvent) this.infoEvent(310, true);

        spec.Tunnel_Traffictube1_ButtonRedTrafficlights_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(310, false);
        if (this.doInfoPrintOutput) this.printOutput(310, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 531 and event "Tunnel_Traffictube1_ButtonStopBoombarriers_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge531() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonStopBoombarriers_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonStopBoombarriers_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(312, true);
        if (this.doInfoEvent) this.infoEvent(312, true);

        spec.Tunnel_Traffictube1_ButtonStopBoombarriers_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(312, false);
        if (this.doInfoPrintOutput) this.printOutput(312, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 532 and event "Tunnel_Traffictube1_ButtonStopBoombarriers_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge532() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonStopBoombarriers_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonStopBoombarriers_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(313, true);
        if (this.doInfoEvent) this.infoEvent(313, true);

        spec.Tunnel_Traffictube1_ButtonStopBoombarriers_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(313, false);
        if (this.doInfoPrintOutput) this.printOutput(313, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 533 and event "Tunnel_Traffictube1_ButtonVentilation0_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge533() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonVentilation0_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonVentilation0_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(315, true);
        if (this.doInfoEvent) this.infoEvent(315, true);

        spec.Tunnel_Traffictube1_ButtonVentilation0_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(315, false);
        if (this.doInfoPrintOutput) this.printOutput(315, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 534 and event "Tunnel_Traffictube1_ButtonVentilation0_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge534() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonVentilation0_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonVentilation0_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(316, true);
        if (this.doInfoEvent) this.infoEvent(316, true);

        spec.Tunnel_Traffictube1_ButtonVentilation0_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(316, false);
        if (this.doInfoPrintOutput) this.printOutput(316, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 535 and event "Tunnel_Traffictube1_ButtonVentilation1_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge535() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonVentilation1_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonVentilation1_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(318, true);
        if (this.doInfoEvent) this.infoEvent(318, true);

        spec.Tunnel_Traffictube1_ButtonVentilation1_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(318, false);
        if (this.doInfoPrintOutput) this.printOutput(318, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 536 and event "Tunnel_Traffictube1_ButtonVentilation1_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge536() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonVentilation1_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonVentilation1_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(319, true);
        if (this.doInfoEvent) this.infoEvent(319, true);

        spec.Tunnel_Traffictube1_ButtonVentilation1_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(319, false);
        if (this.doInfoPrintOutput) this.printOutput(319, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 537 and event "Tunnel_Traffictube1_ButtonVentilation2_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge537() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonVentilation2_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonVentilation2_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(321, true);
        if (this.doInfoEvent) this.infoEvent(321, true);

        spec.Tunnel_Traffictube1_ButtonVentilation2_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(321, false);
        if (this.doInfoPrintOutput) this.printOutput(321, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 538 and event "Tunnel_Traffictube1_ButtonVentilation2_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge538() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonVentilation2_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonVentilation2_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(322, true);
        if (this.doInfoEvent) this.infoEvent(322, true);

        spec.Tunnel_Traffictube1_ButtonVentilation2_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(322, false);
        if (this.doInfoPrintOutput) this.printOutput(322, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 539 and event "Tunnel_Traffictube1_ButtonVentilation3_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge539() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonVentilation3_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonVentilation3_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(324, true);
        if (this.doInfoEvent) this.infoEvent(324, true);

        spec.Tunnel_Traffictube1_ButtonVentilation3_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(324, false);
        if (this.doInfoPrintOutput) this.printOutput(324, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 540 and event "Tunnel_Traffictube1_ButtonVentilation3_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge540() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonVentilation3_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonVentilation3_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(325, true);
        if (this.doInfoEvent) this.infoEvent(325, true);

        spec.Tunnel_Traffictube1_ButtonVentilation3_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(325, false);
        if (this.doInfoPrintOutput) this.printOutput(325, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 541 and event "Tunnel_Traffictube1_ButtonVentilation4_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge541() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonVentilation4_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonVentilation4_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(327, true);
        if (this.doInfoEvent) this.infoEvent(327, true);

        spec.Tunnel_Traffictube1_ButtonVentilation4_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(327, false);
        if (this.doInfoPrintOutput) this.printOutput(327, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 542 and event "Tunnel_Traffictube1_ButtonVentilation4_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge542() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonVentilation4_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonVentilation4_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(328, true);
        if (this.doInfoEvent) this.infoEvent(328, true);

        spec.Tunnel_Traffictube1_ButtonVentilation4_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(328, false);
        if (this.doInfoPrintOutput) this.printOutput(328, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 543 and event "Tunnel_Traffictube1_ButtonVentilation5_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge543() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonVentilation5_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonVentilation5_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(330, true);
        if (this.doInfoEvent) this.infoEvent(330, true);

        spec.Tunnel_Traffictube1_ButtonVentilation5_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(330, false);
        if (this.doInfoPrintOutput) this.printOutput(330, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 544 and event "Tunnel_Traffictube1_ButtonVentilation5_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge544() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonVentilation5_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonVentilation5_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(331, true);
        if (this.doInfoEvent) this.infoEvent(331, true);

        spec.Tunnel_Traffictube1_ButtonVentilation5_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(331, false);
        if (this.doInfoPrintOutput) this.printOutput(331, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 545 and event "Tunnel_Traffictube1_ButtonVentilation6_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge545() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonVentilation6_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonVentilation6_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(333, true);
        if (this.doInfoEvent) this.infoEvent(333, true);

        spec.Tunnel_Traffictube1_ButtonVentilation6_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(333, false);
        if (this.doInfoPrintOutput) this.printOutput(333, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 546 and event "Tunnel_Traffictube1_ButtonVentilation6_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge546() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonVentilation6_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonVentilation6_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(334, true);
        if (this.doInfoEvent) this.infoEvent(334, true);

        spec.Tunnel_Traffictube1_ButtonVentilation6_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(334, false);
        if (this.doInfoPrintOutput) this.printOutput(334, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 547 and event "Tunnel_Traffictube1_ButtonVentilation7_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge547() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonVentilation7_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonVentilation7_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(336, true);
        if (this.doInfoEvent) this.infoEvent(336, true);

        spec.Tunnel_Traffictube1_ButtonVentilation7_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(336, false);
        if (this.doInfoPrintOutput) this.printOutput(336, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 548 and event "Tunnel_Traffictube1_ButtonVentilation7_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge548() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonVentilation7_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonVentilation7_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(337, true);
        if (this.doInfoEvent) this.infoEvent(337, true);

        spec.Tunnel_Traffictube1_ButtonVentilation7_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(337, false);
        if (this.doInfoPrintOutput) this.printOutput(337, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 549 and event "Tunnel_Traffictube1_ButtonVentilation8_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge549() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonVentilation8_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonVentilation8_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(339, true);
        if (this.doInfoEvent) this.infoEvent(339, true);

        spec.Tunnel_Traffictube1_ButtonVentilation8_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(339, false);
        if (this.doInfoPrintOutput) this.printOutput(339, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 550 and event "Tunnel_Traffictube1_ButtonVentilation8_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge550() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonVentilation8_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonVentilation8_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(340, true);
        if (this.doInfoEvent) this.infoEvent(340, true);

        spec.Tunnel_Traffictube1_ButtonVentilation8_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(340, false);
        if (this.doInfoPrintOutput) this.printOutput(340, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 551 and event "Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge551() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(342, true);
        if (this.doInfoEvent) this.infoEvent(342, true);

        spec.Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(342, false);
        if (this.doInfoPrintOutput) this.printOutput(342, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 552 and event "Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge552() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(343, true);
        if (this.doInfoEvent) this.infoEvent(343, true);

        spec.Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(343, false);
        if (this.doInfoPrintOutput) this.printOutput(343, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 553 and event "Tunnel_Traffictube1_ButtonVentilationDrivingDirection_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge553() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonVentilationDrivingDirection_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonVentilationDrivingDirection_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(345, true);
        if (this.doInfoEvent) this.infoEvent(345, true);

        spec.Tunnel_Traffictube1_ButtonVentilationDrivingDirection_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(345, false);
        if (this.doInfoPrintOutput) this.printOutput(345, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 554 and event "Tunnel_Traffictube1_ButtonVentilationDrivingDirection_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge554() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonVentilationDrivingDirection_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ButtonVentilationDrivingDirection_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(346, true);
        if (this.doInfoEvent) this.infoEvent(346, true);

        spec.Tunnel_Traffictube1_ButtonVentilationDrivingDirection_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(346, false);
        if (this.doInfoPrintOutput) this.printOutput(346, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 555 and event "Tunnel_Traffictube1_CCTV.c_off1".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge555() {
        var guard = (spec.Tunnel_Traffictube1_setCameraButtonPressed_()) && ((spec.Tunnel_Traffictube1_RequirementsCamera1_cameraButtonUnpressed_()) && ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera1)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(347, true);
        if (this.doInfoEvent) this.infoEvent(347, true);

        spec.Tunnel_Traffictube1_CCTV_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(347, false);
        if (this.doInfoPrintOutput) this.printOutput(347, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 556 and event "Tunnel_Traffictube1_CCTV.c_off2".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge556() {
        var guard = (spec.Tunnel_Traffictube1_setCameraButtonPressed_()) && ((spec.Tunnel_Traffictube1_RequirementsCamera2_cameraButtonUnpressed_()) && ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera2)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(348, true);
        if (this.doInfoEvent) this.infoEvent(348, true);

        spec.Tunnel_Traffictube1_CCTV_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(348, false);
        if (this.doInfoPrintOutput) this.printOutput(348, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 557 and event "Tunnel_Traffictube1_CCTV.c_off3".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge557() {
        var guard = (spec.Tunnel_Traffictube1_setCameraButtonPressed_()) && ((spec.Tunnel_Traffictube1_RequirementsCamera3_cameraButtonUnpressed_()) && ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera3)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(349, true);
        if (this.doInfoEvent) this.infoEvent(349, true);

        spec.Tunnel_Traffictube1_CCTV_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(349, false);
        if (this.doInfoPrintOutput) this.printOutput(349, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 558 and event "Tunnel_Traffictube1_CCTV.c_off4".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge558() {
        var guard = (spec.Tunnel_Traffictube1_setCameraButtonPressed_()) && ((spec.Tunnel_Traffictube1_RequirementsCamera4_cameraButtonUnpressed_()) && ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera4)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(350, true);
        if (this.doInfoEvent) this.infoEvent(350, true);

        spec.Tunnel_Traffictube1_CCTV_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(350, false);
        if (this.doInfoPrintOutput) this.printOutput(350, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 559 and event "Tunnel_Traffictube1_CCTV.c_off5".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge559() {
        var guard = (spec.Tunnel_Traffictube1_setCameraButtonPressed_()) && ((spec.Tunnel_Traffictube1_RequirementsCamera5_cameraButtonUnpressed_()) && ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera5)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(351, true);
        if (this.doInfoEvent) this.infoEvent(351, true);

        spec.Tunnel_Traffictube1_CCTV_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(351, false);
        if (this.doInfoPrintOutput) this.printOutput(351, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 560 and event "Tunnel_Traffictube1_CCTV.c_off6".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge560() {
        var guard = (spec.Tunnel_Traffictube1_setCameraButtonPressed_()) && ((spec.Tunnel_Traffictube1_RequirementsCamera6_cameraButtonUnpressed_()) && ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera6)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(352, true);
        if (this.doInfoEvent) this.infoEvent(352, true);

        spec.Tunnel_Traffictube1_CCTV_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(352, false);
        if (this.doInfoPrintOutput) this.printOutput(352, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 561 and event "Tunnel_Traffictube1_CCTV.c_on1".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge561() {
        var guard = (spec.Tunnel_Traffictube1_RequirementsCamera1_cameraButtonPressed_()) && ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(353, true);
        if (this.doInfoEvent) this.infoEvent(353, true);

        spec.Tunnel_Traffictube1_CCTV_ = spec.specEnum._camera1;

        if (this.doInfoEvent) this.infoEvent(353, false);
        if (this.doInfoPrintOutput) this.printOutput(353, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 562 and event "Tunnel_Traffictube1_CCTV.c_on2".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge562() {
        var guard = (spec.Tunnel_Traffictube1_RequirementsCamera2_cameraButtonPressed_()) && ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(354, true);
        if (this.doInfoEvent) this.infoEvent(354, true);

        spec.Tunnel_Traffictube1_CCTV_ = spec.specEnum._camera2;

        if (this.doInfoEvent) this.infoEvent(354, false);
        if (this.doInfoPrintOutput) this.printOutput(354, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 563 and event "Tunnel_Traffictube1_CCTV.c_on3".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge563() {
        var guard = (spec.Tunnel_Traffictube1_RequirementsCamera3_cameraButtonPressed_()) && ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(355, true);
        if (this.doInfoEvent) this.infoEvent(355, true);

        spec.Tunnel_Traffictube1_CCTV_ = spec.specEnum._camera3;

        if (this.doInfoEvent) this.infoEvent(355, false);
        if (this.doInfoPrintOutput) this.printOutput(355, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 564 and event "Tunnel_Traffictube1_CCTV.c_on4".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge564() {
        var guard = (spec.Tunnel_Traffictube1_RequirementsCamera4_cameraButtonPressed_()) && ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(356, true);
        if (this.doInfoEvent) this.infoEvent(356, true);

        spec.Tunnel_Traffictube1_CCTV_ = spec.specEnum._camera4;

        if (this.doInfoEvent) this.infoEvent(356, false);
        if (this.doInfoPrintOutput) this.printOutput(356, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 565 and event "Tunnel_Traffictube1_CCTV.c_on5".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge565() {
        var guard = (spec.Tunnel_Traffictube1_RequirementsCamera5_cameraButtonPressed_()) && ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(357, true);
        if (this.doInfoEvent) this.infoEvent(357, true);

        spec.Tunnel_Traffictube1_CCTV_ = spec.specEnum._camera5;

        if (this.doInfoEvent) this.infoEvent(357, false);
        if (this.doInfoPrintOutput) this.printOutput(357, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 566 and event "Tunnel_Traffictube1_CCTV.c_on6".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge566() {
        var guard = (spec.Tunnel_Traffictube1_RequirementsCamera6_cameraButtonPressed_()) && ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(358, true);
        if (this.doInfoEvent) this.infoEvent(358, true);

        spec.Tunnel_Traffictube1_CCTV_ = spec.specEnum._camera6;

        if (this.doInfoEvent) this.infoEvent(358, false);
        if (this.doInfoPrintOutput) this.printOutput(358, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 567 and event "Tunnel_Traffictube1_CCTV.c_start".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge567() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonCameraView_Observer_) == (spec.specEnum._pressed)) && (((spec.Tunnel_Traffictube1_ButtonCameraStopView_Observer_) == (spec.specEnum._unpressed)) && ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._off)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(359, true);
        if (this.doInfoEvent) this.infoEvent(359, true);

        spec.Tunnel_Traffictube1_CCTV_ = spec.specEnum._camera1;

        if (this.doInfoEvent) this.infoEvent(359, false);
        if (this.doInfoPrintOutput) this.printOutput(359, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 568 and event "Tunnel_Traffictube1_CCTV.c_stop".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge568() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonCameraStopView_Observer_) == (spec.specEnum._pressed)) && ((((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera1)) || ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera2))) || ((((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera3)) || ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera4))) || (((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera5)) || ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera6)))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(360, true);
        if (this.doInfoEvent) this.infoEvent(360, true);

        if ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera1)) {
            spec.Tunnel_Traffictube1_CCTV_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera2)) {
            spec.Tunnel_Traffictube1_CCTV_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera3)) {
            spec.Tunnel_Traffictube1_CCTV_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera4)) {
            spec.Tunnel_Traffictube1_CCTV_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera5)) {
            spec.Tunnel_Traffictube1_CCTV_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera6)) {
            spec.Tunnel_Traffictube1_CCTV_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(360, false);
        if (this.doInfoPrintOutput) this.printOutput(360, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 569 and event "Tunnel_Traffictube1_CCTV.c_view".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge569() {
        var guard = (((spec.Tunnel_Traffictube1_ButtonCameraView_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube1_TimerCameraViewEven_) == (spec.specEnum._finished))) && (((spec.Tunnel_Traffictube1_TimerCameraViewUneven_) == (spec.specEnum._off)) && (((((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera2)) || ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera4))) || ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera6))) && ((((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera1)) || ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera2))) || ((((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera3)) || ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera4))) || (((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera5)) || ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera6)))))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(361, true);
        if (this.doInfoEvent) this.infoEvent(361, true);

        if ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera1)) {
            spec.Tunnel_Traffictube1_CCTV_ = spec.specEnum._camera2;
        } else if ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera2)) {
            spec.Tunnel_Traffictube1_CCTV_ = spec.specEnum._camera3;
        } else if ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera3)) {
            spec.Tunnel_Traffictube1_CCTV_ = spec.specEnum._camera4;
        } else if ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera4)) {
            spec.Tunnel_Traffictube1_CCTV_ = spec.specEnum._camera5;
        } else if ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera5)) {
            spec.Tunnel_Traffictube1_CCTV_ = spec.specEnum._camera6;
        } else if ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera6)) {
            spec.Tunnel_Traffictube1_CCTV_ = spec.specEnum._camera1;
        }

        if (this.doInfoEvent) this.infoEvent(361, false);
        if (this.doInfoPrintOutput) this.printOutput(361, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 570 and event "Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge570() {
        var guard = ((spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(363, true);
        if (this.doInfoEvent) this.infoEvent(363, true);

        spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(363, false);
        if (this.doInfoPrintOutput) this.printOutput(363, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 571 and event "Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge571() {
        var guard = ((spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(364, true);
        if (this.doInfoEvent) this.infoEvent(364, true);

        spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(364, false);
        if (this.doInfoPrintOutput) this.printOutput(364, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 572 and event "Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge572() {
        var guard = ((spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(366, true);
        if (this.doInfoEvent) this.infoEvent(366, true);

        spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(366, false);
        if (this.doInfoPrintOutput) this.printOutput(366, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 573 and event "Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge573() {
        var guard = ((spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(367, true);
        if (this.doInfoEvent) this.infoEvent(367, true);

        spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(367, false);
        if (this.doInfoPrintOutput) this.printOutput(367, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 574 and event "Tunnel_Traffictube1_ControlBoombarriers_Mode.c_auto".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge574() {
        var guard = ((spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube1_ControlBoombarriers_Mode_) == (spec.specEnum._manual));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(368, true);
        if (this.doInfoEvent) this.infoEvent(368, true);

        spec.Tunnel_Traffictube1_ControlBoombarriers_Mode_ = spec.specEnum._auto;

        if (this.doInfoEvent) this.infoEvent(368, false);
        if (this.doInfoPrintOutput) this.printOutput(368, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 575 and event "Tunnel_Traffictube1_ControlBoombarriers_Mode.c_manual".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge575() {
        var guard = ((spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube1_ControlBoombarriers_Mode_) == (spec.specEnum._auto));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(369, true);
        if (this.doInfoEvent) this.infoEvent(369, true);

        spec.Tunnel_Traffictube1_ControlBoombarriers_Mode_ = spec.specEnum._manual;

        if (this.doInfoEvent) this.infoEvent(369, false);
        if (this.doInfoPrintOutput) this.printOutput(369, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 576 and event "Tunnel_Traffictube1_ControlLighting_ButtonAuto_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge576() {
        var guard = ((spec.Tunnel_Traffictube1_ControlLighting_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ControlLighting_ButtonAuto_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(371, true);
        if (this.doInfoEvent) this.infoEvent(371, true);

        spec.Tunnel_Traffictube1_ControlLighting_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(371, false);
        if (this.doInfoPrintOutput) this.printOutput(371, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 577 and event "Tunnel_Traffictube1_ControlLighting_ButtonAuto_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge577() {
        var guard = ((spec.Tunnel_Traffictube1_ControlLighting_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ControlLighting_ButtonAuto_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(372, true);
        if (this.doInfoEvent) this.infoEvent(372, true);

        spec.Tunnel_Traffictube1_ControlLighting_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(372, false);
        if (this.doInfoPrintOutput) this.printOutput(372, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 578 and event "Tunnel_Traffictube1_ControlLighting_ButtonManual_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge578() {
        var guard = ((spec.Tunnel_Traffictube1_ControlLighting_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ControlLighting_ButtonManual_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(374, true);
        if (this.doInfoEvent) this.infoEvent(374, true);

        spec.Tunnel_Traffictube1_ControlLighting_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(374, false);
        if (this.doInfoPrintOutput) this.printOutput(374, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 579 and event "Tunnel_Traffictube1_ControlLighting_ButtonManual_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge579() {
        var guard = ((spec.Tunnel_Traffictube1_ControlLighting_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ControlLighting_ButtonManual_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(375, true);
        if (this.doInfoEvent) this.infoEvent(375, true);

        spec.Tunnel_Traffictube1_ControlLighting_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(375, false);
        if (this.doInfoPrintOutput) this.printOutput(375, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 580 and event "Tunnel_Traffictube1_ControlLighting_Mode.c_auto".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge580() {
        var guard = ((spec.Tunnel_Traffictube1_ControlLighting_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._manual));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(376, true);
        if (this.doInfoEvent) this.infoEvent(376, true);

        spec.Tunnel_Traffictube1_ControlLighting_Mode_ = spec.specEnum._auto;

        if (this.doInfoEvent) this.infoEvent(376, false);
        if (this.doInfoPrintOutput) this.printOutput(376, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 581 and event "Tunnel_Traffictube1_ControlLighting_Mode.c_manual".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge581() {
        var guard = ((spec.Tunnel_Traffictube1_ControlLighting_ButtonManual_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._auto));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(377, true);
        if (this.doInfoEvent) this.infoEvent(377, true);

        spec.Tunnel_Traffictube1_ControlLighting_Mode_ = spec.specEnum._manual;

        if (this.doInfoEvent) this.infoEvent(377, false);
        if (this.doInfoPrintOutput) this.printOutput(377, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 582 and event "Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge582() {
        var guard = ((spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(379, true);
        if (this.doInfoEvent) this.infoEvent(379, true);

        spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(379, false);
        if (this.doInfoPrintOutput) this.printOutput(379, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 583 and event "Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge583() {
        var guard = ((spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(380, true);
        if (this.doInfoEvent) this.infoEvent(380, true);

        spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(380, false);
        if (this.doInfoPrintOutput) this.printOutput(380, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 584 and event "Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge584() {
        var guard = ((spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(382, true);
        if (this.doInfoEvent) this.infoEvent(382, true);

        spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(382, false);
        if (this.doInfoPrintOutput) this.printOutput(382, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 585 and event "Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge585() {
        var guard = ((spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(383, true);
        if (this.doInfoEvent) this.infoEvent(383, true);

        spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(383, false);
        if (this.doInfoPrintOutput) this.printOutput(383, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 586 and event "Tunnel_Traffictube1_ControlTrafficlights_Mode.c_auto".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge586() {
        var guard = ((spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube1_ControlTrafficlights_Mode_) == (spec.specEnum._manual));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(384, true);
        if (this.doInfoEvent) this.infoEvent(384, true);

        spec.Tunnel_Traffictube1_ControlTrafficlights_Mode_ = spec.specEnum._auto;

        if (this.doInfoEvent) this.infoEvent(384, false);
        if (this.doInfoPrintOutput) this.printOutput(384, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 587 and event "Tunnel_Traffictube1_ControlTrafficlights_Mode.c_manual".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge587() {
        var guard = ((spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube1_ControlTrafficlights_Mode_) == (spec.specEnum._auto));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(385, true);
        if (this.doInfoEvent) this.infoEvent(385, true);

        spec.Tunnel_Traffictube1_ControlTrafficlights_Mode_ = spec.specEnum._manual;

        if (this.doInfoEvent) this.infoEvent(385, false);
        if (this.doInfoPrintOutput) this.printOutput(385, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 588 and event "Tunnel_Traffictube1_ControlVentilation_ButtonAuto_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge588() {
        var guard = ((spec.Tunnel_Traffictube1_ControlVentilation_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ControlVentilation_ButtonAuto_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(387, true);
        if (this.doInfoEvent) this.infoEvent(387, true);

        spec.Tunnel_Traffictube1_ControlVentilation_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(387, false);
        if (this.doInfoPrintOutput) this.printOutput(387, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 589 and event "Tunnel_Traffictube1_ControlVentilation_ButtonAuto_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge589() {
        var guard = ((spec.Tunnel_Traffictube1_ControlVentilation_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ControlVentilation_ButtonAuto_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(388, true);
        if (this.doInfoEvent) this.infoEvent(388, true);

        spec.Tunnel_Traffictube1_ControlVentilation_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(388, false);
        if (this.doInfoPrintOutput) this.printOutput(388, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 590 and event "Tunnel_Traffictube1_ControlVentilation_ButtonManual_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge590() {
        var guard = ((spec.Tunnel_Traffictube1_ControlVentilation_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ControlVentilation_ButtonManual_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(390, true);
        if (this.doInfoEvent) this.infoEvent(390, true);

        spec.Tunnel_Traffictube1_ControlVentilation_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(390, false);
        if (this.doInfoPrintOutput) this.printOutput(390, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 591 and event "Tunnel_Traffictube1_ControlVentilation_ButtonManual_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge591() {
        var guard = ((spec.Tunnel_Traffictube1_ControlVentilation_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_ControlVentilation_ButtonManual_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(391, true);
        if (this.doInfoEvent) this.infoEvent(391, true);

        spec.Tunnel_Traffictube1_ControlVentilation_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(391, false);
        if (this.doInfoPrintOutput) this.printOutput(391, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 592 and event "Tunnel_Traffictube1_ControlVentilation_Mode.c_auto".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge592() {
        var guard = ((spec.Tunnel_Traffictube1_ControlVentilation_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(392, true);
        if (this.doInfoEvent) this.infoEvent(392, true);

        spec.Tunnel_Traffictube1_ControlVentilation_Mode_ = spec.specEnum._auto;

        if (this.doInfoEvent) this.infoEvent(392, false);
        if (this.doInfoPrintOutput) this.printOutput(392, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 593 and event "Tunnel_Traffictube1_ControlVentilation_Mode.c_manual".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge593() {
        var guard = ((spec.Tunnel_Traffictube1_ControlVentilation_ButtonManual_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(393, true);
        if (this.doInfoEvent) this.infoEvent(393, true);

        spec.Tunnel_Traffictube1_ControlVentilation_Mode_ = spec.specEnum._manual;

        if (this.doInfoEvent) this.infoEvent(393, false);
        if (this.doInfoPrintOutput) this.printOutput(393, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 594 and event "Tunnel_Traffictube1_EscapeDoor_Broadcast.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge594() {
        var guard = (((spec.Tunnel_Traffictube1_RequirementsEscapeDoor1_broadcastAuto_()) && ((spec.Tunnel_Traffictube1_SwitchTimerAudio_) == (spec.specEnum._off))) || ((!(spec.Tunnel_Traffictube1_RequirementsEscapeDoor1_broadcastAuto_())) && (spec.Tunnel_Traffictube1_RequirementsEscapeDoor1_buttonBroadcastOff_()))) && (((spec.Tunnel_Traffictube1_EscapeDoor_Broadcast_) == (spec.specEnum._on)) || ((spec.Tunnel_Traffictube1_EscapeDoor_Broadcast_) == (spec.specEnum._suppressed)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(408, true);
        if (this.doInfoEvent) this.infoEvent(408, true);

        if ((spec.Tunnel_Traffictube1_EscapeDoor_Broadcast_) == (spec.specEnum._on)) {
            spec.Tunnel_Traffictube1_EscapeDoor_Broadcast_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube1_EscapeDoor_Broadcast_) == (spec.specEnum._suppressed)) {
            spec.Tunnel_Traffictube1_EscapeDoor_Broadcast_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(408, false);
        if (this.doInfoPrintOutput) this.printOutput(408, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 595 and event "Tunnel_Traffictube1_EscapeDoor_Broadcast.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge595() {
        var guard = (((spec.Tunnel_Traffictube1_RequirementsEscapeDoor1_broadcastAuto_()) && ((spec.Tunnel_Traffictube1_SwitchTimerAudio_) == (spec.specEnum._on2))) || ((!(spec.Tunnel_Traffictube1_RequirementsEscapeDoor1_broadcastAuto_())) && (spec.Tunnel_Traffictube1_RequirementsEscapeDoor1_buttonBroadcastOn_()))) && (((spec.Tunnel_Traffictube1_Broadcast_) == (spec.specEnum._suppressed)) && (((spec.Tunnel_Traffictube1_EscapeDoor_Broadcast_) == (spec.specEnum._off)) || ((spec.Tunnel_Traffictube1_EscapeDoor_Broadcast_) == (spec.specEnum._suppressed))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(409, true);
        if (this.doInfoEvent) this.infoEvent(409, true);

        if ((spec.Tunnel_Traffictube1_EscapeDoor_Broadcast_) == (spec.specEnum._off)) {
            spec.Tunnel_Traffictube1_EscapeDoor_Broadcast_ = spec.specEnum._on;
        } else if ((spec.Tunnel_Traffictube1_EscapeDoor_Broadcast_) == (spec.specEnum._suppressed)) {
            spec.Tunnel_Traffictube1_EscapeDoor_Broadcast_ = spec.specEnum._on;
        }

        if (this.doInfoEvent) this.infoEvent(409, false);
        if (this.doInfoPrintOutput) this.printOutput(409, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 596 and event "Tunnel_Traffictube1_EscapeDoor_Broadcast.c_suppressed".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge596() {
        var guard = (spec.Tunnel_Traffictube1_RequirementsEscapeDoor1_broadcastAuto_()) && (((spec.Tunnel_Traffictube1_SwitchTimerAudio_) == (spec.specEnum._on1)) && (((spec.Tunnel_Traffictube1_EscapeDoor_Broadcast_) == (spec.specEnum._off)) || ((spec.Tunnel_Traffictube1_EscapeDoor_Broadcast_) == (spec.specEnum._on))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(410, true);
        if (this.doInfoEvent) this.infoEvent(410, true);

        if ((spec.Tunnel_Traffictube1_EscapeDoor_Broadcast_) == (spec.specEnum._off)) {
            spec.Tunnel_Traffictube1_EscapeDoor_Broadcast_ = spec.specEnum._suppressed;
        } else if ((spec.Tunnel_Traffictube1_EscapeDoor_Broadcast_) == (spec.specEnum._on)) {
            spec.Tunnel_Traffictube1_EscapeDoor_Broadcast_ = spec.specEnum._suppressed;
        }

        if (this.doInfoEvent) this.infoEvent(410, false);
        if (this.doInfoPrintOutput) this.printOutput(410, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 597 and event "Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge597() {
        var guard = ((spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(412, true);
        if (this.doInfoEvent) this.infoEvent(412, true);

        spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(412, false);
        if (this.doInfoPrintOutput) this.printOutput(412, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 598 and event "Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge598() {
        var guard = ((spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(413, true);
        if (this.doInfoEvent) this.infoEvent(413, true);

        spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(413, false);
        if (this.doInfoPrintOutput) this.printOutput(413, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 599 and event "Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge599() {
        var guard = ((spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(415, true);
        if (this.doInfoEvent) this.infoEvent(415, true);

        spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(415, false);
        if (this.doInfoPrintOutput) this.printOutput(415, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 600 and event "Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge600() {
        var guard = ((spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(416, true);
        if (this.doInfoEvent) this.infoEvent(416, true);

        spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(416, false);
        if (this.doInfoPrintOutput) this.printOutput(416, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 601 and event "Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge601() {
        var guard = ((spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(418, true);
        if (this.doInfoEvent) this.infoEvent(418, true);

        spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(418, false);
        if (this.doInfoPrintOutput) this.printOutput(418, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 602 and event "Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge602() {
        var guard = ((spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(419, true);
        if (this.doInfoEvent) this.infoEvent(419, true);

        spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(419, false);
        if (this.doInfoPrintOutput) this.printOutput(419, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 603 and event "Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge603() {
        var guard = ((spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(421, true);
        if (this.doInfoEvent) this.infoEvent(421, true);

        spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(421, false);
        if (this.doInfoPrintOutput) this.printOutput(421, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 604 and event "Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge604() {
        var guard = ((spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(422, true);
        if (this.doInfoEvent) this.infoEvent(422, true);

        spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(422, false);
        if (this.doInfoPrintOutput) this.printOutput(422, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 605 and event "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge605() {
        var guard = ((spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(424, true);
        if (this.doInfoEvent) this.infoEvent(424, true);

        spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(424, false);
        if (this.doInfoPrintOutput) this.printOutput(424, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 606 and event "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge606() {
        var guard = ((spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(425, true);
        if (this.doInfoEvent) this.infoEvent(425, true);

        spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(425, false);
        if (this.doInfoPrintOutput) this.printOutput(425, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 607 and event "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge607() {
        var guard = ((spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(427, true);
        if (this.doInfoEvent) this.infoEvent(427, true);

        spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(427, false);
        if (this.doInfoPrintOutput) this.printOutput(427, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 608 and event "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge608() {
        var guard = ((spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(428, true);
        if (this.doInfoEvent) this.infoEvent(428, true);

        spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(428, false);
        if (this.doInfoPrintOutput) this.printOutput(428, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 609 and event "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_Mode.c_auto".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge609() {
        var guard = ((spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_Mode_) == (spec.specEnum._manual));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(429, true);
        if (this.doInfoEvent) this.infoEvent(429, true);

        spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_Mode_ = spec.specEnum._auto;

        if (this.doInfoEvent) this.infoEvent(429, false);
        if (this.doInfoPrintOutput) this.printOutput(429, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 610 and event "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_Mode.c_manual".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge610() {
        var guard = ((spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_Mode_) == (spec.specEnum._auto));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(430, true);
        if (this.doInfoEvent) this.infoEvent(430, true);

        spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_Mode_ = spec.specEnum._manual;

        if (this.doInfoEvent) this.infoEvent(430, false);
        if (this.doInfoPrintOutput) this.printOutput(430, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 611 and event "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge611() {
        var guard = ((spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(432, true);
        if (this.doInfoEvent) this.infoEvent(432, true);

        spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(432, false);
        if (this.doInfoPrintOutput) this.printOutput(432, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 612 and event "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge612() {
        var guard = ((spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(433, true);
        if (this.doInfoEvent) this.infoEvent(433, true);

        spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(433, false);
        if (this.doInfoPrintOutput) this.printOutput(433, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 613 and event "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge613() {
        var guard = ((spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(435, true);
        if (this.doInfoEvent) this.infoEvent(435, true);

        spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(435, false);
        if (this.doInfoPrintOutput) this.printOutput(435, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 614 and event "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge614() {
        var guard = ((spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(436, true);
        if (this.doInfoEvent) this.infoEvent(436, true);

        spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(436, false);
        if (this.doInfoPrintOutput) this.printOutput(436, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 615 and event "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_Mode.c_auto".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge615() {
        var guard = ((spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_Mode_) == (spec.specEnum._manual));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(437, true);
        if (this.doInfoEvent) this.infoEvent(437, true);

        spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_Mode_ = spec.specEnum._auto;

        if (this.doInfoEvent) this.infoEvent(437, false);
        if (this.doInfoPrintOutput) this.printOutput(437, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 616 and event "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_Mode.c_manual".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge616() {
        var guard = ((spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_Mode_) == (spec.specEnum._auto));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(438, true);
        if (this.doInfoEvent) this.infoEvent(438, true);

        spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_Mode_ = spec.specEnum._manual;

        if (this.doInfoEvent) this.infoEvent(438, false);
        if (this.doInfoPrintOutput) this.printOutput(438, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 617 and event "Tunnel_Traffictube1_EscapeDoor_RouteIndication.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge617() {
        var guard = (((spec.Tunnel_Traffictube1_RequirementsEscapeDoor1_routeIndicationAuto_()) && ((spec.Tunnel_Traffictube1_ModeTraffictube_) != (spec.specEnum._evacuation))) || ((spec.Tunnel_Traffictube1_RequirementsEscapeDoor1_routeIndicationManual_()) && (spec.Tunnel_Traffictube1_RequirementsEscapeDoor1_buttonRouteIndicationOff_()))) && ((spec.Tunnel_Traffictube1_EscapeDoor_RouteIndication_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(439, true);
        if (this.doInfoEvent) this.infoEvent(439, true);

        spec.Tunnel_Traffictube1_EscapeDoor_RouteIndication_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(439, false);
        if (this.doInfoPrintOutput) this.printOutput(439, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 618 and event "Tunnel_Traffictube1_EscapeDoor_RouteIndication.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge618() {
        var guard = (((spec.Tunnel_Traffictube1_RequirementsEscapeDoor1_routeIndicationAuto_()) && ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._evacuation))) || ((spec.Tunnel_Traffictube1_RequirementsEscapeDoor1_routeIndicationManual_()) && (spec.Tunnel_Traffictube1_RequirementsEscapeDoor1_buttonRouteIndicationOn_()))) && ((spec.Tunnel_Traffictube1_EscapeDoor_RouteIndication_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(440, true);
        if (this.doInfoEvent) this.infoEvent(440, true);

        spec.Tunnel_Traffictube1_EscapeDoor_RouteIndication_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(440, false);
        if (this.doInfoPrintOutput) this.printOutput(440, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 619 and event "Tunnel_Traffictube1_J32_Mode.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge619() {
        var guard = (((spec.Tunnel_Traffictube1_Trafficlight1_Mode_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube1_Trafficlight2_Mode_) == (spec.specEnum._off))) && (((spec.Tunnel_Traffictube1_Trafficlight3_Mode_) == (spec.specEnum._off)) && (((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube1_J32_Mode_) == (spec.specEnum._on))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(441, true);
        if (this.doInfoEvent) this.infoEvent(441, true);

        spec.Tunnel_Traffictube1_J32_Mode_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(441, false);
        if (this.doInfoPrintOutput) this.printOutput(441, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 620 and event "Tunnel_Traffictube1_J32_Mode.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge620() {
        var guard = (((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._red)) || ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._flash))) && ((spec.Tunnel_Traffictube1_J32_Mode_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(442, true);
        if (this.doInfoEvent) this.infoEvent(442, true);

        spec.Tunnel_Traffictube1_J32_Mode_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(442, false);
        if (this.doInfoPrintOutput) this.printOutput(442, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 621 and event "Tunnel_Traffictube1_J32_TimerReleaseSignal.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge621() {
        var guard = ((spec.Tunnel_Traffictube1_J32_Mode_) == (spec.specEnum._on)) && ((spec.Tunnel_Traffictube1_J32_TimerReleaseSignal_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(443, true);
        if (this.doInfoEvent) this.infoEvent(443, true);

        spec.Tunnel_Traffictube1_J32_TimerReleaseSignal_ = spec.specEnum._running;

        if (this.doInfoEvent) this.infoEvent(443, false);
        if (this.doInfoPrintOutput) this.printOutput(443, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 622 and event "Tunnel_Traffictube1_J32_TimerReleaseSignal.c_reset".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge622() {
        var guard = ((spec.Tunnel_Traffictube1_J32_Mode_) == (spec.specEnum._off)) && (((spec.Tunnel_Traffictube1_J32_TimerReleaseSignal_) == (spec.specEnum._running)) || ((spec.Tunnel_Traffictube1_J32_TimerReleaseSignal_) == (spec.specEnum._finished)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(444, true);
        if (this.doInfoEvent) this.infoEvent(444, true);

        if ((spec.Tunnel_Traffictube1_J32_TimerReleaseSignal_) == (spec.specEnum._running)) {
            spec.Tunnel_Traffictube1_J32_TimerReleaseSignal_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube1_J32_TimerReleaseSignal_) == (spec.specEnum._finished)) {
            spec.Tunnel_Traffictube1_J32_TimerReleaseSignal_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(444, false);
        if (this.doInfoPrintOutput) this.printOutput(444, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 623 and event "Tunnel_Traffictube1_Lighting.c_0".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge623() {
        var guard = (((((spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._auto)) && ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational))) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_Lightsensor_setting_, 0))) || (((spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonLighting0_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube1_Lighting_setting_, 0));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(446, true);
        if (this.doInfoEvent) this.infoEvent(446, true);

        spec.Tunnel_Traffictube1_Lighting_setting_ = 0;

        if (this.doInfoEvent) this.infoEvent(446, false);
        if (this.doInfoPrintOutput) this.printOutput(446, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 624 and event "Tunnel_Traffictube1_Lighting.c_1".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge624() {
        var guard = (((((spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._auto)) && ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational))) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_Lightsensor_setting_, 1))) || (((spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonLighting1_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube1_Lighting_setting_, 1));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(447, true);
        if (this.doInfoEvent) this.infoEvent(447, true);

        spec.Tunnel_Traffictube1_Lighting_setting_ = 1;

        if (this.doInfoEvent) this.infoEvent(447, false);
        if (this.doInfoPrintOutput) this.printOutput(447, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 625 and event "Tunnel_Traffictube1_Lighting.c_2".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge625() {
        var guard = (((((spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._auto)) && ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational))) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_Lightsensor_setting_, 2))) || (((spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonLighting2_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube1_Lighting_setting_, 2));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(448, true);
        if (this.doInfoEvent) this.infoEvent(448, true);

        spec.Tunnel_Traffictube1_Lighting_setting_ = 2;

        if (this.doInfoEvent) this.infoEvent(448, false);
        if (this.doInfoPrintOutput) this.printOutput(448, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 626 and event "Tunnel_Traffictube1_Lighting.c_3".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge626() {
        var guard = (((((spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._auto)) && ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational))) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_Lightsensor_setting_, 3))) || (((spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonLighting3_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube1_Lighting_setting_, 3));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(449, true);
        if (this.doInfoEvent) this.infoEvent(449, true);

        spec.Tunnel_Traffictube1_Lighting_setting_ = 3;

        if (this.doInfoEvent) this.infoEvent(449, false);
        if (this.doInfoPrintOutput) this.printOutput(449, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 627 and event "Tunnel_Traffictube1_Lighting.c_4".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge627() {
        var guard = ((((spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._auto)) && (((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational)) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_Lightsensor_setting_, 4)))) || (((((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._maintenance))) && ((spec.Tunnel_Traffictube1_Lightsensor_setting_) < (5))) || (((spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonLighting4_Observer_) == (spec.specEnum._pressed))))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube1_Lighting_setting_, 4));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(450, true);
        if (this.doInfoEvent) this.infoEvent(450, true);

        spec.Tunnel_Traffictube1_Lighting_setting_ = 4;

        if (this.doInfoEvent) this.infoEvent(450, false);
        if (this.doInfoPrintOutput) this.printOutput(450, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 628 and event "Tunnel_Traffictube1_Lighting.c_5".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge628() {
        var guard = (((((spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._auto)) && (((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery)))) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_Lightsensor_setting_, 5))) || (((spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonLighting5_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube1_Lighting_setting_, 5));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(451, true);
        if (this.doInfoEvent) this.infoEvent(451, true);

        spec.Tunnel_Traffictube1_Lighting_setting_ = 5;

        if (this.doInfoEvent) this.infoEvent(451, false);
        if (this.doInfoPrintOutput) this.printOutput(451, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 629 and event "Tunnel_Traffictube1_Lighting.c_6".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge629() {
        var guard = ((((spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._auto)) && ((((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery))) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_Lightsensor_setting_, 6)))) || (((((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._support)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._standby))) && ((spec.Tunnel_Traffictube1_Lightsensor_setting_) < (7))) || (((spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonLighting6_Observer_) == (spec.specEnum._pressed))))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube1_Lighting_setting_, 6));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(452, true);
        if (this.doInfoEvent) this.infoEvent(452, true);

        spec.Tunnel_Traffictube1_Lighting_setting_ = 6;

        if (this.doInfoEvent) this.infoEvent(452, false);
        if (this.doInfoPrintOutput) this.printOutput(452, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 630 and event "Tunnel_Traffictube1_Lighting.c_7".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge630() {
        var guard = (((((spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._auto)) && ((((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery))) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._support)))) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_Lightsensor_setting_, 7))) || (((spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonLighting7_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube1_Lighting_setting_, 7));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(453, true);
        if (this.doInfoEvent) this.infoEvent(453, true);

        spec.Tunnel_Traffictube1_Lighting_setting_ = 7;

        if (this.doInfoEvent) this.infoEvent(453, false);
        if (this.doInfoPrintOutput) this.printOutput(453, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 631 and event "Tunnel_Traffictube1_Lighting.c_8".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge631() {
        var guard = ((((spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._auto)) && ((((((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery))) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._support))) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_Lightsensor_setting_, 8))) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._emergency)))) || (((spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonLighting8_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube1_Lighting_setting_, 8));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(454, true);
        if (this.doInfoEvent) this.infoEvent(454, true);

        spec.Tunnel_Traffictube1_Lighting_setting_ = 8;

        if (this.doInfoEvent) this.infoEvent(454, false);
        if (this.doInfoPrintOutput) this.printOutput(454, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 632 and event "Tunnel_Traffictube1_MatrixsignTrafficlight.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge632() {
        var guard = ((((spec.Tunnel_Traffictube1_Trafficlight1_Mode_) == (spec.specEnum._red)) || ((spec.Tunnel_Traffictube1_Trafficlight2_Mode_) == (spec.specEnum._red))) || (((spec.Tunnel_Traffictube1_Trafficlight3_Mode_) == (spec.specEnum._red)) || (((((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube1_Trafficlight1_Mode_) == (spec.specEnum._off))) && ((spec.Tunnel_Traffictube1_Trafficlight2_Mode_) == (spec.specEnum._off))) && ((spec.Tunnel_Traffictube1_Trafficlight3_Mode_) == (spec.specEnum._off))))) && ((spec.Tunnel_Traffictube1_MatrixsignTrafficlight_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(464, true);
        if (this.doInfoEvent) this.infoEvent(464, true);

        spec.Tunnel_Traffictube1_MatrixsignTrafficlight_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(464, false);
        if (this.doInfoPrintOutput) this.printOutput(464, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 633 and event "Tunnel_Traffictube1_MatrixsignTrafficlight.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge633() {
        var guard = (((((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._red)) || ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._flash))) || (((((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube1_Trafficlight1_Mode_) != (spec.specEnum._off))) && ((spec.Tunnel_Traffictube1_Trafficlight2_Mode_) != (spec.specEnum._off))) && ((spec.Tunnel_Traffictube1_Trafficlight3_Mode_) != (spec.specEnum._off)))) && ((spec.Tunnel_Traffictube1_Trafficlight1_Mode_) != (spec.specEnum._red))) && (((spec.Tunnel_Traffictube1_Trafficlight2_Mode_) != (spec.specEnum._red)) && (((spec.Tunnel_Traffictube1_Trafficlight3_Mode_) != (spec.specEnum._red)) && ((spec.Tunnel_Traffictube1_MatrixsignTrafficlight_) == (spec.specEnum._off))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(465, true);
        if (this.doInfoEvent) this.infoEvent(465, true);

        spec.Tunnel_Traffictube1_MatrixsignTrafficlight_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(465, false);
        if (this.doInfoPrintOutput) this.printOutput(465, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 634 and event "Tunnel_Traffictube1_MatrixsignUnpressed.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge634() {
        var guard = (((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube1_Trafficlight1_Mode_) == (spec.specEnum._off))) && (((spec.Tunnel_Traffictube1_Trafficlight2_Mode_) == (spec.specEnum._off)) && (((spec.Tunnel_Traffictube1_Trafficlight3_Mode_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube1_MatrixsignUnpressed_) == (spec.specEnum._on))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(466, true);
        if (this.doInfoEvent) this.infoEvent(466, true);

        spec.Tunnel_Traffictube1_MatrixsignUnpressed_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(466, false);
        if (this.doInfoPrintOutput) this.printOutput(466, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 635 and event "Tunnel_Traffictube1_MatrixsignUnpressed.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge635() {
        var guard = (((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._red)) || ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._flash))) && ((spec.Tunnel_Traffictube1_MatrixsignUnpressed_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(467, true);
        if (this.doInfoEvent) this.infoEvent(467, true);

        spec.Tunnel_Traffictube1_MatrixsignUnpressed_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(467, false);
        if (this.doInfoPrintOutput) this.printOutput(467, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 636 and event "Tunnel_Traffictube1_ModeTraffictube.c_emergency".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge636() {
        var guard = ((((spec.Tunnel_Traffictube1_PopUp_ButtonAccept_Observer_) == (spec.specEnum._pressed)) || ((spec.Tunnel_Traffictube1_PopUp_Timer_) == (spec.specEnum._finished))) && ((spec.Tunnel_Traffictube2_ModeTraffictube_) != (spec.specEnum._emergency))) && (((spec.Tunnel_Traffictube2_ModeTraffictube_) != (spec.specEnum._evacuation)) && ((((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._standby))) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(468, true);
        if (this.doInfoEvent) this.infoEvent(468, true);

        if ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._stopped)) {
            spec.Tunnel_Traffictube1_AccessBoombarriers_ = spec.specEnum._closing;
        } else if ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._opening)) {
            spec.Tunnel_Traffictube1_AccessBoombarriers_ = spec.specEnum._closing;
        } else if ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._closing)) {
            spec.Tunnel_Traffictube1_AccessBoombarriers_ = spec.specEnum._closing;
        } else if ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally)) {
            spec.Tunnel_Traffictube1_AccessBoombarriers_ = spec.specEnum._closingUnconditionally;
        }
        if ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._off)) {
            spec.Tunnel_Traffictube1_AccessTrafficlights_ = spec.specEnum._red;
        } else if ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._flash)) {
            spec.Tunnel_Traffictube1_AccessTrafficlights_ = spec.specEnum._red;
        } else if ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._red)) {
            spec.Tunnel_Traffictube1_AccessTrafficlights_ = spec.specEnum._red;
        }
        if ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational)) {
            spec.Tunnel_Traffictube1_ModeTraffictube_ = spec.specEnum._emergency;
        } else if ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._standby)) {
            spec.Tunnel_Traffictube1_ModeTraffictube_ = spec.specEnum._emergency;
        } else if ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery)) {
            spec.Tunnel_Traffictube1_ModeTraffictube_ = spec.specEnum._emergency;
        }

        if (this.doInfoEvent) this.infoEvent(468, false);
        if (this.doInfoPrintOutput) this.printOutput(468, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 637 and event "Tunnel_Traffictube1_ModeTraffictube.c_evacuation".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge637() {
        var guard = ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._support)) && (((spec.Tunnel_Traffictube1_ButtonEvacuation_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._emergency)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(469, true);
        if (this.doInfoEvent) this.infoEvent(469, true);

        spec.Tunnel_Traffictube1_ModeTraffictube_ = spec.specEnum._evacuation;

        if (this.doInfoEvent) this.infoEvent(469, false);
        if (this.doInfoPrintOutput) this.printOutput(469, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 638 and event "Tunnel_Traffictube1_ModeTraffictube.c_evacuationEmergency".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge638() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonEmergency_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._evacuation));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(470, true);
        if (this.doInfoEvent) this.infoEvent(470, true);

        spec.Tunnel_Traffictube1_ModeTraffictube_ = spec.specEnum._emergency;

        if (this.doInfoEvent) this.infoEvent(470, false);
        if (this.doInfoPrintOutput) this.printOutput(470, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 639 and event "Tunnel_Traffictube1_ModeTraffictube.c_maintenance".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge639() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonMaintenance_Observer_) == (spec.specEnum._pressed)) && (((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(471, true);
        if (this.doInfoEvent) this.infoEvent(471, true);

        if ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational)) {
            spec.Tunnel_Traffictube1_ModeTraffictube_ = spec.specEnum._maintenance;
        } else if ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery)) {
            spec.Tunnel_Traffictube1_ModeTraffictube_ = spec.specEnum._maintenance;
        }

        if (this.doInfoEvent) this.infoEvent(471, false);
        if (this.doInfoPrintOutput) this.printOutput(471, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 640 and event "Tunnel_Traffictube1_ModeTraffictube.c_operational".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge640() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonOperational_Observer_) == (spec.specEnum._pressed)) && (((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._standby)) || (((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._maintenance))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(472, true);
        if (this.doInfoEvent) this.infoEvent(472, true);

        if ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._standby)) {
            spec.Tunnel_Traffictube1_ModeTraffictube_ = spec.specEnum._operational;
        } else if ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery)) {
            spec.Tunnel_Traffictube1_ModeTraffictube_ = spec.specEnum._operational;
        } else if ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._maintenance)) {
            spec.Tunnel_Traffictube1_ModeTraffictube_ = spec.specEnum._operational;
        }

        if (this.doInfoEvent) this.infoEvent(472, false);
        if (this.doInfoPrintOutput) this.printOutput(472, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 641 and event "Tunnel_Traffictube1_ModeTraffictube.c_recovery".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge641() {
        var guard = ((((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._emergency)) && ((spec.Tunnel_Traffictube1_ButtonRecovery_Observer_) == (spec.specEnum._pressed))) || ((((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._support)) && ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery))) || (((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._maintenance)) && ((spec.Tunnel_Traffictube1_ButtonRecovery_Observer_) == (spec.specEnum._pressed))))) && (((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._emergency)) || (((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._support)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._maintenance))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(473, true);
        if (this.doInfoEvent) this.infoEvent(473, true);

        if ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._emergency)) {
            spec.Tunnel_Traffictube1_ModeTraffictube_ = spec.specEnum._recovery;
        } else if ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._support)) {
            spec.Tunnel_Traffictube1_ModeTraffictube_ = spec.specEnum._recovery;
        } else if ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._maintenance)) {
            spec.Tunnel_Traffictube1_ModeTraffictube_ = spec.specEnum._recovery;
        }

        if (this.doInfoEvent) this.infoEvent(473, false);
        if (this.doInfoPrintOutput) this.printOutput(473, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 642 and event "Tunnel_Traffictube1_ModeTraffictube.c_standby".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge642() {
        var guard = (((((spec.Tunnel_Traffictube1_Smokedetection_setting_) > (3)) || ((spec.Tunnel_Traffictube1_EmergencyCabinetA_HandheldExtinguisher_) == (spec.specEnum._on))) || ((spec.Tunnel_Traffictube1_EmergencyCabinetA_Firehose_) == (spec.specEnum._on))) || ((spec.Tunnel_Traffictube1_EmergencyCabinetC_HandheldExtinguisher_) == (spec.specEnum._on))) && (((spec.Tunnel_Traffictube2_ModeTraffictube_) != (spec.specEnum._emergency)) && (((spec.Tunnel_Traffictube2_ModeTraffictube_) != (spec.specEnum._evacuation)) && ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(474, true);
        if (this.doInfoEvent) this.infoEvent(474, true);

        spec.Tunnel_Traffictube1_ModeTraffictube_ = spec.specEnum._standby;

        if (this.doInfoEvent) this.infoEvent(474, false);
        if (this.doInfoPrintOutput) this.printOutput(474, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 643 and event "Tunnel_Traffictube1_ModeTraffictube.c_support".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge643() {
        var guard = ((((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._emergency)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._evacuation))) && ((spec.Tunnel_Traffictube1_ModeTraffictube_) != (spec.specEnum._emergency))) && ((((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._standby))) || (((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._maintenance))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(475, true);
        if (this.doInfoEvent) this.infoEvent(475, true);

        if ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._stopped)) {
            spec.Tunnel_Traffictube1_AccessBoombarriers_ = spec.specEnum._closing;
        } else if ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._opening)) {
            spec.Tunnel_Traffictube1_AccessBoombarriers_ = spec.specEnum._closing;
        } else if ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._closing)) {
            spec.Tunnel_Traffictube1_AccessBoombarriers_ = spec.specEnum._closing;
        } else if ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally)) {
            spec.Tunnel_Traffictube1_AccessBoombarriers_ = spec.specEnum._closingUnconditionally;
        }
        if ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._off)) {
            spec.Tunnel_Traffictube1_AccessTrafficlights_ = spec.specEnum._red;
        } else if ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._flash)) {
            spec.Tunnel_Traffictube1_AccessTrafficlights_ = spec.specEnum._red;
        } else if ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._red)) {
            spec.Tunnel_Traffictube1_AccessTrafficlights_ = spec.specEnum._red;
        }
        if ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational)) {
            spec.Tunnel_Traffictube1_ModeTraffictube_ = spec.specEnum._support;
        } else if ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._standby)) {
            spec.Tunnel_Traffictube1_ModeTraffictube_ = spec.specEnum._support;
        } else if ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery)) {
            spec.Tunnel_Traffictube1_ModeTraffictube_ = spec.specEnum._support;
        } else if ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._maintenance)) {
            spec.Tunnel_Traffictube1_ModeTraffictube_ = spec.specEnum._support;
        }

        if (this.doInfoEvent) this.infoEvent(475, false);
        if (this.doInfoPrintOutput) this.printOutput(475, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 644 and event "Tunnel_Traffictube1_PopUp_ButtonAccept_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge644() {
        var guard = ((spec.Tunnel_Traffictube1_PopUp_ButtonAccept_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_PopUp_ButtonAccept_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(477, true);
        if (this.doInfoEvent) this.infoEvent(477, true);

        spec.Tunnel_Traffictube1_PopUp_ButtonAccept_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(477, false);
        if (this.doInfoPrintOutput) this.printOutput(477, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 645 and event "Tunnel_Traffictube1_PopUp_ButtonAccept_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge645() {
        var guard = ((spec.Tunnel_Traffictube1_PopUp_ButtonAccept_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_PopUp_ButtonAccept_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(478, true);
        if (this.doInfoEvent) this.infoEvent(478, true);

        spec.Tunnel_Traffictube1_PopUp_ButtonAccept_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(478, false);
        if (this.doInfoPrintOutput) this.printOutput(478, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 646 and event "Tunnel_Traffictube1_PopUp_ButtonReject_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge646() {
        var guard = ((spec.Tunnel_Traffictube1_PopUp_ButtonReject_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_PopUp_ButtonReject_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(480, true);
        if (this.doInfoEvent) this.infoEvent(480, true);

        spec.Tunnel_Traffictube1_PopUp_ButtonReject_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(480, false);
        if (this.doInfoPrintOutput) this.printOutput(480, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 647 and event "Tunnel_Traffictube1_PopUp_ButtonReject_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge647() {
        var guard = ((spec.Tunnel_Traffictube1_PopUp_ButtonReject_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube1_PopUp_ButtonReject_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(481, true);
        if (this.doInfoEvent) this.infoEvent(481, true);

        spec.Tunnel_Traffictube1_PopUp_ButtonReject_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(481, false);
        if (this.doInfoPrintOutput) this.printOutput(481, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 648 and event "Tunnel_Traffictube1_PopUp_Timer.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge648() {
        var guard = ((spec.Tunnel_Traffictube1_PopUp_Window_) == (spec.specEnum._on)) && ((spec.Tunnel_Traffictube1_PopUp_Timer_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(482, true);
        if (this.doInfoEvent) this.infoEvent(482, true);

        spec.Tunnel_Traffictube1_PopUp_Timer_ = spec.specEnum._running;

        if (this.doInfoEvent) this.infoEvent(482, false);
        if (this.doInfoPrintOutput) this.printOutput(482, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 649 and event "Tunnel_Traffictube1_PopUp_Timer.c_reset".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge649() {
        var guard = ((spec.Tunnel_Traffictube1_PopUp_Window_) == (spec.specEnum._off)) && (((spec.Tunnel_Traffictube1_PopUp_Timer_) == (spec.specEnum._running)) || ((spec.Tunnel_Traffictube1_PopUp_Timer_) == (spec.specEnum._finished)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(483, true);
        if (this.doInfoEvent) this.infoEvent(483, true);

        if ((spec.Tunnel_Traffictube1_PopUp_Timer_) == (spec.specEnum._running)) {
            spec.Tunnel_Traffictube1_PopUp_Timer_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube1_PopUp_Timer_) == (spec.specEnum._finished)) {
            spec.Tunnel_Traffictube1_PopUp_Timer_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(483, false);
        if (this.doInfoPrintOutput) this.printOutput(483, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 650 and event "Tunnel_Traffictube1_PopUp_Window.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge650() {
        var guard = ((((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._emergency)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._support))) || ((spec.Tunnel_Traffictube1_PopUp_ButtonReject_Observer_) == (spec.specEnum._pressed))) && (((((spec.Tunnel_Traffictube1_PopUp_ButtonAccept_Observer_) == (spec.specEnum._pressed)) || ((spec.Tunnel_Traffictube1_PopUp_ButtonReject_Observer_) == (spec.specEnum._pressed))) || ((spec.Tunnel_Traffictube1_PopUp_Timer_) == (spec.specEnum._finished))) && ((spec.Tunnel_Traffictube1_PopUp_Window_) == (spec.specEnum._on)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(485, true);
        if (this.doInfoEvent) this.infoEvent(485, true);

        spec.Tunnel_Traffictube1_PopUp_Window_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(485, false);
        if (this.doInfoPrintOutput) this.printOutput(485, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 651 and event "Tunnel_Traffictube1_PopUp_Window.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge651() {
        var guard = (((spec.Tunnel_Traffictube1_ButtonEmergency_Observer_) == (spec.specEnum._pressed)) || ((((((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational)) && ((spec.Tunnel_Traffictube1_Standstilldetection_) != (spec.specEnum._off))) && ((spec.Tunnel_Traffictube1_Smokedetection_setting_) > (3))) && (((spec.Tunnel_Traffictube1_EmergencyCabinetA_SensorOpen_) == (spec.specEnum._on)) || ((spec.Tunnel_Traffictube1_EmergencyCabinetC_SensorOpen_) == (spec.specEnum._on)))) && ((((((spec.Tunnel_Traffictube1_EmergencyCabinetA_HandheldExtinguisher_) == (spec.specEnum._on)) || ((spec.Tunnel_Traffictube1_EmergencyCabinetA_Firehose_) == (spec.specEnum._on))) || ((spec.Tunnel_Traffictube1_EmergencyCabinetA_Phone_) == (spec.specEnum._on))) || ((spec.Tunnel_Traffictube1_EmergencyCabinetC_HandheldExtinguisher_) == (spec.specEnum._on))) || ((spec.Tunnel_Traffictube1_EmergencyCabinetC_Phone_) == (spec.specEnum._on))))) && (((spec.Tunnel_Traffictube1_PopUp_ButtonAccept_Observer_) == (spec.specEnum._unpressed)) && (((spec.Tunnel_Traffictube1_PopUp_ButtonReject_Observer_) == (spec.specEnum._unpressed)) && ((spec.Tunnel_Traffictube1_PopUp_Window_) == (spec.specEnum._off))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(486, true);
        if (this.doInfoEvent) this.infoEvent(486, true);

        spec.Tunnel_Traffictube1_PopUp_Window_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(486, false);
        if (this.doInfoPrintOutput) this.printOutput(486, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 652 and event "Tunnel_Traffictube1_Recorder.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge652() {
        var guard = (((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery))) && ((spec.Tunnel_Traffictube1_Recorder_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(487, true);
        if (this.doInfoEvent) this.infoEvent(487, true);

        spec.Tunnel_Traffictube1_Recorder_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(487, false);
        if (this.doInfoPrintOutput) this.printOutput(487, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 653 and event "Tunnel_Traffictube1_Recorder.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge653() {
        var guard = (((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._emergency)) || (((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._evacuation)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._support)))) && ((spec.Tunnel_Traffictube1_Recorder_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(488, true);
        if (this.doInfoEvent) this.infoEvent(488, true);

        spec.Tunnel_Traffictube1_Recorder_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(488, false);
        if (this.doInfoPrintOutput) this.printOutput(488, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 654 and event "Tunnel_Traffictube1_SwitchTimerAudio.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge654() {
        var guard = ((spec.Tunnel_Traffictube1_ModeTraffictube_) != (spec.specEnum._evacuation)) && (((spec.Tunnel_Traffictube1_SwitchTimerAudio_) == (spec.specEnum._on1)) || ((spec.Tunnel_Traffictube1_SwitchTimerAudio_) == (spec.specEnum._on2)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(501, true);
        if (this.doInfoEvent) this.infoEvent(501, true);

        if ((spec.Tunnel_Traffictube1_SwitchTimerAudio_) == (spec.specEnum._on1)) {
            spec.Tunnel_Traffictube1_SwitchTimerAudio_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube1_SwitchTimerAudio_) == (spec.specEnum._on2)) {
            spec.Tunnel_Traffictube1_SwitchTimerAudio_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(501, false);
        if (this.doInfoPrintOutput) this.printOutput(501, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 655 and event "Tunnel_Traffictube1_SwitchTimerAudio.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge655() {
        var guard = ((spec.Tunnel_Traffictube1_ButtonEvacuation_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube1_SwitchTimerAudio_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(502, true);
        if (this.doInfoEvent) this.infoEvent(502, true);

        spec.Tunnel_Traffictube1_SwitchTimerAudio_ = spec.specEnum._on1;

        if (this.doInfoEvent) this.infoEvent(502, false);
        if (this.doInfoPrintOutput) this.printOutput(502, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 656 and event "Tunnel_Traffictube1_TimerCameraViewEven.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge656() {
        var guard = (((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera2)) || (((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera4)) || ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera6)))) && ((spec.Tunnel_Traffictube1_TimerCameraViewEven_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(504, true);
        if (this.doInfoEvent) this.infoEvent(504, true);

        spec.Tunnel_Traffictube1_TimerCameraViewEven_ = spec.specEnum._running;

        if (this.doInfoEvent) this.infoEvent(504, false);
        if (this.doInfoPrintOutput) this.printOutput(504, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 657 and event "Tunnel_Traffictube1_TimerCameraViewEven.c_reset".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge657() {
        var guard = ((((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera1)) || ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera3))) || (((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera5)) || ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._off)))) && (((spec.Tunnel_Traffictube1_TimerCameraViewEven_) == (spec.specEnum._running)) || ((spec.Tunnel_Traffictube1_TimerCameraViewEven_) == (spec.specEnum._finished)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(505, true);
        if (this.doInfoEvent) this.infoEvent(505, true);

        if ((spec.Tunnel_Traffictube1_TimerCameraViewEven_) == (spec.specEnum._running)) {
            spec.Tunnel_Traffictube1_TimerCameraViewEven_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube1_TimerCameraViewEven_) == (spec.specEnum._finished)) {
            spec.Tunnel_Traffictube1_TimerCameraViewEven_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(505, false);
        if (this.doInfoPrintOutput) this.printOutput(505, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 658 and event "Tunnel_Traffictube1_TimerCameraViewUneven.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge658() {
        var guard = (((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera1)) || (((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera3)) || ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera5)))) && ((spec.Tunnel_Traffictube1_TimerCameraViewUneven_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(507, true);
        if (this.doInfoEvent) this.infoEvent(507, true);

        spec.Tunnel_Traffictube1_TimerCameraViewUneven_ = spec.specEnum._running;

        if (this.doInfoEvent) this.infoEvent(507, false);
        if (this.doInfoPrintOutput) this.printOutput(507, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 659 and event "Tunnel_Traffictube1_TimerCameraViewUneven.c_reset".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge659() {
        var guard = ((((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera2)) || ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera4))) || (((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera6)) || ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._off)))) && (((spec.Tunnel_Traffictube1_TimerCameraViewUneven_) == (spec.specEnum._running)) || ((spec.Tunnel_Traffictube1_TimerCameraViewUneven_) == (spec.specEnum._finished)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(508, true);
        if (this.doInfoEvent) this.infoEvent(508, true);

        if ((spec.Tunnel_Traffictube1_TimerCameraViewUneven_) == (spec.specEnum._running)) {
            spec.Tunnel_Traffictube1_TimerCameraViewUneven_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube1_TimerCameraViewUneven_) == (spec.specEnum._finished)) {
            spec.Tunnel_Traffictube1_TimerCameraViewUneven_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(508, false);
        if (this.doInfoPrintOutput) this.printOutput(508, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 660 and event "Tunnel_Traffictube1_Trafficlight1_Mode.c_flash".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge660() {
        var guard = (((((spec.Tunnel_Traffictube1_RequirementsTrafficlight1_red_()) && ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._off))) || ((spec.Tunnel_Traffictube1_RequirementsTrafficlight1_off_()) && ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._red)))) || ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._flash))) && (!((spec.Tunnel_Traffictube1_RequirementsTrafficlight1_red_()) && (!(spec.Tunnel_Traffictube1_Boombarrier1_open_()))))) && (((!((spec.Tunnel_Traffictube1_RequirementsTrafficlight1_red_()) && (!(spec.Tunnel_Traffictube1_Boombarrier2_open_())))) && ((spec.Tunnel_Traffictube1_J32_Mode_) != (spec.specEnum._off))) && ((!((spec.Tunnel_Traffictube1_RequirementsTrafficlight1_off_()) && ((spec.Tunnel_Traffictube1_J32_TimerReleaseSignal_) != (spec.specEnum._finished)))) && (((spec.Tunnel_Traffictube1_Trafficlight1_Mode_) == (spec.specEnum._off)) || (((spec.Tunnel_Traffictube1_Trafficlight1_Mode_) == (spec.specEnum._yellow)) || ((spec.Tunnel_Traffictube1_Trafficlight1_Mode_) == (spec.specEnum._red))))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(510, true);
        if (this.doInfoEvent) this.infoEvent(510, true);

        if ((spec.Tunnel_Traffictube1_Trafficlight1_Mode_) == (spec.specEnum._off)) {
            spec.Tunnel_Traffictube1_Trafficlight1_Mode_ = spec.specEnum._flash;
        } else if ((spec.Tunnel_Traffictube1_Trafficlight1_Mode_) == (spec.specEnum._yellow)) {
            spec.Tunnel_Traffictube1_Trafficlight1_Mode_ = spec.specEnum._flash;
        } else if ((spec.Tunnel_Traffictube1_Trafficlight1_Mode_) == (spec.specEnum._red)) {
            spec.Tunnel_Traffictube1_Trafficlight1_Mode_ = spec.specEnum._flash;
        }

        if (this.doInfoEvent) this.infoEvent(510, false);
        if (this.doInfoPrintOutput) this.printOutput(510, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 661 and event "Tunnel_Traffictube1_Trafficlight1_Mode.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge661() {
        var guard = ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube1_Trafficlight1_Mode_) == (spec.specEnum._flash));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(511, true);
        if (this.doInfoEvent) this.infoEvent(511, true);

        spec.Tunnel_Traffictube1_Trafficlight1_Mode_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(511, false);
        if (this.doInfoPrintOutput) this.printOutput(511, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 662 and event "Tunnel_Traffictube1_Trafficlight1_Mode.c_red".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge662() {
        var guard = (spec.Tunnel_Traffictube1_Trafficlight1_Mode_) == (spec.specEnum._yellow);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(512, true);
        if (this.doInfoEvent) this.infoEvent(512, true);

        spec.Tunnel_Traffictube1_Trafficlight1_Mode_ = spec.specEnum._red;

        if (this.doInfoEvent) this.infoEvent(512, false);
        if (this.doInfoPrintOutput) this.printOutput(512, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 663 and event "Tunnel_Traffictube1_Trafficlight1_Mode.c_yellow".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge663() {
        var guard = ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._red)) && ((spec.Tunnel_Traffictube1_Trafficlight1_Mode_) == (spec.specEnum._flash));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(513, true);
        if (this.doInfoEvent) this.infoEvent(513, true);

        spec.Tunnel_Traffictube1_Trafficlight1_Mode_ = spec.specEnum._yellow;

        if (this.doInfoEvent) this.infoEvent(513, false);
        if (this.doInfoPrintOutput) this.printOutput(513, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 664 and event "Tunnel_Traffictube1_Trafficlight1_TimerReleaseSignal.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge664() {
        var guard = ((spec.Tunnel_Traffictube1_Trafficlight1_Mode_) == (spec.specEnum._red)) && ((spec.Tunnel_Traffictube1_Trafficlight1_TimerReleaseSignal_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(516, true);
        if (this.doInfoEvent) this.infoEvent(516, true);

        spec.Tunnel_Traffictube1_Trafficlight1_TimerReleaseSignal_ = spec.specEnum._running;

        if (this.doInfoEvent) this.infoEvent(516, false);
        if (this.doInfoPrintOutput) this.printOutput(516, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 665 and event "Tunnel_Traffictube1_Trafficlight1_TimerReleaseSignal.c_reset".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge665() {
        var guard = ((spec.Tunnel_Traffictube1_Trafficlight1_Mode_) != (spec.specEnum._red)) && (((spec.Tunnel_Traffictube1_Trafficlight1_TimerReleaseSignal_) == (spec.specEnum._running)) || ((spec.Tunnel_Traffictube1_Trafficlight1_TimerReleaseSignal_) == (spec.specEnum._finished)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(517, true);
        if (this.doInfoEvent) this.infoEvent(517, true);

        if ((spec.Tunnel_Traffictube1_Trafficlight1_TimerReleaseSignal_) == (spec.specEnum._running)) {
            spec.Tunnel_Traffictube1_Trafficlight1_TimerReleaseSignal_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube1_Trafficlight1_TimerReleaseSignal_) == (spec.specEnum._finished)) {
            spec.Tunnel_Traffictube1_Trafficlight1_TimerReleaseSignal_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(517, false);
        if (this.doInfoPrintOutput) this.printOutput(517, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 666 and event "Tunnel_Traffictube1_Trafficlight2_Mode.c_flash".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge666() {
        var guard = (((((spec.Tunnel_Traffictube1_RequirementsTrafficlight2_red_()) && ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._off))) || ((spec.Tunnel_Traffictube1_RequirementsTrafficlight2_off_()) && ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._red)))) || ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._flash))) && (!((spec.Tunnel_Traffictube1_RequirementsTrafficlight2_red_()) && (!(spec.Tunnel_Traffictube1_Boombarrier1_open_()))))) && (((!((spec.Tunnel_Traffictube1_RequirementsTrafficlight2_red_()) && (!(spec.Tunnel_Traffictube1_Boombarrier2_open_())))) && ((spec.Tunnel_Traffictube1_J32_Mode_) != (spec.specEnum._off))) && ((!((spec.Tunnel_Traffictube1_RequirementsTrafficlight2_off_()) && ((spec.Tunnel_Traffictube1_J32_TimerReleaseSignal_) != (spec.specEnum._finished)))) && (((spec.Tunnel_Traffictube1_Trafficlight2_Mode_) == (spec.specEnum._off)) || (((spec.Tunnel_Traffictube1_Trafficlight2_Mode_) == (spec.specEnum._yellow)) || ((spec.Tunnel_Traffictube1_Trafficlight2_Mode_) == (spec.specEnum._red))))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(519, true);
        if (this.doInfoEvent) this.infoEvent(519, true);

        if ((spec.Tunnel_Traffictube1_Trafficlight2_Mode_) == (spec.specEnum._off)) {
            spec.Tunnel_Traffictube1_Trafficlight2_Mode_ = spec.specEnum._flash;
        } else if ((spec.Tunnel_Traffictube1_Trafficlight2_Mode_) == (spec.specEnum._yellow)) {
            spec.Tunnel_Traffictube1_Trafficlight2_Mode_ = spec.specEnum._flash;
        } else if ((spec.Tunnel_Traffictube1_Trafficlight2_Mode_) == (spec.specEnum._red)) {
            spec.Tunnel_Traffictube1_Trafficlight2_Mode_ = spec.specEnum._flash;
        }

        if (this.doInfoEvent) this.infoEvent(519, false);
        if (this.doInfoPrintOutput) this.printOutput(519, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 667 and event "Tunnel_Traffictube1_Trafficlight2_Mode.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge667() {
        var guard = ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube1_Trafficlight2_Mode_) == (spec.specEnum._flash));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(520, true);
        if (this.doInfoEvent) this.infoEvent(520, true);

        spec.Tunnel_Traffictube1_Trafficlight2_Mode_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(520, false);
        if (this.doInfoPrintOutput) this.printOutput(520, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 668 and event "Tunnel_Traffictube1_Trafficlight2_Mode.c_red".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge668() {
        var guard = (spec.Tunnel_Traffictube1_Trafficlight2_Mode_) == (spec.specEnum._yellow);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(521, true);
        if (this.doInfoEvent) this.infoEvent(521, true);

        spec.Tunnel_Traffictube1_Trafficlight2_Mode_ = spec.specEnum._red;

        if (this.doInfoEvent) this.infoEvent(521, false);
        if (this.doInfoPrintOutput) this.printOutput(521, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 669 and event "Tunnel_Traffictube1_Trafficlight2_Mode.c_yellow".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge669() {
        var guard = ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._red)) && ((spec.Tunnel_Traffictube1_Trafficlight2_Mode_) == (spec.specEnum._flash));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(522, true);
        if (this.doInfoEvent) this.infoEvent(522, true);

        spec.Tunnel_Traffictube1_Trafficlight2_Mode_ = spec.specEnum._yellow;

        if (this.doInfoEvent) this.infoEvent(522, false);
        if (this.doInfoPrintOutput) this.printOutput(522, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 670 and event "Tunnel_Traffictube1_Trafficlight2_TimerReleaseSignal.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge670() {
        var guard = ((spec.Tunnel_Traffictube1_Trafficlight2_Mode_) == (spec.specEnum._red)) && ((spec.Tunnel_Traffictube1_Trafficlight2_TimerReleaseSignal_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(525, true);
        if (this.doInfoEvent) this.infoEvent(525, true);

        spec.Tunnel_Traffictube1_Trafficlight2_TimerReleaseSignal_ = spec.specEnum._running;

        if (this.doInfoEvent) this.infoEvent(525, false);
        if (this.doInfoPrintOutput) this.printOutput(525, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 671 and event "Tunnel_Traffictube1_Trafficlight2_TimerReleaseSignal.c_reset".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge671() {
        var guard = ((spec.Tunnel_Traffictube1_Trafficlight2_Mode_) != (spec.specEnum._red)) && (((spec.Tunnel_Traffictube1_Trafficlight2_TimerReleaseSignal_) == (spec.specEnum._running)) || ((spec.Tunnel_Traffictube1_Trafficlight2_TimerReleaseSignal_) == (spec.specEnum._finished)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(526, true);
        if (this.doInfoEvent) this.infoEvent(526, true);

        if ((spec.Tunnel_Traffictube1_Trafficlight2_TimerReleaseSignal_) == (spec.specEnum._running)) {
            spec.Tunnel_Traffictube1_Trafficlight2_TimerReleaseSignal_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube1_Trafficlight2_TimerReleaseSignal_) == (spec.specEnum._finished)) {
            spec.Tunnel_Traffictube1_Trafficlight2_TimerReleaseSignal_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(526, false);
        if (this.doInfoPrintOutput) this.printOutput(526, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 672 and event "Tunnel_Traffictube1_Trafficlight3_Mode.c_flash".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge672() {
        var guard = (((((spec.Tunnel_Traffictube1_RequirementsTrafficlight3_red_()) && ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._off))) || ((spec.Tunnel_Traffictube1_RequirementsTrafficlight3_off_()) && ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._red)))) || ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._flash))) && (!((spec.Tunnel_Traffictube1_RequirementsTrafficlight3_red_()) && (!(spec.Tunnel_Traffictube1_Boombarrier1_open_()))))) && (((!((spec.Tunnel_Traffictube1_RequirementsTrafficlight3_red_()) && (!(spec.Tunnel_Traffictube1_Boombarrier2_open_())))) && ((spec.Tunnel_Traffictube1_J32_Mode_) != (spec.specEnum._off))) && ((!((spec.Tunnel_Traffictube1_RequirementsTrafficlight3_off_()) && ((spec.Tunnel_Traffictube1_J32_TimerReleaseSignal_) != (spec.specEnum._finished)))) && (((spec.Tunnel_Traffictube1_Trafficlight3_Mode_) == (spec.specEnum._off)) || (((spec.Tunnel_Traffictube1_Trafficlight3_Mode_) == (spec.specEnum._yellow)) || ((spec.Tunnel_Traffictube1_Trafficlight3_Mode_) == (spec.specEnum._red))))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(528, true);
        if (this.doInfoEvent) this.infoEvent(528, true);

        if ((spec.Tunnel_Traffictube1_Trafficlight3_Mode_) == (spec.specEnum._off)) {
            spec.Tunnel_Traffictube1_Trafficlight3_Mode_ = spec.specEnum._flash;
        } else if ((spec.Tunnel_Traffictube1_Trafficlight3_Mode_) == (spec.specEnum._yellow)) {
            spec.Tunnel_Traffictube1_Trafficlight3_Mode_ = spec.specEnum._flash;
        } else if ((spec.Tunnel_Traffictube1_Trafficlight3_Mode_) == (spec.specEnum._red)) {
            spec.Tunnel_Traffictube1_Trafficlight3_Mode_ = spec.specEnum._flash;
        }

        if (this.doInfoEvent) this.infoEvent(528, false);
        if (this.doInfoPrintOutput) this.printOutput(528, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 673 and event "Tunnel_Traffictube1_Trafficlight3_Mode.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge673() {
        var guard = ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube1_Trafficlight3_Mode_) == (spec.specEnum._flash));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(529, true);
        if (this.doInfoEvent) this.infoEvent(529, true);

        spec.Tunnel_Traffictube1_Trafficlight3_Mode_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(529, false);
        if (this.doInfoPrintOutput) this.printOutput(529, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 674 and event "Tunnel_Traffictube1_Trafficlight3_Mode.c_red".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge674() {
        var guard = (spec.Tunnel_Traffictube1_Trafficlight3_Mode_) == (spec.specEnum._yellow);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(530, true);
        if (this.doInfoEvent) this.infoEvent(530, true);

        spec.Tunnel_Traffictube1_Trafficlight3_Mode_ = spec.specEnum._red;

        if (this.doInfoEvent) this.infoEvent(530, false);
        if (this.doInfoPrintOutput) this.printOutput(530, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 675 and event "Tunnel_Traffictube1_Trafficlight3_Mode.c_yellow".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge675() {
        var guard = ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._red)) && ((spec.Tunnel_Traffictube1_Trafficlight3_Mode_) == (spec.specEnum._flash));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(531, true);
        if (this.doInfoEvent) this.infoEvent(531, true);

        spec.Tunnel_Traffictube1_Trafficlight3_Mode_ = spec.specEnum._yellow;

        if (this.doInfoEvent) this.infoEvent(531, false);
        if (this.doInfoPrintOutput) this.printOutput(531, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 676 and event "Tunnel_Traffictube1_Trafficlight3_TimerReleaseSignal.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge676() {
        var guard = ((spec.Tunnel_Traffictube1_Trafficlight3_Mode_) == (spec.specEnum._red)) && ((spec.Tunnel_Traffictube1_Trafficlight3_TimerReleaseSignal_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(534, true);
        if (this.doInfoEvent) this.infoEvent(534, true);

        spec.Tunnel_Traffictube1_Trafficlight3_TimerReleaseSignal_ = spec.specEnum._running;

        if (this.doInfoEvent) this.infoEvent(534, false);
        if (this.doInfoPrintOutput) this.printOutput(534, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 677 and event "Tunnel_Traffictube1_Trafficlight3_TimerReleaseSignal.c_reset".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge677() {
        var guard = ((spec.Tunnel_Traffictube1_Trafficlight3_Mode_) != (spec.specEnum._red)) && (((spec.Tunnel_Traffictube1_Trafficlight3_TimerReleaseSignal_) == (spec.specEnum._running)) || ((spec.Tunnel_Traffictube1_Trafficlight3_TimerReleaseSignal_) == (spec.specEnum._finished)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(535, true);
        if (this.doInfoEvent) this.infoEvent(535, true);

        if ((spec.Tunnel_Traffictube1_Trafficlight3_TimerReleaseSignal_) == (spec.specEnum._running)) {
            spec.Tunnel_Traffictube1_Trafficlight3_TimerReleaseSignal_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube1_Trafficlight3_TimerReleaseSignal_) == (spec.specEnum._finished)) {
            spec.Tunnel_Traffictube1_Trafficlight3_TimerReleaseSignal_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(535, false);
        if (this.doInfoPrintOutput) this.printOutput(535, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 678 and event "Tunnel_Traffictube1_Ventilation.c_0".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge678() {
        var guard = (((((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto)) && ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational))) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_Smokedetection_setting_, 0))) || (((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonVentilation0_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube1_Ventilation_setting_, 0));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(537, true);
        if (this.doInfoEvent) this.infoEvent(537, true);

        spec.Tunnel_Traffictube1_Ventilation_setting_ = 0;

        if (this.doInfoEvent) this.infoEvent(537, false);
        if (this.doInfoPrintOutput) this.printOutput(537, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 679 and event "Tunnel_Traffictube1_Ventilation.c_1".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge679() {
        var guard = (((((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto)) && ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational))) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_Smokedetection_setting_, 1))) || (((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonVentilation1_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube1_Ventilation_setting_, 1));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(538, true);
        if (this.doInfoEvent) this.infoEvent(538, true);

        spec.Tunnel_Traffictube1_Ventilation_setting_ = 1;

        if (this.doInfoEvent) this.infoEvent(538, false);
        if (this.doInfoPrintOutput) this.printOutput(538, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 680 and event "Tunnel_Traffictube1_Ventilation.c_2".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge680() {
        var guard = (((((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto)) && ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational))) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_Smokedetection_setting_, 2))) || (((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonVentilation2_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube1_Ventilation_setting_, 2));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(539, true);
        if (this.doInfoEvent) this.infoEvent(539, true);

        spec.Tunnel_Traffictube1_Ventilation_setting_ = 2;

        if (this.doInfoEvent) this.infoEvent(539, false);
        if (this.doInfoPrintOutput) this.printOutput(539, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 681 and event "Tunnel_Traffictube1_Ventilation.c_3".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge681() {
        var guard = (((((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto)) && ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational))) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_Smokedetection_setting_, 3))) || (((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonVentilation3_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube1_Ventilation_setting_, 3));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(540, true);
        if (this.doInfoEvent) this.infoEvent(540, true);

        spec.Tunnel_Traffictube1_Ventilation_setting_ = 3;

        if (this.doInfoEvent) this.infoEvent(540, false);
        if (this.doInfoPrintOutput) this.printOutput(540, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 682 and event "Tunnel_Traffictube1_Ventilation.c_4".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge682() {
        var guard = ((((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto)) && ((((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational)) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_Smokedetection_setting_, 4))) || ((((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._maintenance))) && ((spec.Tunnel_Traffictube1_Smokedetection_setting_) < (5))))) || (((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonVentilation4_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube1_Ventilation_setting_, 4));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(541, true);
        if (this.doInfoEvent) this.infoEvent(541, true);

        spec.Tunnel_Traffictube1_Ventilation_setting_ = 4;

        if (this.doInfoEvent) this.infoEvent(541, false);
        if (this.doInfoPrintOutput) this.printOutput(541, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 683 and event "Tunnel_Traffictube1_Ventilation.c_5".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge683() {
        var guard = (((((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto)) && (((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery)))) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_Smokedetection_setting_, 5))) || (((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonVentilation5_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube1_Ventilation_setting_, 5));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(542, true);
        if (this.doInfoEvent) this.infoEvent(542, true);

        spec.Tunnel_Traffictube1_Ventilation_setting_ = 5;

        if (this.doInfoEvent) this.infoEvent(542, false);
        if (this.doInfoPrintOutput) this.printOutput(542, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 684 and event "Tunnel_Traffictube1_Ventilation.c_6".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge684() {
        var guard = ((((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto)) && (((((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery))) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_Smokedetection_setting_, 6))) || ((((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._support)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._standby))) && ((spec.Tunnel_Traffictube1_Smokedetection_setting_) < (7))))) || (((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonVentilation6_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube1_Ventilation_setting_, 6));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(543, true);
        if (this.doInfoEvent) this.infoEvent(543, true);

        spec.Tunnel_Traffictube1_Ventilation_setting_ = 6;

        if (this.doInfoEvent) this.infoEvent(543, false);
        if (this.doInfoPrintOutput) this.printOutput(543, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 685 and event "Tunnel_Traffictube1_Ventilation.c_7".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge685() {
        var guard = (((((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto)) && ((((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery))) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._support)))) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_Smokedetection_setting_, 7))) || (((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonVentilation7_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube1_Ventilation_setting_, 7));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(544, true);
        if (this.doInfoEvent) this.infoEvent(544, true);

        spec.Tunnel_Traffictube1_Ventilation_setting_ = 7;

        if (this.doInfoEvent) this.infoEvent(544, false);
        if (this.doInfoPrintOutput) this.printOutput(544, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 686 and event "Tunnel_Traffictube1_Ventilation.c_8".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge686() {
        var guard = ((((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto)) && (((((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery))) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._support))) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_Smokedetection_setting_, 8)))) || (((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._emergency)) || (((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonVentilation8_Observer_) == (spec.specEnum._pressed))))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube1_Ventilation_setting_, 8));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(545, true);
        if (this.doInfoEvent) this.infoEvent(545, true);

        spec.Tunnel_Traffictube1_Ventilation_setting_ = 8;

        if (this.doInfoEvent) this.infoEvent(545, false);
        if (this.doInfoPrintOutput) this.printOutput(545, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 687 and event "Tunnel_Traffictube1_VentilationDirection.c_againstDrivingDirection".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge687() {
        var guard = ((((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto)) && ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._support))) || (((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_Observer_) == (spec.specEnum._pressed)))) && ((spec.Tunnel_Traffictube1_VentilationDirection_) == (spec.specEnum._drivingDirection));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(546, true);
        if (this.doInfoEvent) this.infoEvent(546, true);

        spec.Tunnel_Traffictube1_VentilationDirection_ = spec.specEnum._againstDrivingDirection;

        if (this.doInfoEvent) this.infoEvent(546, false);
        if (this.doInfoPrintOutput) this.printOutput(546, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 688 and event "Tunnel_Traffictube1_VentilationDirection.c_drivingDirection".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge688() {
        var guard = ((((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto)) && ((spec.Tunnel_Traffictube1_ModeTraffictube_) != (spec.specEnum._support))) || (((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonVentilationDrivingDirection_Observer_) == (spec.specEnum._pressed)))) && ((spec.Tunnel_Traffictube1_VentilationDirection_) == (spec.specEnum._againstDrivingDirection));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(547, true);
        if (this.doInfoEvent) this.infoEvent(547, true);

        spec.Tunnel_Traffictube1_VentilationDirection_ = spec.specEnum._drivingDirection;

        if (this.doInfoEvent) this.infoEvent(547, false);
        if (this.doInfoPrintOutput) this.printOutput(547, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 689 and event "Tunnel_Traffictube1_VentilationEntrance.c_0".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge689() {
        var guard = ((((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto)) && ((((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational)) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_Smokedetection_setting_, 0))) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._support)))) || (((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonVentilation0_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube1_VentilationEntrance_setting_, 0));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(548, true);
        if (this.doInfoEvent) this.infoEvent(548, true);

        spec.Tunnel_Traffictube1_VentilationEntrance_setting_ = 0;

        if (this.doInfoEvent) this.infoEvent(548, false);
        if (this.doInfoPrintOutput) this.printOutput(548, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 690 and event "Tunnel_Traffictube1_VentilationEntrance.c_1".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge690() {
        var guard = (((((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto)) && ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational))) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_Smokedetection_setting_, 1))) || (((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonVentilation1_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube1_VentilationEntrance_setting_, 1));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(549, true);
        if (this.doInfoEvent) this.infoEvent(549, true);

        spec.Tunnel_Traffictube1_VentilationEntrance_setting_ = 1;

        if (this.doInfoEvent) this.infoEvent(549, false);
        if (this.doInfoPrintOutput) this.printOutput(549, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 691 and event "Tunnel_Traffictube1_VentilationEntrance.c_2".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge691() {
        var guard = (((((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto)) && ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational))) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_Smokedetection_setting_, 2))) || (((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonVentilation2_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube1_VentilationEntrance_setting_, 2));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(550, true);
        if (this.doInfoEvent) this.infoEvent(550, true);

        spec.Tunnel_Traffictube1_VentilationEntrance_setting_ = 2;

        if (this.doInfoEvent) this.infoEvent(550, false);
        if (this.doInfoPrintOutput) this.printOutput(550, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 692 and event "Tunnel_Traffictube1_VentilationEntrance.c_3".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge692() {
        var guard = (((((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto)) && ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational))) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_Smokedetection_setting_, 3))) || (((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonVentilation3_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube1_VentilationEntrance_setting_, 3));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(551, true);
        if (this.doInfoEvent) this.infoEvent(551, true);

        spec.Tunnel_Traffictube1_VentilationEntrance_setting_ = 3;

        if (this.doInfoEvent) this.infoEvent(551, false);
        if (this.doInfoPrintOutput) this.printOutput(551, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 693 and event "Tunnel_Traffictube1_VentilationEntrance.c_4".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge693() {
        var guard = ((((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto)) && ((((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational)) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_Smokedetection_setting_, 4))) || ((((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._maintenance))) && ((spec.Tunnel_Traffictube1_Smokedetection_setting_) < (5))))) || (((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonVentilation4_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube1_VentilationEntrance_setting_, 4));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(552, true);
        if (this.doInfoEvent) this.infoEvent(552, true);

        spec.Tunnel_Traffictube1_VentilationEntrance_setting_ = 4;

        if (this.doInfoEvent) this.infoEvent(552, false);
        if (this.doInfoPrintOutput) this.printOutput(552, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 694 and event "Tunnel_Traffictube1_VentilationEntrance.c_5".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge694() {
        var guard = (((((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto)) && (((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery)))) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_Smokedetection_setting_, 5))) || (((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonVentilation5_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube1_VentilationEntrance_setting_, 5));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(553, true);
        if (this.doInfoEvent) this.infoEvent(553, true);

        spec.Tunnel_Traffictube1_VentilationEntrance_setting_ = 5;

        if (this.doInfoEvent) this.infoEvent(553, false);
        if (this.doInfoPrintOutput) this.printOutput(553, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 695 and event "Tunnel_Traffictube1_VentilationEntrance.c_6".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge695() {
        var guard = ((((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto)) && ((((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery))) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_Smokedetection_setting_, 6)))) || ((((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._standby)) && ((spec.Tunnel_Traffictube1_Smokedetection_setting_) < (7))) || (((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonVentilation6_Observer_) == (spec.specEnum._pressed))))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube1_VentilationEntrance_setting_, 6));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(554, true);
        if (this.doInfoEvent) this.infoEvent(554, true);

        spec.Tunnel_Traffictube1_VentilationEntrance_setting_ = 6;

        if (this.doInfoEvent) this.infoEvent(554, false);
        if (this.doInfoPrintOutput) this.printOutput(554, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 696 and event "Tunnel_Traffictube1_VentilationEntrance.c_7".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge696() {
        var guard = (((((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto)) && (((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery)))) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_Smokedetection_setting_, 7))) || (((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonVentilation7_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube1_VentilationEntrance_setting_, 7));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(555, true);
        if (this.doInfoEvent) this.infoEvent(555, true);

        spec.Tunnel_Traffictube1_VentilationEntrance_setting_ = 7;

        if (this.doInfoEvent) this.infoEvent(555, false);
        if (this.doInfoPrintOutput) this.printOutput(555, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 697 and event "Tunnel_Traffictube1_VentilationEntrance.c_8".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge697() {
        var guard = ((((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto)) && ((((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery))) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_Smokedetection_setting_, 8)))) || (((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._emergency)) || (((spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube1_ButtonVentilation8_Observer_) == (spec.specEnum._pressed))))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube1_VentilationEntrance_setting_, 8));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(556, true);
        if (this.doInfoEvent) this.infoEvent(556, true);

        spec.Tunnel_Traffictube1_VentilationEntrance_setting_ = 8;

        if (this.doInfoEvent) this.infoEvent(556, false);
        if (this.doInfoPrintOutput) this.printOutput(556, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 698 and event "Tunnel_Traffictube2_AccessBoombarriers.c_close".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge698() {
        var guard = ((((spec.Tunnel_Traffictube2_ControlBoombarriers_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonCloseBoombarriers_Observer_) == (spec.specEnum._pressed))) || ((spec.Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_Observer_) == (spec.specEnum._pressed))) && (((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._stopped)) || ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._opening)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(557, true);
        if (this.doInfoEvent) this.infoEvent(557, true);

        if ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._stopped)) {
            spec.Tunnel_Traffictube2_AccessBoombarriers_ = spec.specEnum._closing;
        } else if ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._opening)) {
            spec.Tunnel_Traffictube2_AccessBoombarriers_ = spec.specEnum._closing;
        }

        if (this.doInfoEvent) this.infoEvent(557, false);
        if (this.doInfoPrintOutput) this.printOutput(557, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 699 and event "Tunnel_Traffictube2_AccessBoombarriers.c_closeUnconditionally".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge699() {
        var guard = ((spec.Tunnel_Traffictube2_ControlBoombarriers_Mode_) == (spec.specEnum._manual)) && (((spec.Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_Observer_) == (spec.specEnum._pressed)) && (((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._stopped)) || ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._opening))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(558, true);
        if (this.doInfoEvent) this.infoEvent(558, true);

        if ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._stopped)) {
            spec.Tunnel_Traffictube2_AccessBoombarriers_ = spec.specEnum._closingUnconditionally;
        } else if ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._opening)) {
            spec.Tunnel_Traffictube2_AccessBoombarriers_ = spec.specEnum._closingUnconditionally;
        }

        if (this.doInfoEvent) this.infoEvent(558, false);
        if (this.doInfoPrintOutput) this.printOutput(558, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 700 and event "Tunnel_Traffictube2_AccessBoombarriers.c_open".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge700() {
        var guard = ((((spec.Tunnel_Traffictube2_ControlBoombarriers_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonOpenBoombarriers_Observer_) == (spec.specEnum._pressed))) || ((spec.Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_Observer_) == (spec.specEnum._pressed))) && (((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._stopped)) || (((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._closing)) || ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(559, true);
        if (this.doInfoEvent) this.infoEvent(559, true);

        if ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._stopped)) {
            spec.Tunnel_Traffictube2_AccessBoombarriers_ = spec.specEnum._opening;
        } else if ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._closing)) {
            spec.Tunnel_Traffictube2_AccessBoombarriers_ = spec.specEnum._opening;
        } else if ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally)) {
            spec.Tunnel_Traffictube2_AccessBoombarriers_ = spec.specEnum._opening;
        }

        if (this.doInfoEvent) this.infoEvent(559, false);
        if (this.doInfoPrintOutput) this.printOutput(559, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 701 and event "Tunnel_Traffictube2_AccessBoombarriers.c_stop".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge701() {
        var guard = ((((spec.Tunnel_Traffictube2_ControlBoombarriers_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonStopBoombarriers_Observer_) == (spec.specEnum._pressed))) || (((spec.Tunnel_Traffictube2_AccessBoombarriers_) != (spec.specEnum._closingUnconditionally)) && ((((spec.Tunnel_Traffictube2_Boombarrier1_ObstacleDetection_) == (spec.specEnum._on)) || ((spec.Tunnel_Traffictube2_Boombarrier2_ObstacleDetection_) == (spec.specEnum._on))) || ((((spec.Tunnel_Traffictube2_Boombarrier1_ActuatorDown_) == (spec.specEnum._on)) && ((spec.Tunnel_Traffictube2_Boombarrier2_ActuatorDown_) == (spec.specEnum._on))) && ((((spec.Tunnel_Traffictube2_Trafficlight1_ReleaseSignal_) == (spec.specEnum._off)) || ((spec.Tunnel_Traffictube2_Trafficlight2_ReleaseSignal_) == (spec.specEnum._off))) || ((spec.Tunnel_Traffictube2_Trafficlight3_ReleaseSignal_) == (spec.specEnum._off))))))) && (((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._opening)) || (((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._closing)) || ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(560, true);
        if (this.doInfoEvent) this.infoEvent(560, true);

        if ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._opening)) {
            spec.Tunnel_Traffictube2_AccessBoombarriers_ = spec.specEnum._stopped;
        } else if ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._closing)) {
            spec.Tunnel_Traffictube2_AccessBoombarriers_ = spec.specEnum._stopped;
        } else if ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally)) {
            spec.Tunnel_Traffictube2_AccessBoombarriers_ = spec.specEnum._stopped;
        }

        if (this.doInfoEvent) this.infoEvent(560, false);
        if (this.doInfoPrintOutput) this.printOutput(560, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 702 and event "Tunnel_Traffictube2_AccessTrafficlights.c_flash".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge702() {
        var guard = ((spec.Tunnel_Traffictube2_ControlTrafficlights_Mode_) == (spec.specEnum._manual)) && (((spec.Tunnel_Traffictube2_ButtonFlashTrafficlights_Observer_) == (spec.specEnum._pressed)) && (((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._off)) || ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._red))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(561, true);
        if (this.doInfoEvent) this.infoEvent(561, true);

        if ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._off)) {
            spec.Tunnel_Traffictube2_AccessTrafficlights_ = spec.specEnum._flash;
        } else if ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._red)) {
            spec.Tunnel_Traffictube2_AccessTrafficlights_ = spec.specEnum._flash;
        }

        if (this.doInfoEvent) this.infoEvent(561, false);
        if (this.doInfoPrintOutput) this.printOutput(561, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 703 and event "Tunnel_Traffictube2_AccessTrafficlights.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge703() {
        var guard = ((((spec.Tunnel_Traffictube2_ControlTrafficlights_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonOffTrafficlights_Observer_) == (spec.specEnum._pressed))) || (((spec.Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_Observer_) == (spec.specEnum._pressed)) || ((spec.Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_Observer_) == (spec.specEnum._pressed)))) && (((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._flash)) || ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._red)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(562, true);
        if (this.doInfoEvent) this.infoEvent(562, true);

        if ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._flash)) {
            spec.Tunnel_Traffictube2_AccessTrafficlights_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._red)) {
            spec.Tunnel_Traffictube2_AccessTrafficlights_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(562, false);
        if (this.doInfoPrintOutput) this.printOutput(562, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 704 and event "Tunnel_Traffictube2_AccessTrafficlights.c_red".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge704() {
        var guard = ((((spec.Tunnel_Traffictube2_ControlTrafficlights_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonRedTrafficlights_Observer_) == (spec.specEnum._pressed))) || (((spec.Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_Observer_) == (spec.specEnum._pressed)) || ((spec.Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_Observer_) == (spec.specEnum._pressed)))) && (((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._off)) || ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._flash)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(563, true);
        if (this.doInfoEvent) this.infoEvent(563, true);

        if ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._off)) {
            spec.Tunnel_Traffictube2_AccessTrafficlights_ = spec.specEnum._red;
        } else if ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._flash)) {
            spec.Tunnel_Traffictube2_AccessTrafficlights_ = spec.specEnum._red;
        }

        if (this.doInfoEvent) this.infoEvent(563, false);
        if (this.doInfoPrintOutput) this.printOutput(563, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 705 and event "Tunnel_Traffictube2_Boombarrier1_ActuatorDown.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge705() {
        var guard = (((spec.Tunnel_Traffictube2_Boombarrier1_SensorOpen_) == (spec.specEnum._off)) || (((spec.Tunnel_Traffictube2_Boombarrier1_ActuatorUp_) == (spec.specEnum._on)) && ((spec.Tunnel_Traffictube2_Boombarrier1_SensorClosed_) == (spec.specEnum._on)))) && ((spec.Tunnel_Traffictube2_Boombarrier1_ActuatorDown_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(564, true);
        if (this.doInfoEvent) this.infoEvent(564, true);

        spec.Tunnel_Traffictube2_Boombarrier1_ActuatorDown_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(564, false);
        if (this.doInfoPrintOutput) this.printOutput(564, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 706 and event "Tunnel_Traffictube2_Boombarrier1_ActuatorDown.c_offEmergency".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge706() {
        var guard = (((spec.Tunnel_Traffictube2_Boombarrier1_SensorOpen_) == (spec.specEnum._off)) || ((((spec.Tunnel_Traffictube2_Boombarrier1_ActuatorUp_) == (spec.specEnum._on)) || ((spec.Tunnel_Traffictube2_Boombarrier1_SensorClosed_) == (spec.specEnum._off))) && (((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._stopped)) || ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._opening))))) && ((spec.Tunnel_Traffictube2_Boombarrier1_ActuatorDown_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(565, true);
        if (this.doInfoEvent) this.infoEvent(565, true);

        spec.Tunnel_Traffictube2_Boombarrier1_ActuatorDown_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(565, false);
        if (this.doInfoPrintOutput) this.printOutput(565, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 707 and event "Tunnel_Traffictube2_Boombarrier1_ActuatorDown.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge707() {
        var guard = (((spec.Tunnel_Traffictube2_Boombarrier1_ActuatorUp_) == (spec.specEnum._off)) && ((!(spec.Tunnel_Traffictube2_Boombarrier1_closed_())) && (((spec.Tunnel_Traffictube2_Trafficlight1_ReleaseSignal_) == (spec.specEnum._on)) || ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally))))) && (((((spec.Tunnel_Traffictube2_Trafficlight2_ReleaseSignal_) == (spec.specEnum._on)) || ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally))) && (((spec.Tunnel_Traffictube2_Trafficlight3_ReleaseSignal_) == (spec.specEnum._on)) || ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally)))) && (((!(spec.Tunnel_Traffictube2_RequirementsBoombarrier1_obstacleDetectionOn_())) || ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally))) && ((((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._closing)) || ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally))) && ((spec.Tunnel_Traffictube2_Boombarrier1_ActuatorDown_) == (spec.specEnum._off)))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(566, true);
        if (this.doInfoEvent) this.infoEvent(566, true);

        spec.Tunnel_Traffictube2_Boombarrier1_ActuatorDown_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(566, false);
        if (this.doInfoPrintOutput) this.printOutput(566, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 708 and event "Tunnel_Traffictube2_Boombarrier1_ActuatorUp.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge708() {
        var guard = (((spec.Tunnel_Traffictube2_Boombarrier1_ActuatorDown_) == (spec.specEnum._on)) || (((spec.Tunnel_Traffictube2_Boombarrier1_SensorClosed_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube2_Boombarrier1_SensorOpen_) == (spec.specEnum._on)))) && ((spec.Tunnel_Traffictube2_Boombarrier1_ActuatorUp_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(567, true);
        if (this.doInfoEvent) this.infoEvent(567, true);

        spec.Tunnel_Traffictube2_Boombarrier1_ActuatorUp_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(567, false);
        if (this.doInfoPrintOutput) this.printOutput(567, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 709 and event "Tunnel_Traffictube2_Boombarrier1_ActuatorUp.c_offEmergency".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge709() {
        var guard = (((spec.Tunnel_Traffictube2_Boombarrier1_ActuatorDown_) == (spec.specEnum._on)) || ((((spec.Tunnel_Traffictube2_Boombarrier1_SensorOpen_) == (spec.specEnum._off)) || ((spec.Tunnel_Traffictube2_Boombarrier1_SensorClosed_) == (spec.specEnum._off))) && (((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._stopped)) || ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._closing))))) && ((spec.Tunnel_Traffictube2_Boombarrier1_ActuatorUp_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(568, true);
        if (this.doInfoEvent) this.infoEvent(568, true);

        spec.Tunnel_Traffictube2_Boombarrier1_ActuatorUp_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(568, false);
        if (this.doInfoPrintOutput) this.printOutput(568, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 710 and event "Tunnel_Traffictube2_Boombarrier1_ActuatorUp.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge710() {
        var guard = ((spec.Tunnel_Traffictube2_Boombarrier1_ActuatorDown_) == (spec.specEnum._off)) && ((!(spec.Tunnel_Traffictube2_Boombarrier1_open_())) && (((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._opening)) && ((spec.Tunnel_Traffictube2_Boombarrier1_ActuatorUp_) == (spec.specEnum._off))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(569, true);
        if (this.doInfoEvent) this.infoEvent(569, true);

        spec.Tunnel_Traffictube2_Boombarrier1_ActuatorUp_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(569, false);
        if (this.doInfoPrintOutput) this.printOutput(569, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 711 and event "Tunnel_Traffictube2_Boombarrier2_ActuatorDown.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge711() {
        var guard = (((spec.Tunnel_Traffictube2_Boombarrier2_SensorOpen_) == (spec.specEnum._off)) || (((spec.Tunnel_Traffictube2_Boombarrier2_ActuatorUp_) == (spec.specEnum._on)) && ((spec.Tunnel_Traffictube2_Boombarrier2_SensorClosed_) == (spec.specEnum._on)))) && ((spec.Tunnel_Traffictube2_Boombarrier2_ActuatorDown_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(576, true);
        if (this.doInfoEvent) this.infoEvent(576, true);

        spec.Tunnel_Traffictube2_Boombarrier2_ActuatorDown_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(576, false);
        if (this.doInfoPrintOutput) this.printOutput(576, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 712 and event "Tunnel_Traffictube2_Boombarrier2_ActuatorDown.c_offEmergency".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge712() {
        var guard = (((spec.Tunnel_Traffictube2_Boombarrier2_SensorOpen_) == (spec.specEnum._off)) || ((((spec.Tunnel_Traffictube2_Boombarrier2_ActuatorUp_) == (spec.specEnum._on)) || ((spec.Tunnel_Traffictube2_Boombarrier2_SensorClosed_) == (spec.specEnum._off))) && (((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._stopped)) || ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._opening))))) && ((spec.Tunnel_Traffictube2_Boombarrier2_ActuatorDown_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(577, true);
        if (this.doInfoEvent) this.infoEvent(577, true);

        spec.Tunnel_Traffictube2_Boombarrier2_ActuatorDown_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(577, false);
        if (this.doInfoPrintOutput) this.printOutput(577, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 713 and event "Tunnel_Traffictube2_Boombarrier2_ActuatorDown.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge713() {
        var guard = (((spec.Tunnel_Traffictube2_Boombarrier2_ActuatorUp_) == (spec.specEnum._off)) && ((!(spec.Tunnel_Traffictube2_Boombarrier2_closed_())) && (((spec.Tunnel_Traffictube2_Trafficlight1_ReleaseSignal_) == (spec.specEnum._on)) || ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally))))) && (((((spec.Tunnel_Traffictube2_Trafficlight2_ReleaseSignal_) == (spec.specEnum._on)) || ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally))) && (((spec.Tunnel_Traffictube2_Trafficlight3_ReleaseSignal_) == (spec.specEnum._on)) || ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally)))) && (((!(spec.Tunnel_Traffictube2_RequirementsBoombarrier2_obstacleDetectionOn_())) || ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally))) && ((((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._closing)) || ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally))) && ((spec.Tunnel_Traffictube2_Boombarrier2_ActuatorDown_) == (spec.specEnum._off)))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(578, true);
        if (this.doInfoEvent) this.infoEvent(578, true);

        spec.Tunnel_Traffictube2_Boombarrier2_ActuatorDown_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(578, false);
        if (this.doInfoPrintOutput) this.printOutput(578, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 714 and event "Tunnel_Traffictube2_Boombarrier2_ActuatorUp.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge714() {
        var guard = (((spec.Tunnel_Traffictube2_Boombarrier2_ActuatorDown_) == (spec.specEnum._on)) || (((spec.Tunnel_Traffictube2_Boombarrier2_SensorClosed_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube2_Boombarrier2_SensorOpen_) == (spec.specEnum._on)))) && ((spec.Tunnel_Traffictube2_Boombarrier2_ActuatorUp_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(579, true);
        if (this.doInfoEvent) this.infoEvent(579, true);

        spec.Tunnel_Traffictube2_Boombarrier2_ActuatorUp_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(579, false);
        if (this.doInfoPrintOutput) this.printOutput(579, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 715 and event "Tunnel_Traffictube2_Boombarrier2_ActuatorUp.c_offEmergency".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge715() {
        var guard = (((spec.Tunnel_Traffictube2_Boombarrier2_ActuatorDown_) == (spec.specEnum._on)) || ((((spec.Tunnel_Traffictube2_Boombarrier2_SensorOpen_) == (spec.specEnum._off)) || ((spec.Tunnel_Traffictube2_Boombarrier2_SensorClosed_) == (spec.specEnum._off))) && (((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._stopped)) || ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._closing))))) && ((spec.Tunnel_Traffictube2_Boombarrier2_ActuatorUp_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(580, true);
        if (this.doInfoEvent) this.infoEvent(580, true);

        spec.Tunnel_Traffictube2_Boombarrier2_ActuatorUp_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(580, false);
        if (this.doInfoPrintOutput) this.printOutput(580, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 716 and event "Tunnel_Traffictube2_Boombarrier2_ActuatorUp.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge716() {
        var guard = ((spec.Tunnel_Traffictube2_Boombarrier2_ActuatorDown_) == (spec.specEnum._off)) && ((!(spec.Tunnel_Traffictube2_Boombarrier2_open_())) && (((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._opening)) && ((spec.Tunnel_Traffictube2_Boombarrier2_ActuatorUp_) == (spec.specEnum._off))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(581, true);
        if (this.doInfoEvent) this.infoEvent(581, true);

        spec.Tunnel_Traffictube2_Boombarrier2_ActuatorUp_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(581, false);
        if (this.doInfoPrintOutput) this.printOutput(581, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 717 and event "Tunnel_Traffictube2_Broadcast.c_live".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge717() {
        var guard = (((spec.Tunnel_Traffictube2_EscapeDoor_Broadcast_) == (spec.specEnum._off)) || ((spec.Tunnel_Traffictube2_EscapeDoor_Broadcast_) == (spec.specEnum._suppressed))) && (((spec.Tunnel_Traffictube2_ButtonLive_Observer_) == (spec.specEnum._pressed)) && (((spec.Tunnel_Traffictube2_Broadcast_) == (spec.specEnum._message)) || ((spec.Tunnel_Traffictube2_Broadcast_) == (spec.specEnum._suppressed))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(588, true);
        if (this.doInfoEvent) this.infoEvent(588, true);

        if ((spec.Tunnel_Traffictube2_Broadcast_) == (spec.specEnum._message)) {
            spec.Tunnel_Traffictube2_Broadcast_ = spec.specEnum._live;
        } else if ((spec.Tunnel_Traffictube2_Broadcast_) == (spec.specEnum._suppressed)) {
            spec.Tunnel_Traffictube2_Broadcast_ = spec.specEnum._live;
        }

        if (this.doInfoEvent) this.infoEvent(588, false);
        if (this.doInfoPrintOutput) this.printOutput(588, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 718 and event "Tunnel_Traffictube2_Broadcast.c_message".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge718() {
        var guard = (((spec.Tunnel_Traffictube2_EscapeDoor_Broadcast_) == (spec.specEnum._off)) || ((spec.Tunnel_Traffictube2_EscapeDoor_Broadcast_) == (spec.specEnum._suppressed))) && ((((spec.Tunnel_Traffictube2_SwitchTimerAudio_) == (spec.specEnum._on1)) || ((spec.Tunnel_Traffictube2_ButtonMessage_Observer_) == (spec.specEnum._pressed))) && (((spec.Tunnel_Traffictube2_Broadcast_) == (spec.specEnum._live)) || ((spec.Tunnel_Traffictube2_Broadcast_) == (spec.specEnum._suppressed))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(589, true);
        if (this.doInfoEvent) this.infoEvent(589, true);

        if ((spec.Tunnel_Traffictube2_Broadcast_) == (spec.specEnum._live)) {
            spec.Tunnel_Traffictube2_Broadcast_ = spec.specEnum._message;
        } else if ((spec.Tunnel_Traffictube2_Broadcast_) == (spec.specEnum._suppressed)) {
            spec.Tunnel_Traffictube2_Broadcast_ = spec.specEnum._message;
        }

        if (this.doInfoEvent) this.infoEvent(589, false);
        if (this.doInfoPrintOutput) this.printOutput(589, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 719 and event "Tunnel_Traffictube2_Broadcast.c_suppressed".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge719() {
        var guard = ((spec.Tunnel_Traffictube2_SwitchTimerAudio_) == (spec.specEnum._on2)) && ((spec.Tunnel_Traffictube2_Broadcast_) == (spec.specEnum._message));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(590, true);
        if (this.doInfoEvent) this.infoEvent(590, true);

        spec.Tunnel_Traffictube2_Broadcast_ = spec.specEnum._suppressed;

        if (this.doInfoEvent) this.infoEvent(590, false);
        if (this.doInfoPrintOutput) this.printOutput(590, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 720 and event "Tunnel_Traffictube2_ButtonCamera1_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge720() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonCamera1_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonCamera1_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(592, true);
        if (this.doInfoEvent) this.infoEvent(592, true);

        spec.Tunnel_Traffictube2_ButtonCamera1_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(592, false);
        if (this.doInfoPrintOutput) this.printOutput(592, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 721 and event "Tunnel_Traffictube2_ButtonCamera1_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge721() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonCamera1_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonCamera1_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(593, true);
        if (this.doInfoEvent) this.infoEvent(593, true);

        spec.Tunnel_Traffictube2_ButtonCamera1_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(593, false);
        if (this.doInfoPrintOutput) this.printOutput(593, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 722 and event "Tunnel_Traffictube2_ButtonCamera2_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge722() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonCamera2_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonCamera2_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(595, true);
        if (this.doInfoEvent) this.infoEvent(595, true);

        spec.Tunnel_Traffictube2_ButtonCamera2_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(595, false);
        if (this.doInfoPrintOutput) this.printOutput(595, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 723 and event "Tunnel_Traffictube2_ButtonCamera2_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge723() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonCamera2_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonCamera2_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(596, true);
        if (this.doInfoEvent) this.infoEvent(596, true);

        spec.Tunnel_Traffictube2_ButtonCamera2_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(596, false);
        if (this.doInfoPrintOutput) this.printOutput(596, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 724 and event "Tunnel_Traffictube2_ButtonCamera3_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge724() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonCamera3_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonCamera3_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(598, true);
        if (this.doInfoEvent) this.infoEvent(598, true);

        spec.Tunnel_Traffictube2_ButtonCamera3_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(598, false);
        if (this.doInfoPrintOutput) this.printOutput(598, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 725 and event "Tunnel_Traffictube2_ButtonCamera3_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge725() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonCamera3_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonCamera3_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(599, true);
        if (this.doInfoEvent) this.infoEvent(599, true);

        spec.Tunnel_Traffictube2_ButtonCamera3_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(599, false);
        if (this.doInfoPrintOutput) this.printOutput(599, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 726 and event "Tunnel_Traffictube2_ButtonCamera4_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge726() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonCamera4_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonCamera4_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(601, true);
        if (this.doInfoEvent) this.infoEvent(601, true);

        spec.Tunnel_Traffictube2_ButtonCamera4_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(601, false);
        if (this.doInfoPrintOutput) this.printOutput(601, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 727 and event "Tunnel_Traffictube2_ButtonCamera4_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge727() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonCamera4_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonCamera4_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(602, true);
        if (this.doInfoEvent) this.infoEvent(602, true);

        spec.Tunnel_Traffictube2_ButtonCamera4_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(602, false);
        if (this.doInfoPrintOutput) this.printOutput(602, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 728 and event "Tunnel_Traffictube2_ButtonCamera5_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge728() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonCamera5_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonCamera5_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(604, true);
        if (this.doInfoEvent) this.infoEvent(604, true);

        spec.Tunnel_Traffictube2_ButtonCamera5_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(604, false);
        if (this.doInfoPrintOutput) this.printOutput(604, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 729 and event "Tunnel_Traffictube2_ButtonCamera5_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge729() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonCamera5_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonCamera5_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(605, true);
        if (this.doInfoEvent) this.infoEvent(605, true);

        spec.Tunnel_Traffictube2_ButtonCamera5_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(605, false);
        if (this.doInfoPrintOutput) this.printOutput(605, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 730 and event "Tunnel_Traffictube2_ButtonCamera6_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge730() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonCamera6_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonCamera6_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(607, true);
        if (this.doInfoEvent) this.infoEvent(607, true);

        spec.Tunnel_Traffictube2_ButtonCamera6_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(607, false);
        if (this.doInfoPrintOutput) this.printOutput(607, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 731 and event "Tunnel_Traffictube2_ButtonCamera6_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge731() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonCamera6_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonCamera6_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(608, true);
        if (this.doInfoEvent) this.infoEvent(608, true);

        spec.Tunnel_Traffictube2_ButtonCamera6_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(608, false);
        if (this.doInfoPrintOutput) this.printOutput(608, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 732 and event "Tunnel_Traffictube2_ButtonCameraStopView_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge732() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonCameraStopView_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonCameraStopView_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(610, true);
        if (this.doInfoEvent) this.infoEvent(610, true);

        spec.Tunnel_Traffictube2_ButtonCameraStopView_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(610, false);
        if (this.doInfoPrintOutput) this.printOutput(610, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 733 and event "Tunnel_Traffictube2_ButtonCameraStopView_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge733() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonCameraStopView_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonCameraStopView_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(611, true);
        if (this.doInfoEvent) this.infoEvent(611, true);

        spec.Tunnel_Traffictube2_ButtonCameraStopView_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(611, false);
        if (this.doInfoPrintOutput) this.printOutput(611, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 734 and event "Tunnel_Traffictube2_ButtonCameraView_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge734() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonCameraView_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonCameraView_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(613, true);
        if (this.doInfoEvent) this.infoEvent(613, true);

        spec.Tunnel_Traffictube2_ButtonCameraView_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(613, false);
        if (this.doInfoPrintOutput) this.printOutput(613, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 735 and event "Tunnel_Traffictube2_ButtonCameraView_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge735() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonCameraView_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonCameraView_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(614, true);
        if (this.doInfoEvent) this.infoEvent(614, true);

        spec.Tunnel_Traffictube2_ButtonCameraView_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(614, false);
        if (this.doInfoPrintOutput) this.printOutput(614, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 736 and event "Tunnel_Traffictube2_ButtonCloseBoombarriers_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge736() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonCloseBoombarriers_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonCloseBoombarriers_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(616, true);
        if (this.doInfoEvent) this.infoEvent(616, true);

        spec.Tunnel_Traffictube2_ButtonCloseBoombarriers_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(616, false);
        if (this.doInfoPrintOutput) this.printOutput(616, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 737 and event "Tunnel_Traffictube2_ButtonCloseBoombarriers_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge737() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonCloseBoombarriers_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonCloseBoombarriers_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(617, true);
        if (this.doInfoEvent) this.infoEvent(617, true);

        spec.Tunnel_Traffictube2_ButtonCloseBoombarriers_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(617, false);
        if (this.doInfoPrintOutput) this.printOutput(617, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 738 and event "Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge738() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(619, true);
        if (this.doInfoEvent) this.infoEvent(619, true);

        spec.Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(619, false);
        if (this.doInfoPrintOutput) this.printOutput(619, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 739 and event "Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge739() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(620, true);
        if (this.doInfoEvent) this.infoEvent(620, true);

        spec.Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(620, false);
        if (this.doInfoPrintOutput) this.printOutput(620, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 740 and event "Tunnel_Traffictube2_ButtonEmergency_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge740() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonEmergency_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonEmergency_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(622, true);
        if (this.doInfoEvent) this.infoEvent(622, true);

        spec.Tunnel_Traffictube2_ButtonEmergency_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(622, false);
        if (this.doInfoPrintOutput) this.printOutput(622, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 741 and event "Tunnel_Traffictube2_ButtonEmergency_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge741() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonEmergency_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonEmergency_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(623, true);
        if (this.doInfoEvent) this.infoEvent(623, true);

        spec.Tunnel_Traffictube2_ButtonEmergency_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(623, false);
        if (this.doInfoPrintOutput) this.printOutput(623, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 742 and event "Tunnel_Traffictube2_ButtonEvacuation_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge742() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonEvacuation_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonEvacuation_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(625, true);
        if (this.doInfoEvent) this.infoEvent(625, true);

        spec.Tunnel_Traffictube2_ButtonEvacuation_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(625, false);
        if (this.doInfoPrintOutput) this.printOutput(625, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 743 and event "Tunnel_Traffictube2_ButtonEvacuation_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge743() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonEvacuation_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonEvacuation_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(626, true);
        if (this.doInfoEvent) this.infoEvent(626, true);

        spec.Tunnel_Traffictube2_ButtonEvacuation_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(626, false);
        if (this.doInfoPrintOutput) this.printOutput(626, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 744 and event "Tunnel_Traffictube2_ButtonFlashTrafficlights_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge744() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonFlashTrafficlights_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonFlashTrafficlights_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(628, true);
        if (this.doInfoEvent) this.infoEvent(628, true);

        spec.Tunnel_Traffictube2_ButtonFlashTrafficlights_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(628, false);
        if (this.doInfoPrintOutput) this.printOutput(628, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 745 and event "Tunnel_Traffictube2_ButtonFlashTrafficlights_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge745() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonFlashTrafficlights_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonFlashTrafficlights_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(629, true);
        if (this.doInfoEvent) this.infoEvent(629, true);

        spec.Tunnel_Traffictube2_ButtonFlashTrafficlights_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(629, false);
        if (this.doInfoPrintOutput) this.printOutput(629, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 746 and event "Tunnel_Traffictube2_ButtonLighting0_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge746() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonLighting0_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonLighting0_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(631, true);
        if (this.doInfoEvent) this.infoEvent(631, true);

        spec.Tunnel_Traffictube2_ButtonLighting0_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(631, false);
        if (this.doInfoPrintOutput) this.printOutput(631, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 747 and event "Tunnel_Traffictube2_ButtonLighting0_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge747() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonLighting0_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonLighting0_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(632, true);
        if (this.doInfoEvent) this.infoEvent(632, true);

        spec.Tunnel_Traffictube2_ButtonLighting0_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(632, false);
        if (this.doInfoPrintOutput) this.printOutput(632, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 748 and event "Tunnel_Traffictube2_ButtonLighting1_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge748() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonLighting1_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonLighting1_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(634, true);
        if (this.doInfoEvent) this.infoEvent(634, true);

        spec.Tunnel_Traffictube2_ButtonLighting1_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(634, false);
        if (this.doInfoPrintOutput) this.printOutput(634, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 749 and event "Tunnel_Traffictube2_ButtonLighting1_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge749() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonLighting1_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonLighting1_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(635, true);
        if (this.doInfoEvent) this.infoEvent(635, true);

        spec.Tunnel_Traffictube2_ButtonLighting1_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(635, false);
        if (this.doInfoPrintOutput) this.printOutput(635, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 750 and event "Tunnel_Traffictube2_ButtonLighting2_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge750() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonLighting2_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonLighting2_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(637, true);
        if (this.doInfoEvent) this.infoEvent(637, true);

        spec.Tunnel_Traffictube2_ButtonLighting2_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(637, false);
        if (this.doInfoPrintOutput) this.printOutput(637, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 751 and event "Tunnel_Traffictube2_ButtonLighting2_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge751() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonLighting2_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonLighting2_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(638, true);
        if (this.doInfoEvent) this.infoEvent(638, true);

        spec.Tunnel_Traffictube2_ButtonLighting2_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(638, false);
        if (this.doInfoPrintOutput) this.printOutput(638, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 752 and event "Tunnel_Traffictube2_ButtonLighting3_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge752() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonLighting3_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonLighting3_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(640, true);
        if (this.doInfoEvent) this.infoEvent(640, true);

        spec.Tunnel_Traffictube2_ButtonLighting3_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(640, false);
        if (this.doInfoPrintOutput) this.printOutput(640, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 753 and event "Tunnel_Traffictube2_ButtonLighting3_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge753() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonLighting3_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonLighting3_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(641, true);
        if (this.doInfoEvent) this.infoEvent(641, true);

        spec.Tunnel_Traffictube2_ButtonLighting3_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(641, false);
        if (this.doInfoPrintOutput) this.printOutput(641, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 754 and event "Tunnel_Traffictube2_ButtonLighting4_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge754() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonLighting4_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonLighting4_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(643, true);
        if (this.doInfoEvent) this.infoEvent(643, true);

        spec.Tunnel_Traffictube2_ButtonLighting4_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(643, false);
        if (this.doInfoPrintOutput) this.printOutput(643, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 755 and event "Tunnel_Traffictube2_ButtonLighting4_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge755() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonLighting4_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonLighting4_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(644, true);
        if (this.doInfoEvent) this.infoEvent(644, true);

        spec.Tunnel_Traffictube2_ButtonLighting4_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(644, false);
        if (this.doInfoPrintOutput) this.printOutput(644, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 756 and event "Tunnel_Traffictube2_ButtonLighting5_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge756() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonLighting5_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonLighting5_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(646, true);
        if (this.doInfoEvent) this.infoEvent(646, true);

        spec.Tunnel_Traffictube2_ButtonLighting5_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(646, false);
        if (this.doInfoPrintOutput) this.printOutput(646, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 757 and event "Tunnel_Traffictube2_ButtonLighting5_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge757() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonLighting5_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonLighting5_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(647, true);
        if (this.doInfoEvent) this.infoEvent(647, true);

        spec.Tunnel_Traffictube2_ButtonLighting5_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(647, false);
        if (this.doInfoPrintOutput) this.printOutput(647, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 758 and event "Tunnel_Traffictube2_ButtonLighting6_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge758() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonLighting6_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonLighting6_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(649, true);
        if (this.doInfoEvent) this.infoEvent(649, true);

        spec.Tunnel_Traffictube2_ButtonLighting6_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(649, false);
        if (this.doInfoPrintOutput) this.printOutput(649, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 759 and event "Tunnel_Traffictube2_ButtonLighting6_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge759() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonLighting6_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonLighting6_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(650, true);
        if (this.doInfoEvent) this.infoEvent(650, true);

        spec.Tunnel_Traffictube2_ButtonLighting6_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(650, false);
        if (this.doInfoPrintOutput) this.printOutput(650, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 760 and event "Tunnel_Traffictube2_ButtonLighting7_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge760() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonLighting7_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonLighting7_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(652, true);
        if (this.doInfoEvent) this.infoEvent(652, true);

        spec.Tunnel_Traffictube2_ButtonLighting7_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(652, false);
        if (this.doInfoPrintOutput) this.printOutput(652, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 761 and event "Tunnel_Traffictube2_ButtonLighting7_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge761() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonLighting7_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonLighting7_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(653, true);
        if (this.doInfoEvent) this.infoEvent(653, true);

        spec.Tunnel_Traffictube2_ButtonLighting7_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(653, false);
        if (this.doInfoPrintOutput) this.printOutput(653, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 762 and event "Tunnel_Traffictube2_ButtonLighting8_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge762() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonLighting8_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonLighting8_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(655, true);
        if (this.doInfoEvent) this.infoEvent(655, true);

        spec.Tunnel_Traffictube2_ButtonLighting8_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(655, false);
        if (this.doInfoPrintOutput) this.printOutput(655, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 763 and event "Tunnel_Traffictube2_ButtonLighting8_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge763() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonLighting8_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonLighting8_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(656, true);
        if (this.doInfoEvent) this.infoEvent(656, true);

        spec.Tunnel_Traffictube2_ButtonLighting8_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(656, false);
        if (this.doInfoPrintOutput) this.printOutput(656, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 764 and event "Tunnel_Traffictube2_ButtonLive_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge764() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonLive_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonLive_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(658, true);
        if (this.doInfoEvent) this.infoEvent(658, true);

        spec.Tunnel_Traffictube2_ButtonLive_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(658, false);
        if (this.doInfoPrintOutput) this.printOutput(658, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 765 and event "Tunnel_Traffictube2_ButtonLive_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge765() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonLive_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonLive_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(659, true);
        if (this.doInfoEvent) this.infoEvent(659, true);

        spec.Tunnel_Traffictube2_ButtonLive_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(659, false);
        if (this.doInfoPrintOutput) this.printOutput(659, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 766 and event "Tunnel_Traffictube2_ButtonMaintenance_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge766() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonMaintenance_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonMaintenance_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(661, true);
        if (this.doInfoEvent) this.infoEvent(661, true);

        spec.Tunnel_Traffictube2_ButtonMaintenance_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(661, false);
        if (this.doInfoPrintOutput) this.printOutput(661, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 767 and event "Tunnel_Traffictube2_ButtonMaintenance_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge767() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonMaintenance_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonMaintenance_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(662, true);
        if (this.doInfoEvent) this.infoEvent(662, true);

        spec.Tunnel_Traffictube2_ButtonMaintenance_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(662, false);
        if (this.doInfoPrintOutput) this.printOutput(662, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 768 and event "Tunnel_Traffictube2_ButtonMessage_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge768() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonMessage_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonMessage_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(664, true);
        if (this.doInfoEvent) this.infoEvent(664, true);

        spec.Tunnel_Traffictube2_ButtonMessage_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(664, false);
        if (this.doInfoPrintOutput) this.printOutput(664, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 769 and event "Tunnel_Traffictube2_ButtonMessage_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge769() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonMessage_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonMessage_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(665, true);
        if (this.doInfoEvent) this.infoEvent(665, true);

        spec.Tunnel_Traffictube2_ButtonMessage_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(665, false);
        if (this.doInfoPrintOutput) this.printOutput(665, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 770 and event "Tunnel_Traffictube2_ButtonOffTrafficlights_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge770() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonOffTrafficlights_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonOffTrafficlights_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(667, true);
        if (this.doInfoEvent) this.infoEvent(667, true);

        spec.Tunnel_Traffictube2_ButtonOffTrafficlights_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(667, false);
        if (this.doInfoPrintOutput) this.printOutput(667, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 771 and event "Tunnel_Traffictube2_ButtonOffTrafficlights_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge771() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonOffTrafficlights_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonOffTrafficlights_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(668, true);
        if (this.doInfoEvent) this.infoEvent(668, true);

        spec.Tunnel_Traffictube2_ButtonOffTrafficlights_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(668, false);
        if (this.doInfoPrintOutput) this.printOutput(668, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 772 and event "Tunnel_Traffictube2_ButtonOpenBoombarriers_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge772() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonOpenBoombarriers_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonOpenBoombarriers_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(670, true);
        if (this.doInfoEvent) this.infoEvent(670, true);

        spec.Tunnel_Traffictube2_ButtonOpenBoombarriers_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(670, false);
        if (this.doInfoPrintOutput) this.printOutput(670, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 773 and event "Tunnel_Traffictube2_ButtonOpenBoombarriers_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge773() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonOpenBoombarriers_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonOpenBoombarriers_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(671, true);
        if (this.doInfoEvent) this.infoEvent(671, true);

        spec.Tunnel_Traffictube2_ButtonOpenBoombarriers_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(671, false);
        if (this.doInfoPrintOutput) this.printOutput(671, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 774 and event "Tunnel_Traffictube2_ButtonOperational_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge774() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonOperational_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonOperational_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(673, true);
        if (this.doInfoEvent) this.infoEvent(673, true);

        spec.Tunnel_Traffictube2_ButtonOperational_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(673, false);
        if (this.doInfoPrintOutput) this.printOutput(673, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 775 and event "Tunnel_Traffictube2_ButtonOperational_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge775() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonOperational_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonOperational_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(674, true);
        if (this.doInfoEvent) this.infoEvent(674, true);

        spec.Tunnel_Traffictube2_ButtonOperational_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(674, false);
        if (this.doInfoPrintOutput) this.printOutput(674, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 776 and event "Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge776() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(676, true);
        if (this.doInfoEvent) this.infoEvent(676, true);

        spec.Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(676, false);
        if (this.doInfoPrintOutput) this.printOutput(676, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 777 and event "Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge777() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(677, true);
        if (this.doInfoEvent) this.infoEvent(677, true);

        spec.Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(677, false);
        if (this.doInfoPrintOutput) this.printOutput(677, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 778 and event "Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge778() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(679, true);
        if (this.doInfoEvent) this.infoEvent(679, true);

        spec.Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(679, false);
        if (this.doInfoPrintOutput) this.printOutput(679, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 779 and event "Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge779() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(680, true);
        if (this.doInfoEvent) this.infoEvent(680, true);

        spec.Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(680, false);
        if (this.doInfoPrintOutput) this.printOutput(680, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 780 and event "Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge780() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(682, true);
        if (this.doInfoEvent) this.infoEvent(682, true);

        spec.Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(682, false);
        if (this.doInfoPrintOutput) this.printOutput(682, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 781 and event "Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge781() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(683, true);
        if (this.doInfoEvent) this.infoEvent(683, true);

        spec.Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(683, false);
        if (this.doInfoPrintOutput) this.printOutput(683, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 782 and event "Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge782() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(685, true);
        if (this.doInfoEvent) this.infoEvent(685, true);

        spec.Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(685, false);
        if (this.doInfoPrintOutput) this.printOutput(685, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 783 and event "Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge783() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(686, true);
        if (this.doInfoEvent) this.infoEvent(686, true);

        spec.Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(686, false);
        if (this.doInfoPrintOutput) this.printOutput(686, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 784 and event "Tunnel_Traffictube2_ButtonRecovery_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge784() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonRecovery_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonRecovery_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(688, true);
        if (this.doInfoEvent) this.infoEvent(688, true);

        spec.Tunnel_Traffictube2_ButtonRecovery_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(688, false);
        if (this.doInfoPrintOutput) this.printOutput(688, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 785 and event "Tunnel_Traffictube2_ButtonRecovery_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge785() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonRecovery_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonRecovery_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(689, true);
        if (this.doInfoEvent) this.infoEvent(689, true);

        spec.Tunnel_Traffictube2_ButtonRecovery_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(689, false);
        if (this.doInfoPrintOutput) this.printOutput(689, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 786 and event "Tunnel_Traffictube2_ButtonRedTrafficlights_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge786() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonRedTrafficlights_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonRedTrafficlights_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(691, true);
        if (this.doInfoEvent) this.infoEvent(691, true);

        spec.Tunnel_Traffictube2_ButtonRedTrafficlights_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(691, false);
        if (this.doInfoPrintOutput) this.printOutput(691, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 787 and event "Tunnel_Traffictube2_ButtonRedTrafficlights_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge787() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonRedTrafficlights_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonRedTrafficlights_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(692, true);
        if (this.doInfoEvent) this.infoEvent(692, true);

        spec.Tunnel_Traffictube2_ButtonRedTrafficlights_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(692, false);
        if (this.doInfoPrintOutput) this.printOutput(692, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 788 and event "Tunnel_Traffictube2_ButtonStopBoombarriers_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge788() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonStopBoombarriers_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonStopBoombarriers_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(694, true);
        if (this.doInfoEvent) this.infoEvent(694, true);

        spec.Tunnel_Traffictube2_ButtonStopBoombarriers_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(694, false);
        if (this.doInfoPrintOutput) this.printOutput(694, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 789 and event "Tunnel_Traffictube2_ButtonStopBoombarriers_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge789() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonStopBoombarriers_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonStopBoombarriers_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(695, true);
        if (this.doInfoEvent) this.infoEvent(695, true);

        spec.Tunnel_Traffictube2_ButtonStopBoombarriers_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(695, false);
        if (this.doInfoPrintOutput) this.printOutput(695, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 790 and event "Tunnel_Traffictube2_ButtonVentilation0_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge790() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonVentilation0_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonVentilation0_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(697, true);
        if (this.doInfoEvent) this.infoEvent(697, true);

        spec.Tunnel_Traffictube2_ButtonVentilation0_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(697, false);
        if (this.doInfoPrintOutput) this.printOutput(697, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 791 and event "Tunnel_Traffictube2_ButtonVentilation0_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge791() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonVentilation0_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonVentilation0_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(698, true);
        if (this.doInfoEvent) this.infoEvent(698, true);

        spec.Tunnel_Traffictube2_ButtonVentilation0_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(698, false);
        if (this.doInfoPrintOutput) this.printOutput(698, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 792 and event "Tunnel_Traffictube2_ButtonVentilation1_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge792() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonVentilation1_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonVentilation1_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(700, true);
        if (this.doInfoEvent) this.infoEvent(700, true);

        spec.Tunnel_Traffictube2_ButtonVentilation1_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(700, false);
        if (this.doInfoPrintOutput) this.printOutput(700, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 793 and event "Tunnel_Traffictube2_ButtonVentilation1_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge793() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonVentilation1_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonVentilation1_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(701, true);
        if (this.doInfoEvent) this.infoEvent(701, true);

        spec.Tunnel_Traffictube2_ButtonVentilation1_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(701, false);
        if (this.doInfoPrintOutput) this.printOutput(701, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 794 and event "Tunnel_Traffictube2_ButtonVentilation2_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge794() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonVentilation2_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonVentilation2_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(703, true);
        if (this.doInfoEvent) this.infoEvent(703, true);

        spec.Tunnel_Traffictube2_ButtonVentilation2_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(703, false);
        if (this.doInfoPrintOutput) this.printOutput(703, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 795 and event "Tunnel_Traffictube2_ButtonVentilation2_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge795() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonVentilation2_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonVentilation2_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(704, true);
        if (this.doInfoEvent) this.infoEvent(704, true);

        spec.Tunnel_Traffictube2_ButtonVentilation2_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(704, false);
        if (this.doInfoPrintOutput) this.printOutput(704, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 796 and event "Tunnel_Traffictube2_ButtonVentilation3_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge796() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonVentilation3_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonVentilation3_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(706, true);
        if (this.doInfoEvent) this.infoEvent(706, true);

        spec.Tunnel_Traffictube2_ButtonVentilation3_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(706, false);
        if (this.doInfoPrintOutput) this.printOutput(706, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 797 and event "Tunnel_Traffictube2_ButtonVentilation3_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge797() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonVentilation3_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonVentilation3_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(707, true);
        if (this.doInfoEvent) this.infoEvent(707, true);

        spec.Tunnel_Traffictube2_ButtonVentilation3_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(707, false);
        if (this.doInfoPrintOutput) this.printOutput(707, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 798 and event "Tunnel_Traffictube2_ButtonVentilation4_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge798() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonVentilation4_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonVentilation4_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(709, true);
        if (this.doInfoEvent) this.infoEvent(709, true);

        spec.Tunnel_Traffictube2_ButtonVentilation4_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(709, false);
        if (this.doInfoPrintOutput) this.printOutput(709, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 799 and event "Tunnel_Traffictube2_ButtonVentilation4_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge799() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonVentilation4_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonVentilation4_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(710, true);
        if (this.doInfoEvent) this.infoEvent(710, true);

        spec.Tunnel_Traffictube2_ButtonVentilation4_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(710, false);
        if (this.doInfoPrintOutput) this.printOutput(710, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 800 and event "Tunnel_Traffictube2_ButtonVentilation5_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge800() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonVentilation5_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonVentilation5_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(712, true);
        if (this.doInfoEvent) this.infoEvent(712, true);

        spec.Tunnel_Traffictube2_ButtonVentilation5_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(712, false);
        if (this.doInfoPrintOutput) this.printOutput(712, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 801 and event "Tunnel_Traffictube2_ButtonVentilation5_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge801() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonVentilation5_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonVentilation5_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(713, true);
        if (this.doInfoEvent) this.infoEvent(713, true);

        spec.Tunnel_Traffictube2_ButtonVentilation5_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(713, false);
        if (this.doInfoPrintOutput) this.printOutput(713, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 802 and event "Tunnel_Traffictube2_ButtonVentilation6_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge802() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonVentilation6_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonVentilation6_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(715, true);
        if (this.doInfoEvent) this.infoEvent(715, true);

        spec.Tunnel_Traffictube2_ButtonVentilation6_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(715, false);
        if (this.doInfoPrintOutput) this.printOutput(715, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 803 and event "Tunnel_Traffictube2_ButtonVentilation6_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge803() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonVentilation6_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonVentilation6_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(716, true);
        if (this.doInfoEvent) this.infoEvent(716, true);

        spec.Tunnel_Traffictube2_ButtonVentilation6_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(716, false);
        if (this.doInfoPrintOutput) this.printOutput(716, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 804 and event "Tunnel_Traffictube2_ButtonVentilation7_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge804() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonVentilation7_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonVentilation7_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(718, true);
        if (this.doInfoEvent) this.infoEvent(718, true);

        spec.Tunnel_Traffictube2_ButtonVentilation7_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(718, false);
        if (this.doInfoPrintOutput) this.printOutput(718, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 805 and event "Tunnel_Traffictube2_ButtonVentilation7_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge805() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonVentilation7_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonVentilation7_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(719, true);
        if (this.doInfoEvent) this.infoEvent(719, true);

        spec.Tunnel_Traffictube2_ButtonVentilation7_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(719, false);
        if (this.doInfoPrintOutput) this.printOutput(719, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 806 and event "Tunnel_Traffictube2_ButtonVentilation8_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge806() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonVentilation8_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonVentilation8_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(721, true);
        if (this.doInfoEvent) this.infoEvent(721, true);

        spec.Tunnel_Traffictube2_ButtonVentilation8_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(721, false);
        if (this.doInfoPrintOutput) this.printOutput(721, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 807 and event "Tunnel_Traffictube2_ButtonVentilation8_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge807() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonVentilation8_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonVentilation8_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(722, true);
        if (this.doInfoEvent) this.infoEvent(722, true);

        spec.Tunnel_Traffictube2_ButtonVentilation8_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(722, false);
        if (this.doInfoPrintOutput) this.printOutput(722, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 808 and event "Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge808() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(724, true);
        if (this.doInfoEvent) this.infoEvent(724, true);

        spec.Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(724, false);
        if (this.doInfoPrintOutput) this.printOutput(724, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 809 and event "Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge809() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(725, true);
        if (this.doInfoEvent) this.infoEvent(725, true);

        spec.Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(725, false);
        if (this.doInfoPrintOutput) this.printOutput(725, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 810 and event "Tunnel_Traffictube2_ButtonVentilationDrivingDirection_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge810() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonVentilationDrivingDirection_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonVentilationDrivingDirection_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(727, true);
        if (this.doInfoEvent) this.infoEvent(727, true);

        spec.Tunnel_Traffictube2_ButtonVentilationDrivingDirection_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(727, false);
        if (this.doInfoPrintOutput) this.printOutput(727, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 811 and event "Tunnel_Traffictube2_ButtonVentilationDrivingDirection_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge811() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonVentilationDrivingDirection_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ButtonVentilationDrivingDirection_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(728, true);
        if (this.doInfoEvent) this.infoEvent(728, true);

        spec.Tunnel_Traffictube2_ButtonVentilationDrivingDirection_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(728, false);
        if (this.doInfoPrintOutput) this.printOutput(728, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 812 and event "Tunnel_Traffictube2_CCTV.c_off1".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge812() {
        var guard = (spec.Tunnel_Traffictube2_setCameraButtonPressed_()) && ((spec.Tunnel_Traffictube2_RequirementsCamera1_cameraButtonUnpressed_()) && ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera1)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(729, true);
        if (this.doInfoEvent) this.infoEvent(729, true);

        spec.Tunnel_Traffictube2_CCTV_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(729, false);
        if (this.doInfoPrintOutput) this.printOutput(729, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 813 and event "Tunnel_Traffictube2_CCTV.c_off2".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge813() {
        var guard = (spec.Tunnel_Traffictube2_setCameraButtonPressed_()) && ((spec.Tunnel_Traffictube2_RequirementsCamera2_cameraButtonUnpressed_()) && ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera2)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(730, true);
        if (this.doInfoEvent) this.infoEvent(730, true);

        spec.Tunnel_Traffictube2_CCTV_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(730, false);
        if (this.doInfoPrintOutput) this.printOutput(730, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 814 and event "Tunnel_Traffictube2_CCTV.c_off3".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge814() {
        var guard = (spec.Tunnel_Traffictube2_setCameraButtonPressed_()) && ((spec.Tunnel_Traffictube2_RequirementsCamera3_cameraButtonUnpressed_()) && ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera3)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(731, true);
        if (this.doInfoEvent) this.infoEvent(731, true);

        spec.Tunnel_Traffictube2_CCTV_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(731, false);
        if (this.doInfoPrintOutput) this.printOutput(731, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 815 and event "Tunnel_Traffictube2_CCTV.c_off4".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge815() {
        var guard = (spec.Tunnel_Traffictube2_setCameraButtonPressed_()) && ((spec.Tunnel_Traffictube2_RequirementsCamera4_cameraButtonUnpressed_()) && ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera4)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(732, true);
        if (this.doInfoEvent) this.infoEvent(732, true);

        spec.Tunnel_Traffictube2_CCTV_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(732, false);
        if (this.doInfoPrintOutput) this.printOutput(732, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 816 and event "Tunnel_Traffictube2_CCTV.c_off5".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge816() {
        var guard = (spec.Tunnel_Traffictube2_setCameraButtonPressed_()) && ((spec.Tunnel_Traffictube2_RequirementsCamera5_cameraButtonUnpressed_()) && ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera5)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(733, true);
        if (this.doInfoEvent) this.infoEvent(733, true);

        spec.Tunnel_Traffictube2_CCTV_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(733, false);
        if (this.doInfoPrintOutput) this.printOutput(733, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 817 and event "Tunnel_Traffictube2_CCTV.c_off6".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge817() {
        var guard = (spec.Tunnel_Traffictube2_setCameraButtonPressed_()) && ((spec.Tunnel_Traffictube2_RequirementsCamera6_cameraButtonUnpressed_()) && ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera6)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(734, true);
        if (this.doInfoEvent) this.infoEvent(734, true);

        spec.Tunnel_Traffictube2_CCTV_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(734, false);
        if (this.doInfoPrintOutput) this.printOutput(734, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 818 and event "Tunnel_Traffictube2_CCTV.c_on1".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge818() {
        var guard = (spec.Tunnel_Traffictube2_RequirementsCamera1_cameraButtonPressed_()) && ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(735, true);
        if (this.doInfoEvent) this.infoEvent(735, true);

        spec.Tunnel_Traffictube2_CCTV_ = spec.specEnum._camera1;

        if (this.doInfoEvent) this.infoEvent(735, false);
        if (this.doInfoPrintOutput) this.printOutput(735, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 819 and event "Tunnel_Traffictube2_CCTV.c_on2".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge819() {
        var guard = (spec.Tunnel_Traffictube2_RequirementsCamera2_cameraButtonPressed_()) && ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(736, true);
        if (this.doInfoEvent) this.infoEvent(736, true);

        spec.Tunnel_Traffictube2_CCTV_ = spec.specEnum._camera2;

        if (this.doInfoEvent) this.infoEvent(736, false);
        if (this.doInfoPrintOutput) this.printOutput(736, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 820 and event "Tunnel_Traffictube2_CCTV.c_on3".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge820() {
        var guard = (spec.Tunnel_Traffictube2_RequirementsCamera3_cameraButtonPressed_()) && ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(737, true);
        if (this.doInfoEvent) this.infoEvent(737, true);

        spec.Tunnel_Traffictube2_CCTV_ = spec.specEnum._camera3;

        if (this.doInfoEvent) this.infoEvent(737, false);
        if (this.doInfoPrintOutput) this.printOutput(737, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 821 and event "Tunnel_Traffictube2_CCTV.c_on4".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge821() {
        var guard = (spec.Tunnel_Traffictube2_RequirementsCamera4_cameraButtonPressed_()) && ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(738, true);
        if (this.doInfoEvent) this.infoEvent(738, true);

        spec.Tunnel_Traffictube2_CCTV_ = spec.specEnum._camera4;

        if (this.doInfoEvent) this.infoEvent(738, false);
        if (this.doInfoPrintOutput) this.printOutput(738, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 822 and event "Tunnel_Traffictube2_CCTV.c_on5".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge822() {
        var guard = (spec.Tunnel_Traffictube2_RequirementsCamera5_cameraButtonPressed_()) && ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(739, true);
        if (this.doInfoEvent) this.infoEvent(739, true);

        spec.Tunnel_Traffictube2_CCTV_ = spec.specEnum._camera5;

        if (this.doInfoEvent) this.infoEvent(739, false);
        if (this.doInfoPrintOutput) this.printOutput(739, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 823 and event "Tunnel_Traffictube2_CCTV.c_on6".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge823() {
        var guard = (spec.Tunnel_Traffictube2_RequirementsCamera6_cameraButtonPressed_()) && ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(740, true);
        if (this.doInfoEvent) this.infoEvent(740, true);

        spec.Tunnel_Traffictube2_CCTV_ = spec.specEnum._camera6;

        if (this.doInfoEvent) this.infoEvent(740, false);
        if (this.doInfoPrintOutput) this.printOutput(740, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 824 and event "Tunnel_Traffictube2_CCTV.c_start".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge824() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonCameraView_Observer_) == (spec.specEnum._pressed)) && (((spec.Tunnel_Traffictube2_ButtonCameraStopView_Observer_) == (spec.specEnum._unpressed)) && ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._off)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(741, true);
        if (this.doInfoEvent) this.infoEvent(741, true);

        spec.Tunnel_Traffictube2_CCTV_ = spec.specEnum._camera1;

        if (this.doInfoEvent) this.infoEvent(741, false);
        if (this.doInfoPrintOutput) this.printOutput(741, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 825 and event "Tunnel_Traffictube2_CCTV.c_stop".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge825() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonCameraStopView_Observer_) == (spec.specEnum._pressed)) && ((((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera1)) || ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera2))) || ((((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera3)) || ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera4))) || (((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera5)) || ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera6)))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(742, true);
        if (this.doInfoEvent) this.infoEvent(742, true);

        if ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera1)) {
            spec.Tunnel_Traffictube2_CCTV_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera2)) {
            spec.Tunnel_Traffictube2_CCTV_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera3)) {
            spec.Tunnel_Traffictube2_CCTV_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera4)) {
            spec.Tunnel_Traffictube2_CCTV_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera5)) {
            spec.Tunnel_Traffictube2_CCTV_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera6)) {
            spec.Tunnel_Traffictube2_CCTV_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(742, false);
        if (this.doInfoPrintOutput) this.printOutput(742, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 826 and event "Tunnel_Traffictube2_CCTV.c_view".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge826() {
        var guard = (((spec.Tunnel_Traffictube2_ButtonCameraView_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube2_TimerCameraViewEven_) == (spec.specEnum._finished))) && (((spec.Tunnel_Traffictube2_TimerCameraViewUneven_) == (spec.specEnum._off)) && (((((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera2)) || ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera4))) || ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera6))) && ((((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera1)) || ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera2))) || ((((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera3)) || ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera4))) || (((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera5)) || ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera6)))))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(743, true);
        if (this.doInfoEvent) this.infoEvent(743, true);

        if ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera1)) {
            spec.Tunnel_Traffictube2_CCTV_ = spec.specEnum._camera2;
        } else if ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera2)) {
            spec.Tunnel_Traffictube2_CCTV_ = spec.specEnum._camera3;
        } else if ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera3)) {
            spec.Tunnel_Traffictube2_CCTV_ = spec.specEnum._camera4;
        } else if ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera4)) {
            spec.Tunnel_Traffictube2_CCTV_ = spec.specEnum._camera5;
        } else if ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera5)) {
            spec.Tunnel_Traffictube2_CCTV_ = spec.specEnum._camera6;
        } else if ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera6)) {
            spec.Tunnel_Traffictube2_CCTV_ = spec.specEnum._camera1;
        }

        if (this.doInfoEvent) this.infoEvent(743, false);
        if (this.doInfoPrintOutput) this.printOutput(743, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 827 and event "Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge827() {
        var guard = ((spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(745, true);
        if (this.doInfoEvent) this.infoEvent(745, true);

        spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(745, false);
        if (this.doInfoPrintOutput) this.printOutput(745, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 828 and event "Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge828() {
        var guard = ((spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(746, true);
        if (this.doInfoEvent) this.infoEvent(746, true);

        spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(746, false);
        if (this.doInfoPrintOutput) this.printOutput(746, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 829 and event "Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge829() {
        var guard = ((spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(748, true);
        if (this.doInfoEvent) this.infoEvent(748, true);

        spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(748, false);
        if (this.doInfoPrintOutput) this.printOutput(748, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 830 and event "Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge830() {
        var guard = ((spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(749, true);
        if (this.doInfoEvent) this.infoEvent(749, true);

        spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(749, false);
        if (this.doInfoPrintOutput) this.printOutput(749, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 831 and event "Tunnel_Traffictube2_ControlBoombarriers_Mode.c_auto".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge831() {
        var guard = ((spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube2_ControlBoombarriers_Mode_) == (spec.specEnum._manual));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(750, true);
        if (this.doInfoEvent) this.infoEvent(750, true);

        spec.Tunnel_Traffictube2_ControlBoombarriers_Mode_ = spec.specEnum._auto;

        if (this.doInfoEvent) this.infoEvent(750, false);
        if (this.doInfoPrintOutput) this.printOutput(750, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 832 and event "Tunnel_Traffictube2_ControlBoombarriers_Mode.c_manual".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge832() {
        var guard = ((spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube2_ControlBoombarriers_Mode_) == (spec.specEnum._auto));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(751, true);
        if (this.doInfoEvent) this.infoEvent(751, true);

        spec.Tunnel_Traffictube2_ControlBoombarriers_Mode_ = spec.specEnum._manual;

        if (this.doInfoEvent) this.infoEvent(751, false);
        if (this.doInfoPrintOutput) this.printOutput(751, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 833 and event "Tunnel_Traffictube2_ControlLighting_ButtonAuto_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge833() {
        var guard = ((spec.Tunnel_Traffictube2_ControlLighting_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ControlLighting_ButtonAuto_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(753, true);
        if (this.doInfoEvent) this.infoEvent(753, true);

        spec.Tunnel_Traffictube2_ControlLighting_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(753, false);
        if (this.doInfoPrintOutput) this.printOutput(753, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 834 and event "Tunnel_Traffictube2_ControlLighting_ButtonAuto_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge834() {
        var guard = ((spec.Tunnel_Traffictube2_ControlLighting_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ControlLighting_ButtonAuto_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(754, true);
        if (this.doInfoEvent) this.infoEvent(754, true);

        spec.Tunnel_Traffictube2_ControlLighting_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(754, false);
        if (this.doInfoPrintOutput) this.printOutput(754, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 835 and event "Tunnel_Traffictube2_ControlLighting_ButtonManual_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge835() {
        var guard = ((spec.Tunnel_Traffictube2_ControlLighting_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ControlLighting_ButtonManual_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(756, true);
        if (this.doInfoEvent) this.infoEvent(756, true);

        spec.Tunnel_Traffictube2_ControlLighting_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(756, false);
        if (this.doInfoPrintOutput) this.printOutput(756, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 836 and event "Tunnel_Traffictube2_ControlLighting_ButtonManual_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge836() {
        var guard = ((spec.Tunnel_Traffictube2_ControlLighting_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ControlLighting_ButtonManual_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(757, true);
        if (this.doInfoEvent) this.infoEvent(757, true);

        spec.Tunnel_Traffictube2_ControlLighting_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(757, false);
        if (this.doInfoPrintOutput) this.printOutput(757, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 837 and event "Tunnel_Traffictube2_ControlLighting_Mode.c_auto".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge837() {
        var guard = ((spec.Tunnel_Traffictube2_ControlLighting_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._manual));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(758, true);
        if (this.doInfoEvent) this.infoEvent(758, true);

        spec.Tunnel_Traffictube2_ControlLighting_Mode_ = spec.specEnum._auto;

        if (this.doInfoEvent) this.infoEvent(758, false);
        if (this.doInfoPrintOutput) this.printOutput(758, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 838 and event "Tunnel_Traffictube2_ControlLighting_Mode.c_manual".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge838() {
        var guard = ((spec.Tunnel_Traffictube2_ControlLighting_ButtonManual_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._auto));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(759, true);
        if (this.doInfoEvent) this.infoEvent(759, true);

        spec.Tunnel_Traffictube2_ControlLighting_Mode_ = spec.specEnum._manual;

        if (this.doInfoEvent) this.infoEvent(759, false);
        if (this.doInfoPrintOutput) this.printOutput(759, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 839 and event "Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge839() {
        var guard = ((spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(761, true);
        if (this.doInfoEvent) this.infoEvent(761, true);

        spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(761, false);
        if (this.doInfoPrintOutput) this.printOutput(761, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 840 and event "Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge840() {
        var guard = ((spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(762, true);
        if (this.doInfoEvent) this.infoEvent(762, true);

        spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(762, false);
        if (this.doInfoPrintOutput) this.printOutput(762, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 841 and event "Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge841() {
        var guard = ((spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(764, true);
        if (this.doInfoEvent) this.infoEvent(764, true);

        spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(764, false);
        if (this.doInfoPrintOutput) this.printOutput(764, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 842 and event "Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge842() {
        var guard = ((spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(765, true);
        if (this.doInfoEvent) this.infoEvent(765, true);

        spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(765, false);
        if (this.doInfoPrintOutput) this.printOutput(765, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 843 and event "Tunnel_Traffictube2_ControlTrafficlights_Mode.c_auto".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge843() {
        var guard = ((spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube2_ControlTrafficlights_Mode_) == (spec.specEnum._manual));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(766, true);
        if (this.doInfoEvent) this.infoEvent(766, true);

        spec.Tunnel_Traffictube2_ControlTrafficlights_Mode_ = spec.specEnum._auto;

        if (this.doInfoEvent) this.infoEvent(766, false);
        if (this.doInfoPrintOutput) this.printOutput(766, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 844 and event "Tunnel_Traffictube2_ControlTrafficlights_Mode.c_manual".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge844() {
        var guard = ((spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube2_ControlTrafficlights_Mode_) == (spec.specEnum._auto));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(767, true);
        if (this.doInfoEvent) this.infoEvent(767, true);

        spec.Tunnel_Traffictube2_ControlTrafficlights_Mode_ = spec.specEnum._manual;

        if (this.doInfoEvent) this.infoEvent(767, false);
        if (this.doInfoPrintOutput) this.printOutput(767, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 845 and event "Tunnel_Traffictube2_ControlVentilation_ButtonAuto_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge845() {
        var guard = ((spec.Tunnel_Traffictube2_ControlVentilation_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ControlVentilation_ButtonAuto_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(769, true);
        if (this.doInfoEvent) this.infoEvent(769, true);

        spec.Tunnel_Traffictube2_ControlVentilation_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(769, false);
        if (this.doInfoPrintOutput) this.printOutput(769, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 846 and event "Tunnel_Traffictube2_ControlVentilation_ButtonAuto_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge846() {
        var guard = ((spec.Tunnel_Traffictube2_ControlVentilation_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ControlVentilation_ButtonAuto_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(770, true);
        if (this.doInfoEvent) this.infoEvent(770, true);

        spec.Tunnel_Traffictube2_ControlVentilation_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(770, false);
        if (this.doInfoPrintOutput) this.printOutput(770, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 847 and event "Tunnel_Traffictube2_ControlVentilation_ButtonManual_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge847() {
        var guard = ((spec.Tunnel_Traffictube2_ControlVentilation_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ControlVentilation_ButtonManual_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(772, true);
        if (this.doInfoEvent) this.infoEvent(772, true);

        spec.Tunnel_Traffictube2_ControlVentilation_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(772, false);
        if (this.doInfoPrintOutput) this.printOutput(772, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 848 and event "Tunnel_Traffictube2_ControlVentilation_ButtonManual_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge848() {
        var guard = ((spec.Tunnel_Traffictube2_ControlVentilation_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_ControlVentilation_ButtonManual_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(773, true);
        if (this.doInfoEvent) this.infoEvent(773, true);

        spec.Tunnel_Traffictube2_ControlVentilation_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(773, false);
        if (this.doInfoPrintOutput) this.printOutput(773, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 849 and event "Tunnel_Traffictube2_ControlVentilation_Mode.c_auto".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge849() {
        var guard = ((spec.Tunnel_Traffictube2_ControlVentilation_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(774, true);
        if (this.doInfoEvent) this.infoEvent(774, true);

        spec.Tunnel_Traffictube2_ControlVentilation_Mode_ = spec.specEnum._auto;

        if (this.doInfoEvent) this.infoEvent(774, false);
        if (this.doInfoPrintOutput) this.printOutput(774, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 850 and event "Tunnel_Traffictube2_ControlVentilation_Mode.c_manual".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge850() {
        var guard = ((spec.Tunnel_Traffictube2_ControlVentilation_ButtonManual_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(775, true);
        if (this.doInfoEvent) this.infoEvent(775, true);

        spec.Tunnel_Traffictube2_ControlVentilation_Mode_ = spec.specEnum._manual;

        if (this.doInfoEvent) this.infoEvent(775, false);
        if (this.doInfoPrintOutput) this.printOutput(775, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 851 and event "Tunnel_Traffictube2_EscapeDoor_Broadcast.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge851() {
        var guard = (((spec.Tunnel_Traffictube2_RequirementsEscapeDoor1_broadcastAuto_()) && ((spec.Tunnel_Traffictube2_SwitchTimerAudio_) == (spec.specEnum._off))) || ((!(spec.Tunnel_Traffictube2_RequirementsEscapeDoor1_broadcastAuto_())) && (spec.Tunnel_Traffictube2_RequirementsEscapeDoor1_buttonBroadcastOff_()))) && (((spec.Tunnel_Traffictube2_EscapeDoor_Broadcast_) == (spec.specEnum._on)) || ((spec.Tunnel_Traffictube2_EscapeDoor_Broadcast_) == (spec.specEnum._suppressed)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(790, true);
        if (this.doInfoEvent) this.infoEvent(790, true);

        if ((spec.Tunnel_Traffictube2_EscapeDoor_Broadcast_) == (spec.specEnum._on)) {
            spec.Tunnel_Traffictube2_EscapeDoor_Broadcast_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube2_EscapeDoor_Broadcast_) == (spec.specEnum._suppressed)) {
            spec.Tunnel_Traffictube2_EscapeDoor_Broadcast_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(790, false);
        if (this.doInfoPrintOutput) this.printOutput(790, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 852 and event "Tunnel_Traffictube2_EscapeDoor_Broadcast.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge852() {
        var guard = (((spec.Tunnel_Traffictube2_RequirementsEscapeDoor1_broadcastAuto_()) && ((spec.Tunnel_Traffictube2_SwitchTimerAudio_) == (spec.specEnum._on2))) || ((!(spec.Tunnel_Traffictube2_RequirementsEscapeDoor1_broadcastAuto_())) && (spec.Tunnel_Traffictube2_RequirementsEscapeDoor1_buttonBroadcastOn_()))) && (((spec.Tunnel_Traffictube2_Broadcast_) == (spec.specEnum._suppressed)) && (((spec.Tunnel_Traffictube2_EscapeDoor_Broadcast_) == (spec.specEnum._off)) || ((spec.Tunnel_Traffictube2_EscapeDoor_Broadcast_) == (spec.specEnum._suppressed))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(791, true);
        if (this.doInfoEvent) this.infoEvent(791, true);

        if ((spec.Tunnel_Traffictube2_EscapeDoor_Broadcast_) == (spec.specEnum._off)) {
            spec.Tunnel_Traffictube2_EscapeDoor_Broadcast_ = spec.specEnum._on;
        } else if ((spec.Tunnel_Traffictube2_EscapeDoor_Broadcast_) == (spec.specEnum._suppressed)) {
            spec.Tunnel_Traffictube2_EscapeDoor_Broadcast_ = spec.specEnum._on;
        }

        if (this.doInfoEvent) this.infoEvent(791, false);
        if (this.doInfoPrintOutput) this.printOutput(791, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 853 and event "Tunnel_Traffictube2_EscapeDoor_Broadcast.c_suppressed".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge853() {
        var guard = (spec.Tunnel_Traffictube2_RequirementsEscapeDoor1_broadcastAuto_()) && (((spec.Tunnel_Traffictube2_SwitchTimerAudio_) == (spec.specEnum._on1)) && (((spec.Tunnel_Traffictube2_EscapeDoor_Broadcast_) == (spec.specEnum._off)) || ((spec.Tunnel_Traffictube2_EscapeDoor_Broadcast_) == (spec.specEnum._on))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(792, true);
        if (this.doInfoEvent) this.infoEvent(792, true);

        if ((spec.Tunnel_Traffictube2_EscapeDoor_Broadcast_) == (spec.specEnum._off)) {
            spec.Tunnel_Traffictube2_EscapeDoor_Broadcast_ = spec.specEnum._suppressed;
        } else if ((spec.Tunnel_Traffictube2_EscapeDoor_Broadcast_) == (spec.specEnum._on)) {
            spec.Tunnel_Traffictube2_EscapeDoor_Broadcast_ = spec.specEnum._suppressed;
        }

        if (this.doInfoEvent) this.infoEvent(792, false);
        if (this.doInfoPrintOutput) this.printOutput(792, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 854 and event "Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge854() {
        var guard = ((spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(794, true);
        if (this.doInfoEvent) this.infoEvent(794, true);

        spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(794, false);
        if (this.doInfoPrintOutput) this.printOutput(794, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 855 and event "Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge855() {
        var guard = ((spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(795, true);
        if (this.doInfoEvent) this.infoEvent(795, true);

        spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(795, false);
        if (this.doInfoPrintOutput) this.printOutput(795, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 856 and event "Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge856() {
        var guard = ((spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(797, true);
        if (this.doInfoEvent) this.infoEvent(797, true);

        spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(797, false);
        if (this.doInfoPrintOutput) this.printOutput(797, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 857 and event "Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge857() {
        var guard = ((spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(798, true);
        if (this.doInfoEvent) this.infoEvent(798, true);

        spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(798, false);
        if (this.doInfoPrintOutput) this.printOutput(798, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 858 and event "Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge858() {
        var guard = ((spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(800, true);
        if (this.doInfoEvent) this.infoEvent(800, true);

        spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(800, false);
        if (this.doInfoPrintOutput) this.printOutput(800, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 859 and event "Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge859() {
        var guard = ((spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(801, true);
        if (this.doInfoEvent) this.infoEvent(801, true);

        spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(801, false);
        if (this.doInfoPrintOutput) this.printOutput(801, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 860 and event "Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge860() {
        var guard = ((spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(803, true);
        if (this.doInfoEvent) this.infoEvent(803, true);

        spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(803, false);
        if (this.doInfoPrintOutput) this.printOutput(803, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 861 and event "Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge861() {
        var guard = ((spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(804, true);
        if (this.doInfoEvent) this.infoEvent(804, true);

        spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(804, false);
        if (this.doInfoPrintOutput) this.printOutput(804, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 862 and event "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge862() {
        var guard = ((spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(806, true);
        if (this.doInfoEvent) this.infoEvent(806, true);

        spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(806, false);
        if (this.doInfoPrintOutput) this.printOutput(806, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 863 and event "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge863() {
        var guard = ((spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(807, true);
        if (this.doInfoEvent) this.infoEvent(807, true);

        spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(807, false);
        if (this.doInfoPrintOutput) this.printOutput(807, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 864 and event "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge864() {
        var guard = ((spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(809, true);
        if (this.doInfoEvent) this.infoEvent(809, true);

        spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(809, false);
        if (this.doInfoPrintOutput) this.printOutput(809, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 865 and event "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge865() {
        var guard = ((spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(810, true);
        if (this.doInfoEvent) this.infoEvent(810, true);

        spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(810, false);
        if (this.doInfoPrintOutput) this.printOutput(810, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 866 and event "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_Mode.c_auto".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge866() {
        var guard = ((spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_Mode_) == (spec.specEnum._manual));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(811, true);
        if (this.doInfoEvent) this.infoEvent(811, true);

        spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_Mode_ = spec.specEnum._auto;

        if (this.doInfoEvent) this.infoEvent(811, false);
        if (this.doInfoPrintOutput) this.printOutput(811, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 867 and event "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_Mode.c_manual".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge867() {
        var guard = ((spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_Mode_) == (spec.specEnum._auto));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(812, true);
        if (this.doInfoEvent) this.infoEvent(812, true);

        spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_Mode_ = spec.specEnum._manual;

        if (this.doInfoEvent) this.infoEvent(812, false);
        if (this.doInfoPrintOutput) this.printOutput(812, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 868 and event "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge868() {
        var guard = ((spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(814, true);
        if (this.doInfoEvent) this.infoEvent(814, true);

        spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(814, false);
        if (this.doInfoPrintOutput) this.printOutput(814, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 869 and event "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge869() {
        var guard = ((spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(815, true);
        if (this.doInfoEvent) this.infoEvent(815, true);

        spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(815, false);
        if (this.doInfoPrintOutput) this.printOutput(815, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 870 and event "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge870() {
        var guard = ((spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(817, true);
        if (this.doInfoEvent) this.infoEvent(817, true);

        spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(817, false);
        if (this.doInfoPrintOutput) this.printOutput(817, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 871 and event "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge871() {
        var guard = ((spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(818, true);
        if (this.doInfoEvent) this.infoEvent(818, true);

        spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(818, false);
        if (this.doInfoPrintOutput) this.printOutput(818, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 872 and event "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_Mode.c_auto".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge872() {
        var guard = ((spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_Mode_) == (spec.specEnum._manual));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(819, true);
        if (this.doInfoEvent) this.infoEvent(819, true);

        spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_Mode_ = spec.specEnum._auto;

        if (this.doInfoEvent) this.infoEvent(819, false);
        if (this.doInfoPrintOutput) this.printOutput(819, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 873 and event "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_Mode.c_manual".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge873() {
        var guard = ((spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_Mode_) == (spec.specEnum._auto));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(820, true);
        if (this.doInfoEvent) this.infoEvent(820, true);

        spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_Mode_ = spec.specEnum._manual;

        if (this.doInfoEvent) this.infoEvent(820, false);
        if (this.doInfoPrintOutput) this.printOutput(820, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 874 and event "Tunnel_Traffictube2_EscapeDoor_RouteIndication.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge874() {
        var guard = (((spec.Tunnel_Traffictube2_RequirementsEscapeDoor1_routeIndicationAuto_()) && ((spec.Tunnel_Traffictube2_ModeTraffictube_) != (spec.specEnum._evacuation))) || ((spec.Tunnel_Traffictube2_RequirementsEscapeDoor1_routeIndicationManual_()) && (spec.Tunnel_Traffictube2_RequirementsEscapeDoor1_buttonRouteIndicationOff_()))) && ((spec.Tunnel_Traffictube2_EscapeDoor_RouteIndication_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(821, true);
        if (this.doInfoEvent) this.infoEvent(821, true);

        spec.Tunnel_Traffictube2_EscapeDoor_RouteIndication_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(821, false);
        if (this.doInfoPrintOutput) this.printOutput(821, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 875 and event "Tunnel_Traffictube2_EscapeDoor_RouteIndication.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge875() {
        var guard = (((spec.Tunnel_Traffictube2_RequirementsEscapeDoor1_routeIndicationAuto_()) && ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._evacuation))) || ((spec.Tunnel_Traffictube2_RequirementsEscapeDoor1_routeIndicationManual_()) && (spec.Tunnel_Traffictube2_RequirementsEscapeDoor1_buttonRouteIndicationOn_()))) && ((spec.Tunnel_Traffictube2_EscapeDoor_RouteIndication_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(822, true);
        if (this.doInfoEvent) this.infoEvent(822, true);

        spec.Tunnel_Traffictube2_EscapeDoor_RouteIndication_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(822, false);
        if (this.doInfoPrintOutput) this.printOutput(822, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 876 and event "Tunnel_Traffictube2_J32_Mode.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge876() {
        var guard = (((spec.Tunnel_Traffictube2_Trafficlight1_Mode_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube2_Trafficlight2_Mode_) == (spec.specEnum._off))) && (((spec.Tunnel_Traffictube2_Trafficlight3_Mode_) == (spec.specEnum._off)) && (((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube2_J32_Mode_) == (spec.specEnum._on))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(823, true);
        if (this.doInfoEvent) this.infoEvent(823, true);

        spec.Tunnel_Traffictube2_J32_Mode_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(823, false);
        if (this.doInfoPrintOutput) this.printOutput(823, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 877 and event "Tunnel_Traffictube2_J32_Mode.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge877() {
        var guard = (((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._red)) || ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._flash))) && ((spec.Tunnel_Traffictube2_J32_Mode_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(824, true);
        if (this.doInfoEvent) this.infoEvent(824, true);

        spec.Tunnel_Traffictube2_J32_Mode_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(824, false);
        if (this.doInfoPrintOutput) this.printOutput(824, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 878 and event "Tunnel_Traffictube2_J32_TimerReleaseSignal.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge878() {
        var guard = ((spec.Tunnel_Traffictube2_J32_Mode_) == (spec.specEnum._on)) && ((spec.Tunnel_Traffictube2_J32_TimerReleaseSignal_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(825, true);
        if (this.doInfoEvent) this.infoEvent(825, true);

        spec.Tunnel_Traffictube2_J32_TimerReleaseSignal_ = spec.specEnum._running;

        if (this.doInfoEvent) this.infoEvent(825, false);
        if (this.doInfoPrintOutput) this.printOutput(825, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 879 and event "Tunnel_Traffictube2_J32_TimerReleaseSignal.c_reset".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge879() {
        var guard = ((spec.Tunnel_Traffictube2_J32_Mode_) == (spec.specEnum._off)) && (((spec.Tunnel_Traffictube2_J32_TimerReleaseSignal_) == (spec.specEnum._running)) || ((spec.Tunnel_Traffictube2_J32_TimerReleaseSignal_) == (spec.specEnum._finished)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(826, true);
        if (this.doInfoEvent) this.infoEvent(826, true);

        if ((spec.Tunnel_Traffictube2_J32_TimerReleaseSignal_) == (spec.specEnum._running)) {
            spec.Tunnel_Traffictube2_J32_TimerReleaseSignal_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube2_J32_TimerReleaseSignal_) == (spec.specEnum._finished)) {
            spec.Tunnel_Traffictube2_J32_TimerReleaseSignal_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(826, false);
        if (this.doInfoPrintOutput) this.printOutput(826, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 880 and event "Tunnel_Traffictube2_Lighting.c_0".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge880() {
        var guard = (((((spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._auto)) && ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational))) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_Lightsensor_setting_, 0))) || (((spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonLighting0_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube2_Lighting_setting_, 0));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(828, true);
        if (this.doInfoEvent) this.infoEvent(828, true);

        spec.Tunnel_Traffictube2_Lighting_setting_ = 0;

        if (this.doInfoEvent) this.infoEvent(828, false);
        if (this.doInfoPrintOutput) this.printOutput(828, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 881 and event "Tunnel_Traffictube2_Lighting.c_1".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge881() {
        var guard = (((((spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._auto)) && ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational))) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_Lightsensor_setting_, 1))) || (((spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonLighting1_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube2_Lighting_setting_, 1));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(829, true);
        if (this.doInfoEvent) this.infoEvent(829, true);

        spec.Tunnel_Traffictube2_Lighting_setting_ = 1;

        if (this.doInfoEvent) this.infoEvent(829, false);
        if (this.doInfoPrintOutput) this.printOutput(829, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 882 and event "Tunnel_Traffictube2_Lighting.c_2".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge882() {
        var guard = (((((spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._auto)) && ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational))) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_Lightsensor_setting_, 2))) || (((spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonLighting2_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube2_Lighting_setting_, 2));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(830, true);
        if (this.doInfoEvent) this.infoEvent(830, true);

        spec.Tunnel_Traffictube2_Lighting_setting_ = 2;

        if (this.doInfoEvent) this.infoEvent(830, false);
        if (this.doInfoPrintOutput) this.printOutput(830, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 883 and event "Tunnel_Traffictube2_Lighting.c_3".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge883() {
        var guard = (((((spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._auto)) && ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational))) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_Lightsensor_setting_, 3))) || (((spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonLighting3_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube2_Lighting_setting_, 3));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(831, true);
        if (this.doInfoEvent) this.infoEvent(831, true);

        spec.Tunnel_Traffictube2_Lighting_setting_ = 3;

        if (this.doInfoEvent) this.infoEvent(831, false);
        if (this.doInfoPrintOutput) this.printOutput(831, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 884 and event "Tunnel_Traffictube2_Lighting.c_4".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge884() {
        var guard = ((((spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._auto)) && (((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational)) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_Lightsensor_setting_, 4)))) || (((((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._maintenance))) && ((spec.Tunnel_Traffictube2_Lightsensor_setting_) < (5))) || (((spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonLighting4_Observer_) == (spec.specEnum._pressed))))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube2_Lighting_setting_, 4));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(832, true);
        if (this.doInfoEvent) this.infoEvent(832, true);

        spec.Tunnel_Traffictube2_Lighting_setting_ = 4;

        if (this.doInfoEvent) this.infoEvent(832, false);
        if (this.doInfoPrintOutput) this.printOutput(832, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 885 and event "Tunnel_Traffictube2_Lighting.c_5".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge885() {
        var guard = (((((spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._auto)) && (((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery)))) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_Lightsensor_setting_, 5))) || (((spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonLighting5_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube2_Lighting_setting_, 5));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(833, true);
        if (this.doInfoEvent) this.infoEvent(833, true);

        spec.Tunnel_Traffictube2_Lighting_setting_ = 5;

        if (this.doInfoEvent) this.infoEvent(833, false);
        if (this.doInfoPrintOutput) this.printOutput(833, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 886 and event "Tunnel_Traffictube2_Lighting.c_6".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge886() {
        var guard = ((((spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._auto)) && ((((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery))) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_Lightsensor_setting_, 6)))) || (((((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._support)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._standby))) && ((spec.Tunnel_Traffictube2_Lightsensor_setting_) < (7))) || (((spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonLighting6_Observer_) == (spec.specEnum._pressed))))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube2_Lighting_setting_, 6));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(834, true);
        if (this.doInfoEvent) this.infoEvent(834, true);

        spec.Tunnel_Traffictube2_Lighting_setting_ = 6;

        if (this.doInfoEvent) this.infoEvent(834, false);
        if (this.doInfoPrintOutput) this.printOutput(834, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 887 and event "Tunnel_Traffictube2_Lighting.c_7".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge887() {
        var guard = (((((spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._auto)) && ((((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery))) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._support)))) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_Lightsensor_setting_, 7))) || (((spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonLighting7_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube2_Lighting_setting_, 7));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(835, true);
        if (this.doInfoEvent) this.infoEvent(835, true);

        spec.Tunnel_Traffictube2_Lighting_setting_ = 7;

        if (this.doInfoEvent) this.infoEvent(835, false);
        if (this.doInfoPrintOutput) this.printOutput(835, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 888 and event "Tunnel_Traffictube2_Lighting.c_8".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge888() {
        var guard = ((((spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._auto)) && ((((((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery))) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._support))) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_Lightsensor_setting_, 8))) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._emergency)))) || (((spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonLighting8_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube2_Lighting_setting_, 8));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(836, true);
        if (this.doInfoEvent) this.infoEvent(836, true);

        spec.Tunnel_Traffictube2_Lighting_setting_ = 8;

        if (this.doInfoEvent) this.infoEvent(836, false);
        if (this.doInfoPrintOutput) this.printOutput(836, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 889 and event "Tunnel_Traffictube2_MatrixsignTrafficlight.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge889() {
        var guard = ((((spec.Tunnel_Traffictube2_Trafficlight1_Mode_) == (spec.specEnum._red)) || ((spec.Tunnel_Traffictube2_Trafficlight2_Mode_) == (spec.specEnum._red))) || (((spec.Tunnel_Traffictube2_Trafficlight3_Mode_) == (spec.specEnum._red)) || (((((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube2_Trafficlight1_Mode_) == (spec.specEnum._off))) && ((spec.Tunnel_Traffictube2_Trafficlight2_Mode_) == (spec.specEnum._off))) && ((spec.Tunnel_Traffictube2_Trafficlight3_Mode_) == (spec.specEnum._off))))) && ((spec.Tunnel_Traffictube2_MatrixsignTrafficlight_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(846, true);
        if (this.doInfoEvent) this.infoEvent(846, true);

        spec.Tunnel_Traffictube2_MatrixsignTrafficlight_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(846, false);
        if (this.doInfoPrintOutput) this.printOutput(846, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 890 and event "Tunnel_Traffictube2_MatrixsignTrafficlight.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge890() {
        var guard = (((((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._red)) || ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._flash))) || (((((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube2_Trafficlight1_Mode_) != (spec.specEnum._off))) && ((spec.Tunnel_Traffictube2_Trafficlight2_Mode_) != (spec.specEnum._off))) && ((spec.Tunnel_Traffictube2_Trafficlight3_Mode_) != (spec.specEnum._off)))) && ((spec.Tunnel_Traffictube2_Trafficlight1_Mode_) != (spec.specEnum._red))) && (((spec.Tunnel_Traffictube2_Trafficlight2_Mode_) != (spec.specEnum._red)) && (((spec.Tunnel_Traffictube2_Trafficlight3_Mode_) != (spec.specEnum._red)) && ((spec.Tunnel_Traffictube2_MatrixsignTrafficlight_) == (spec.specEnum._off))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(847, true);
        if (this.doInfoEvent) this.infoEvent(847, true);

        spec.Tunnel_Traffictube2_MatrixsignTrafficlight_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(847, false);
        if (this.doInfoPrintOutput) this.printOutput(847, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 891 and event "Tunnel_Traffictube2_MatrixsignUnpressed.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge891() {
        var guard = (((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube2_Trafficlight1_Mode_) == (spec.specEnum._off))) && (((spec.Tunnel_Traffictube2_Trafficlight2_Mode_) == (spec.specEnum._off)) && (((spec.Tunnel_Traffictube2_Trafficlight3_Mode_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube2_MatrixsignUnpressed_) == (spec.specEnum._on))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(848, true);
        if (this.doInfoEvent) this.infoEvent(848, true);

        spec.Tunnel_Traffictube2_MatrixsignUnpressed_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(848, false);
        if (this.doInfoPrintOutput) this.printOutput(848, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 892 and event "Tunnel_Traffictube2_MatrixsignUnpressed.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge892() {
        var guard = (((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._red)) || ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._flash))) && ((spec.Tunnel_Traffictube2_MatrixsignUnpressed_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(849, true);
        if (this.doInfoEvent) this.infoEvent(849, true);

        spec.Tunnel_Traffictube2_MatrixsignUnpressed_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(849, false);
        if (this.doInfoPrintOutput) this.printOutput(849, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 893 and event "Tunnel_Traffictube2_ModeTraffictube.c_emergency".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge893() {
        var guard = ((((spec.Tunnel_Traffictube2_PopUp_ButtonAccept_Observer_) == (spec.specEnum._pressed)) || ((spec.Tunnel_Traffictube2_PopUp_Timer_) == (spec.specEnum._finished))) && ((spec.Tunnel_Traffictube1_ModeTraffictube_) != (spec.specEnum._emergency))) && (((spec.Tunnel_Traffictube1_ModeTraffictube_) != (spec.specEnum._evacuation)) && ((((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._standby))) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(850, true);
        if (this.doInfoEvent) this.infoEvent(850, true);

        if ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._stopped)) {
            spec.Tunnel_Traffictube2_AccessBoombarriers_ = spec.specEnum._closing;
        } else if ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._opening)) {
            spec.Tunnel_Traffictube2_AccessBoombarriers_ = spec.specEnum._closing;
        } else if ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._closing)) {
            spec.Tunnel_Traffictube2_AccessBoombarriers_ = spec.specEnum._closing;
        } else if ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally)) {
            spec.Tunnel_Traffictube2_AccessBoombarriers_ = spec.specEnum._closingUnconditionally;
        }
        if ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._off)) {
            spec.Tunnel_Traffictube2_AccessTrafficlights_ = spec.specEnum._red;
        } else if ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._flash)) {
            spec.Tunnel_Traffictube2_AccessTrafficlights_ = spec.specEnum._red;
        } else if ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._red)) {
            spec.Tunnel_Traffictube2_AccessTrafficlights_ = spec.specEnum._red;
        }
        if ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational)) {
            spec.Tunnel_Traffictube2_ModeTraffictube_ = spec.specEnum._emergency;
        } else if ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._standby)) {
            spec.Tunnel_Traffictube2_ModeTraffictube_ = spec.specEnum._emergency;
        } else if ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery)) {
            spec.Tunnel_Traffictube2_ModeTraffictube_ = spec.specEnum._emergency;
        }

        if (this.doInfoEvent) this.infoEvent(850, false);
        if (this.doInfoPrintOutput) this.printOutput(850, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 894 and event "Tunnel_Traffictube2_ModeTraffictube.c_evacuation".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge894() {
        var guard = ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._support)) && (((spec.Tunnel_Traffictube2_ButtonEvacuation_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._emergency)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(851, true);
        if (this.doInfoEvent) this.infoEvent(851, true);

        spec.Tunnel_Traffictube2_ModeTraffictube_ = spec.specEnum._evacuation;

        if (this.doInfoEvent) this.infoEvent(851, false);
        if (this.doInfoPrintOutput) this.printOutput(851, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 895 and event "Tunnel_Traffictube2_ModeTraffictube.c_evacuationEmergency".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge895() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonEmergency_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._evacuation));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(852, true);
        if (this.doInfoEvent) this.infoEvent(852, true);

        spec.Tunnel_Traffictube2_ModeTraffictube_ = spec.specEnum._emergency;

        if (this.doInfoEvent) this.infoEvent(852, false);
        if (this.doInfoPrintOutput) this.printOutput(852, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 896 and event "Tunnel_Traffictube2_ModeTraffictube.c_maintenance".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge896() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonMaintenance_Observer_) == (spec.specEnum._pressed)) && (((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(853, true);
        if (this.doInfoEvent) this.infoEvent(853, true);

        if ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational)) {
            spec.Tunnel_Traffictube2_ModeTraffictube_ = spec.specEnum._maintenance;
        } else if ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery)) {
            spec.Tunnel_Traffictube2_ModeTraffictube_ = spec.specEnum._maintenance;
        }

        if (this.doInfoEvent) this.infoEvent(853, false);
        if (this.doInfoPrintOutput) this.printOutput(853, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 897 and event "Tunnel_Traffictube2_ModeTraffictube.c_operational".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge897() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonOperational_Observer_) == (spec.specEnum._pressed)) && (((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._standby)) || (((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._maintenance))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(854, true);
        if (this.doInfoEvent) this.infoEvent(854, true);

        if ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._standby)) {
            spec.Tunnel_Traffictube2_ModeTraffictube_ = spec.specEnum._operational;
        } else if ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery)) {
            spec.Tunnel_Traffictube2_ModeTraffictube_ = spec.specEnum._operational;
        } else if ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._maintenance)) {
            spec.Tunnel_Traffictube2_ModeTraffictube_ = spec.specEnum._operational;
        }

        if (this.doInfoEvent) this.infoEvent(854, false);
        if (this.doInfoPrintOutput) this.printOutput(854, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 898 and event "Tunnel_Traffictube2_ModeTraffictube.c_recovery".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge898() {
        var guard = ((((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._emergency)) && ((spec.Tunnel_Traffictube2_ButtonRecovery_Observer_) == (spec.specEnum._pressed))) || ((((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._support)) && ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery))) || (((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._maintenance)) && ((spec.Tunnel_Traffictube2_ButtonRecovery_Observer_) == (spec.specEnum._pressed))))) && (((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._emergency)) || (((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._support)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._maintenance))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(855, true);
        if (this.doInfoEvent) this.infoEvent(855, true);

        if ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._emergency)) {
            spec.Tunnel_Traffictube2_ModeTraffictube_ = spec.specEnum._recovery;
        } else if ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._support)) {
            spec.Tunnel_Traffictube2_ModeTraffictube_ = spec.specEnum._recovery;
        } else if ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._maintenance)) {
            spec.Tunnel_Traffictube2_ModeTraffictube_ = spec.specEnum._recovery;
        }

        if (this.doInfoEvent) this.infoEvent(855, false);
        if (this.doInfoPrintOutput) this.printOutput(855, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 899 and event "Tunnel_Traffictube2_ModeTraffictube.c_standby".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge899() {
        var guard = (((((spec.Tunnel_Traffictube2_Smokedetection_setting_) > (3)) || ((spec.Tunnel_Traffictube2_EmergencyCabinetA_HandheldExtinguisher_) == (spec.specEnum._on))) || ((spec.Tunnel_Traffictube2_EmergencyCabinetA_Firehose_) == (spec.specEnum._on))) || ((spec.Tunnel_Traffictube2_EmergencyCabinetC_HandheldExtinguisher_) == (spec.specEnum._on))) && (((spec.Tunnel_Traffictube1_ModeTraffictube_) != (spec.specEnum._emergency)) && (((spec.Tunnel_Traffictube1_ModeTraffictube_) != (spec.specEnum._evacuation)) && ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(856, true);
        if (this.doInfoEvent) this.infoEvent(856, true);

        spec.Tunnel_Traffictube2_ModeTraffictube_ = spec.specEnum._standby;

        if (this.doInfoEvent) this.infoEvent(856, false);
        if (this.doInfoPrintOutput) this.printOutput(856, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 900 and event "Tunnel_Traffictube2_ModeTraffictube.c_support".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge900() {
        var guard = ((((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._emergency)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._evacuation))) && ((spec.Tunnel_Traffictube2_ModeTraffictube_) != (spec.specEnum._emergency))) && ((((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._standby))) || (((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._maintenance))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(857, true);
        if (this.doInfoEvent) this.infoEvent(857, true);

        if ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._stopped)) {
            spec.Tunnel_Traffictube2_AccessBoombarriers_ = spec.specEnum._closing;
        } else if ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._opening)) {
            spec.Tunnel_Traffictube2_AccessBoombarriers_ = spec.specEnum._closing;
        } else if ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._closing)) {
            spec.Tunnel_Traffictube2_AccessBoombarriers_ = spec.specEnum._closing;
        } else if ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally)) {
            spec.Tunnel_Traffictube2_AccessBoombarriers_ = spec.specEnum._closingUnconditionally;
        }
        if ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._off)) {
            spec.Tunnel_Traffictube2_AccessTrafficlights_ = spec.specEnum._red;
        } else if ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._flash)) {
            spec.Tunnel_Traffictube2_AccessTrafficlights_ = spec.specEnum._red;
        } else if ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._red)) {
            spec.Tunnel_Traffictube2_AccessTrafficlights_ = spec.specEnum._red;
        }
        if ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational)) {
            spec.Tunnel_Traffictube2_ModeTraffictube_ = spec.specEnum._support;
        } else if ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._standby)) {
            spec.Tunnel_Traffictube2_ModeTraffictube_ = spec.specEnum._support;
        } else if ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery)) {
            spec.Tunnel_Traffictube2_ModeTraffictube_ = spec.specEnum._support;
        } else if ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._maintenance)) {
            spec.Tunnel_Traffictube2_ModeTraffictube_ = spec.specEnum._support;
        }

        if (this.doInfoEvent) this.infoEvent(857, false);
        if (this.doInfoPrintOutput) this.printOutput(857, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 901 and event "Tunnel_Traffictube2_PopUp_ButtonAccept_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge901() {
        var guard = ((spec.Tunnel_Traffictube2_PopUp_ButtonAccept_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_PopUp_ButtonAccept_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(859, true);
        if (this.doInfoEvent) this.infoEvent(859, true);

        spec.Tunnel_Traffictube2_PopUp_ButtonAccept_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(859, false);
        if (this.doInfoPrintOutput) this.printOutput(859, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 902 and event "Tunnel_Traffictube2_PopUp_ButtonAccept_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge902() {
        var guard = ((spec.Tunnel_Traffictube2_PopUp_ButtonAccept_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_PopUp_ButtonAccept_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(860, true);
        if (this.doInfoEvent) this.infoEvent(860, true);

        spec.Tunnel_Traffictube2_PopUp_ButtonAccept_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(860, false);
        if (this.doInfoPrintOutput) this.printOutput(860, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 903 and event "Tunnel_Traffictube2_PopUp_ButtonReject_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge903() {
        var guard = ((spec.Tunnel_Traffictube2_PopUp_ButtonReject_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_PopUp_ButtonReject_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(862, true);
        if (this.doInfoEvent) this.infoEvent(862, true);

        spec.Tunnel_Traffictube2_PopUp_ButtonReject_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(862, false);
        if (this.doInfoPrintOutput) this.printOutput(862, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 904 and event "Tunnel_Traffictube2_PopUp_ButtonReject_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge904() {
        var guard = ((spec.Tunnel_Traffictube2_PopUp_ButtonReject_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_Traffictube2_PopUp_ButtonReject_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(863, true);
        if (this.doInfoEvent) this.infoEvent(863, true);

        spec.Tunnel_Traffictube2_PopUp_ButtonReject_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(863, false);
        if (this.doInfoPrintOutput) this.printOutput(863, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 905 and event "Tunnel_Traffictube2_PopUp_Timer.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge905() {
        var guard = ((spec.Tunnel_Traffictube2_PopUp_Window_) == (spec.specEnum._on)) && ((spec.Tunnel_Traffictube2_PopUp_Timer_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(864, true);
        if (this.doInfoEvent) this.infoEvent(864, true);

        spec.Tunnel_Traffictube2_PopUp_Timer_ = spec.specEnum._running;

        if (this.doInfoEvent) this.infoEvent(864, false);
        if (this.doInfoPrintOutput) this.printOutput(864, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 906 and event "Tunnel_Traffictube2_PopUp_Timer.c_reset".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge906() {
        var guard = ((spec.Tunnel_Traffictube2_PopUp_Window_) == (spec.specEnum._off)) && (((spec.Tunnel_Traffictube2_PopUp_Timer_) == (spec.specEnum._running)) || ((spec.Tunnel_Traffictube2_PopUp_Timer_) == (spec.specEnum._finished)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(865, true);
        if (this.doInfoEvent) this.infoEvent(865, true);

        if ((spec.Tunnel_Traffictube2_PopUp_Timer_) == (spec.specEnum._running)) {
            spec.Tunnel_Traffictube2_PopUp_Timer_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube2_PopUp_Timer_) == (spec.specEnum._finished)) {
            spec.Tunnel_Traffictube2_PopUp_Timer_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(865, false);
        if (this.doInfoPrintOutput) this.printOutput(865, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 907 and event "Tunnel_Traffictube2_PopUp_Window.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge907() {
        var guard = ((((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._emergency)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._support))) || ((spec.Tunnel_Traffictube2_PopUp_ButtonReject_Observer_) == (spec.specEnum._pressed))) && (((((spec.Tunnel_Traffictube2_PopUp_ButtonAccept_Observer_) == (spec.specEnum._pressed)) || ((spec.Tunnel_Traffictube2_PopUp_ButtonReject_Observer_) == (spec.specEnum._pressed))) || ((spec.Tunnel_Traffictube2_PopUp_Timer_) == (spec.specEnum._finished))) && ((spec.Tunnel_Traffictube2_PopUp_Window_) == (spec.specEnum._on)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(867, true);
        if (this.doInfoEvent) this.infoEvent(867, true);

        spec.Tunnel_Traffictube2_PopUp_Window_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(867, false);
        if (this.doInfoPrintOutput) this.printOutput(867, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 908 and event "Tunnel_Traffictube2_PopUp_Window.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge908() {
        var guard = (((spec.Tunnel_Traffictube2_ButtonEmergency_Observer_) == (spec.specEnum._pressed)) || ((((((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational)) && ((spec.Tunnel_Traffictube2_Standstilldetection_) != (spec.specEnum._off))) && ((spec.Tunnel_Traffictube2_Smokedetection_setting_) > (3))) && (((spec.Tunnel_Traffictube2_EmergencyCabinetA_SensorOpen_) == (spec.specEnum._on)) || ((spec.Tunnel_Traffictube2_EmergencyCabinetC_SensorOpen_) == (spec.specEnum._on)))) && ((((((spec.Tunnel_Traffictube2_EmergencyCabinetA_HandheldExtinguisher_) == (spec.specEnum._on)) || ((spec.Tunnel_Traffictube2_EmergencyCabinetA_Firehose_) == (spec.specEnum._on))) || ((spec.Tunnel_Traffictube2_EmergencyCabinetA_Phone_) == (spec.specEnum._on))) || ((spec.Tunnel_Traffictube2_EmergencyCabinetC_HandheldExtinguisher_) == (spec.specEnum._on))) || ((spec.Tunnel_Traffictube2_EmergencyCabinetC_Phone_) == (spec.specEnum._on))))) && (((spec.Tunnel_Traffictube2_PopUp_ButtonAccept_Observer_) == (spec.specEnum._unpressed)) && (((spec.Tunnel_Traffictube2_PopUp_ButtonReject_Observer_) == (spec.specEnum._unpressed)) && ((spec.Tunnel_Traffictube2_PopUp_Window_) == (spec.specEnum._off))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(868, true);
        if (this.doInfoEvent) this.infoEvent(868, true);

        spec.Tunnel_Traffictube2_PopUp_Window_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(868, false);
        if (this.doInfoPrintOutput) this.printOutput(868, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 909 and event "Tunnel_Traffictube2_Recorder.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge909() {
        var guard = (((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery))) && ((spec.Tunnel_Traffictube2_Recorder_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(869, true);
        if (this.doInfoEvent) this.infoEvent(869, true);

        spec.Tunnel_Traffictube2_Recorder_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(869, false);
        if (this.doInfoPrintOutput) this.printOutput(869, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 910 and event "Tunnel_Traffictube2_Recorder.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge910() {
        var guard = (((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._emergency)) || (((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._evacuation)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._support)))) && ((spec.Tunnel_Traffictube2_Recorder_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(870, true);
        if (this.doInfoEvent) this.infoEvent(870, true);

        spec.Tunnel_Traffictube2_Recorder_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(870, false);
        if (this.doInfoPrintOutput) this.printOutput(870, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 911 and event "Tunnel_Traffictube2_SwitchTimerAudio.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge911() {
        var guard = ((spec.Tunnel_Traffictube2_ModeTraffictube_) != (spec.specEnum._evacuation)) && (((spec.Tunnel_Traffictube2_SwitchTimerAudio_) == (spec.specEnum._on1)) || ((spec.Tunnel_Traffictube2_SwitchTimerAudio_) == (spec.specEnum._on2)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(883, true);
        if (this.doInfoEvent) this.infoEvent(883, true);

        if ((spec.Tunnel_Traffictube2_SwitchTimerAudio_) == (spec.specEnum._on1)) {
            spec.Tunnel_Traffictube2_SwitchTimerAudio_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube2_SwitchTimerAudio_) == (spec.specEnum._on2)) {
            spec.Tunnel_Traffictube2_SwitchTimerAudio_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(883, false);
        if (this.doInfoPrintOutput) this.printOutput(883, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 912 and event "Tunnel_Traffictube2_SwitchTimerAudio.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge912() {
        var guard = ((spec.Tunnel_Traffictube2_ButtonEvacuation_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_Traffictube2_SwitchTimerAudio_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(884, true);
        if (this.doInfoEvent) this.infoEvent(884, true);

        spec.Tunnel_Traffictube2_SwitchTimerAudio_ = spec.specEnum._on1;

        if (this.doInfoEvent) this.infoEvent(884, false);
        if (this.doInfoPrintOutput) this.printOutput(884, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 913 and event "Tunnel_Traffictube2_TimerCameraViewEven.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge913() {
        var guard = (((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera2)) || (((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera4)) || ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera6)))) && ((spec.Tunnel_Traffictube2_TimerCameraViewEven_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(886, true);
        if (this.doInfoEvent) this.infoEvent(886, true);

        spec.Tunnel_Traffictube2_TimerCameraViewEven_ = spec.specEnum._running;

        if (this.doInfoEvent) this.infoEvent(886, false);
        if (this.doInfoPrintOutput) this.printOutput(886, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 914 and event "Tunnel_Traffictube2_TimerCameraViewEven.c_reset".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge914() {
        var guard = ((((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera1)) || ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera3))) || (((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera5)) || ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._off)))) && (((spec.Tunnel_Traffictube2_TimerCameraViewEven_) == (spec.specEnum._running)) || ((spec.Tunnel_Traffictube2_TimerCameraViewEven_) == (spec.specEnum._finished)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(887, true);
        if (this.doInfoEvent) this.infoEvent(887, true);

        if ((spec.Tunnel_Traffictube2_TimerCameraViewEven_) == (spec.specEnum._running)) {
            spec.Tunnel_Traffictube2_TimerCameraViewEven_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube2_TimerCameraViewEven_) == (spec.specEnum._finished)) {
            spec.Tunnel_Traffictube2_TimerCameraViewEven_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(887, false);
        if (this.doInfoPrintOutput) this.printOutput(887, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 915 and event "Tunnel_Traffictube2_TimerCameraViewUneven.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge915() {
        var guard = (((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera1)) || (((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera3)) || ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera5)))) && ((spec.Tunnel_Traffictube2_TimerCameraViewUneven_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(889, true);
        if (this.doInfoEvent) this.infoEvent(889, true);

        spec.Tunnel_Traffictube2_TimerCameraViewUneven_ = spec.specEnum._running;

        if (this.doInfoEvent) this.infoEvent(889, false);
        if (this.doInfoPrintOutput) this.printOutput(889, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 916 and event "Tunnel_Traffictube2_TimerCameraViewUneven.c_reset".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge916() {
        var guard = ((((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera2)) || ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera4))) || (((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera6)) || ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._off)))) && (((spec.Tunnel_Traffictube2_TimerCameraViewUneven_) == (spec.specEnum._running)) || ((spec.Tunnel_Traffictube2_TimerCameraViewUneven_) == (spec.specEnum._finished)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(890, true);
        if (this.doInfoEvent) this.infoEvent(890, true);

        if ((spec.Tunnel_Traffictube2_TimerCameraViewUneven_) == (spec.specEnum._running)) {
            spec.Tunnel_Traffictube2_TimerCameraViewUneven_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube2_TimerCameraViewUneven_) == (spec.specEnum._finished)) {
            spec.Tunnel_Traffictube2_TimerCameraViewUneven_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(890, false);
        if (this.doInfoPrintOutput) this.printOutput(890, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 917 and event "Tunnel_Traffictube2_Trafficlight1_Mode.c_flash".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge917() {
        var guard = (((((spec.Tunnel_Traffictube2_RequirementsTrafficlight1_red_()) && ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._off))) || ((spec.Tunnel_Traffictube2_RequirementsTrafficlight1_off_()) && ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._red)))) || ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._flash))) && (!((spec.Tunnel_Traffictube2_RequirementsTrafficlight1_red_()) && (!(spec.Tunnel_Traffictube2_Boombarrier1_open_()))))) && (((!((spec.Tunnel_Traffictube2_RequirementsTrafficlight1_red_()) && (!(spec.Tunnel_Traffictube2_Boombarrier2_open_())))) && ((spec.Tunnel_Traffictube2_J32_Mode_) != (spec.specEnum._off))) && ((!((spec.Tunnel_Traffictube2_RequirementsTrafficlight1_off_()) && ((spec.Tunnel_Traffictube2_J32_TimerReleaseSignal_) != (spec.specEnum._finished)))) && (((spec.Tunnel_Traffictube2_Trafficlight1_Mode_) == (spec.specEnum._off)) || (((spec.Tunnel_Traffictube2_Trafficlight1_Mode_) == (spec.specEnum._yellow)) || ((spec.Tunnel_Traffictube2_Trafficlight1_Mode_) == (spec.specEnum._red))))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(892, true);
        if (this.doInfoEvent) this.infoEvent(892, true);

        if ((spec.Tunnel_Traffictube2_Trafficlight1_Mode_) == (spec.specEnum._off)) {
            spec.Tunnel_Traffictube2_Trafficlight1_Mode_ = spec.specEnum._flash;
        } else if ((spec.Tunnel_Traffictube2_Trafficlight1_Mode_) == (spec.specEnum._yellow)) {
            spec.Tunnel_Traffictube2_Trafficlight1_Mode_ = spec.specEnum._flash;
        } else if ((spec.Tunnel_Traffictube2_Trafficlight1_Mode_) == (spec.specEnum._red)) {
            spec.Tunnel_Traffictube2_Trafficlight1_Mode_ = spec.specEnum._flash;
        }

        if (this.doInfoEvent) this.infoEvent(892, false);
        if (this.doInfoPrintOutput) this.printOutput(892, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 918 and event "Tunnel_Traffictube2_Trafficlight1_Mode.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge918() {
        var guard = ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube2_Trafficlight1_Mode_) == (spec.specEnum._flash));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(893, true);
        if (this.doInfoEvent) this.infoEvent(893, true);

        spec.Tunnel_Traffictube2_Trafficlight1_Mode_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(893, false);
        if (this.doInfoPrintOutput) this.printOutput(893, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 919 and event "Tunnel_Traffictube2_Trafficlight1_Mode.c_red".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge919() {
        var guard = (spec.Tunnel_Traffictube2_Trafficlight1_Mode_) == (spec.specEnum._yellow);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(894, true);
        if (this.doInfoEvent) this.infoEvent(894, true);

        spec.Tunnel_Traffictube2_Trafficlight1_Mode_ = spec.specEnum._red;

        if (this.doInfoEvent) this.infoEvent(894, false);
        if (this.doInfoPrintOutput) this.printOutput(894, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 920 and event "Tunnel_Traffictube2_Trafficlight1_Mode.c_yellow".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge920() {
        var guard = ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._red)) && ((spec.Tunnel_Traffictube2_Trafficlight1_Mode_) == (spec.specEnum._flash));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(895, true);
        if (this.doInfoEvent) this.infoEvent(895, true);

        spec.Tunnel_Traffictube2_Trafficlight1_Mode_ = spec.specEnum._yellow;

        if (this.doInfoEvent) this.infoEvent(895, false);
        if (this.doInfoPrintOutput) this.printOutput(895, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 921 and event "Tunnel_Traffictube2_Trafficlight1_TimerReleaseSignal.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge921() {
        var guard = ((spec.Tunnel_Traffictube2_Trafficlight1_Mode_) == (spec.specEnum._red)) && ((spec.Tunnel_Traffictube2_Trafficlight1_TimerReleaseSignal_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(898, true);
        if (this.doInfoEvent) this.infoEvent(898, true);

        spec.Tunnel_Traffictube2_Trafficlight1_TimerReleaseSignal_ = spec.specEnum._running;

        if (this.doInfoEvent) this.infoEvent(898, false);
        if (this.doInfoPrintOutput) this.printOutput(898, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 922 and event "Tunnel_Traffictube2_Trafficlight1_TimerReleaseSignal.c_reset".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge922() {
        var guard = ((spec.Tunnel_Traffictube2_Trafficlight1_Mode_) != (spec.specEnum._red)) && (((spec.Tunnel_Traffictube2_Trafficlight1_TimerReleaseSignal_) == (spec.specEnum._running)) || ((spec.Tunnel_Traffictube2_Trafficlight1_TimerReleaseSignal_) == (spec.specEnum._finished)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(899, true);
        if (this.doInfoEvent) this.infoEvent(899, true);

        if ((spec.Tunnel_Traffictube2_Trafficlight1_TimerReleaseSignal_) == (spec.specEnum._running)) {
            spec.Tunnel_Traffictube2_Trafficlight1_TimerReleaseSignal_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube2_Trafficlight1_TimerReleaseSignal_) == (spec.specEnum._finished)) {
            spec.Tunnel_Traffictube2_Trafficlight1_TimerReleaseSignal_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(899, false);
        if (this.doInfoPrintOutput) this.printOutput(899, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 923 and event "Tunnel_Traffictube2_Trafficlight2_Mode.c_flash".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge923() {
        var guard = (((((spec.Tunnel_Traffictube2_RequirementsTrafficlight2_red_()) && ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._off))) || ((spec.Tunnel_Traffictube2_RequirementsTrafficlight2_off_()) && ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._red)))) || ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._flash))) && (!((spec.Tunnel_Traffictube2_RequirementsTrafficlight2_red_()) && (!(spec.Tunnel_Traffictube2_Boombarrier1_open_()))))) && (((!((spec.Tunnel_Traffictube2_RequirementsTrafficlight2_red_()) && (!(spec.Tunnel_Traffictube2_Boombarrier2_open_())))) && ((spec.Tunnel_Traffictube2_J32_Mode_) != (spec.specEnum._off))) && ((!((spec.Tunnel_Traffictube2_RequirementsTrafficlight2_off_()) && ((spec.Tunnel_Traffictube2_J32_TimerReleaseSignal_) != (spec.specEnum._finished)))) && (((spec.Tunnel_Traffictube2_Trafficlight2_Mode_) == (spec.specEnum._off)) || (((spec.Tunnel_Traffictube2_Trafficlight2_Mode_) == (spec.specEnum._yellow)) || ((spec.Tunnel_Traffictube2_Trafficlight2_Mode_) == (spec.specEnum._red))))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(901, true);
        if (this.doInfoEvent) this.infoEvent(901, true);

        if ((spec.Tunnel_Traffictube2_Trafficlight2_Mode_) == (spec.specEnum._off)) {
            spec.Tunnel_Traffictube2_Trafficlight2_Mode_ = spec.specEnum._flash;
        } else if ((spec.Tunnel_Traffictube2_Trafficlight2_Mode_) == (spec.specEnum._yellow)) {
            spec.Tunnel_Traffictube2_Trafficlight2_Mode_ = spec.specEnum._flash;
        } else if ((spec.Tunnel_Traffictube2_Trafficlight2_Mode_) == (spec.specEnum._red)) {
            spec.Tunnel_Traffictube2_Trafficlight2_Mode_ = spec.specEnum._flash;
        }

        if (this.doInfoEvent) this.infoEvent(901, false);
        if (this.doInfoPrintOutput) this.printOutput(901, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 924 and event "Tunnel_Traffictube2_Trafficlight2_Mode.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge924() {
        var guard = ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube2_Trafficlight2_Mode_) == (spec.specEnum._flash));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(902, true);
        if (this.doInfoEvent) this.infoEvent(902, true);

        spec.Tunnel_Traffictube2_Trafficlight2_Mode_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(902, false);
        if (this.doInfoPrintOutput) this.printOutput(902, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 925 and event "Tunnel_Traffictube2_Trafficlight2_Mode.c_red".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge925() {
        var guard = (spec.Tunnel_Traffictube2_Trafficlight2_Mode_) == (spec.specEnum._yellow);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(903, true);
        if (this.doInfoEvent) this.infoEvent(903, true);

        spec.Tunnel_Traffictube2_Trafficlight2_Mode_ = spec.specEnum._red;

        if (this.doInfoEvent) this.infoEvent(903, false);
        if (this.doInfoPrintOutput) this.printOutput(903, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 926 and event "Tunnel_Traffictube2_Trafficlight2_Mode.c_yellow".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge926() {
        var guard = ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._red)) && ((spec.Tunnel_Traffictube2_Trafficlight2_Mode_) == (spec.specEnum._flash));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(904, true);
        if (this.doInfoEvent) this.infoEvent(904, true);

        spec.Tunnel_Traffictube2_Trafficlight2_Mode_ = spec.specEnum._yellow;

        if (this.doInfoEvent) this.infoEvent(904, false);
        if (this.doInfoPrintOutput) this.printOutput(904, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 927 and event "Tunnel_Traffictube2_Trafficlight2_TimerReleaseSignal.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge927() {
        var guard = ((spec.Tunnel_Traffictube2_Trafficlight2_Mode_) == (spec.specEnum._red)) && ((spec.Tunnel_Traffictube2_Trafficlight2_TimerReleaseSignal_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(907, true);
        if (this.doInfoEvent) this.infoEvent(907, true);

        spec.Tunnel_Traffictube2_Trafficlight2_TimerReleaseSignal_ = spec.specEnum._running;

        if (this.doInfoEvent) this.infoEvent(907, false);
        if (this.doInfoPrintOutput) this.printOutput(907, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 928 and event "Tunnel_Traffictube2_Trafficlight2_TimerReleaseSignal.c_reset".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge928() {
        var guard = ((spec.Tunnel_Traffictube2_Trafficlight2_Mode_) != (spec.specEnum._red)) && (((spec.Tunnel_Traffictube2_Trafficlight2_TimerReleaseSignal_) == (spec.specEnum._running)) || ((spec.Tunnel_Traffictube2_Trafficlight2_TimerReleaseSignal_) == (spec.specEnum._finished)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(908, true);
        if (this.doInfoEvent) this.infoEvent(908, true);

        if ((spec.Tunnel_Traffictube2_Trafficlight2_TimerReleaseSignal_) == (spec.specEnum._running)) {
            spec.Tunnel_Traffictube2_Trafficlight2_TimerReleaseSignal_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube2_Trafficlight2_TimerReleaseSignal_) == (spec.specEnum._finished)) {
            spec.Tunnel_Traffictube2_Trafficlight2_TimerReleaseSignal_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(908, false);
        if (this.doInfoPrintOutput) this.printOutput(908, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 929 and event "Tunnel_Traffictube2_Trafficlight3_Mode.c_flash".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge929() {
        var guard = (((((spec.Tunnel_Traffictube2_RequirementsTrafficlight3_red_()) && ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._off))) || ((spec.Tunnel_Traffictube2_RequirementsTrafficlight3_off_()) && ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._red)))) || ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._flash))) && (!((spec.Tunnel_Traffictube2_RequirementsTrafficlight3_red_()) && (!(spec.Tunnel_Traffictube2_Boombarrier1_open_()))))) && (((!((spec.Tunnel_Traffictube2_RequirementsTrafficlight3_red_()) && (!(spec.Tunnel_Traffictube2_Boombarrier2_open_())))) && ((spec.Tunnel_Traffictube2_J32_Mode_) != (spec.specEnum._off))) && ((!((spec.Tunnel_Traffictube2_RequirementsTrafficlight3_off_()) && ((spec.Tunnel_Traffictube2_J32_TimerReleaseSignal_) != (spec.specEnum._finished)))) && (((spec.Tunnel_Traffictube2_Trafficlight3_Mode_) == (spec.specEnum._off)) || (((spec.Tunnel_Traffictube2_Trafficlight3_Mode_) == (spec.specEnum._yellow)) || ((spec.Tunnel_Traffictube2_Trafficlight3_Mode_) == (spec.specEnum._red))))));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(910, true);
        if (this.doInfoEvent) this.infoEvent(910, true);

        if ((spec.Tunnel_Traffictube2_Trafficlight3_Mode_) == (spec.specEnum._off)) {
            spec.Tunnel_Traffictube2_Trafficlight3_Mode_ = spec.specEnum._flash;
        } else if ((spec.Tunnel_Traffictube2_Trafficlight3_Mode_) == (spec.specEnum._yellow)) {
            spec.Tunnel_Traffictube2_Trafficlight3_Mode_ = spec.specEnum._flash;
        } else if ((spec.Tunnel_Traffictube2_Trafficlight3_Mode_) == (spec.specEnum._red)) {
            spec.Tunnel_Traffictube2_Trafficlight3_Mode_ = spec.specEnum._flash;
        }

        if (this.doInfoEvent) this.infoEvent(910, false);
        if (this.doInfoPrintOutput) this.printOutput(910, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 930 and event "Tunnel_Traffictube2_Trafficlight3_Mode.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge930() {
        var guard = ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube2_Trafficlight3_Mode_) == (spec.specEnum._flash));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(911, true);
        if (this.doInfoEvent) this.infoEvent(911, true);

        spec.Tunnel_Traffictube2_Trafficlight3_Mode_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(911, false);
        if (this.doInfoPrintOutput) this.printOutput(911, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 931 and event "Tunnel_Traffictube2_Trafficlight3_Mode.c_red".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge931() {
        var guard = (spec.Tunnel_Traffictube2_Trafficlight3_Mode_) == (spec.specEnum._yellow);

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(912, true);
        if (this.doInfoEvent) this.infoEvent(912, true);

        spec.Tunnel_Traffictube2_Trafficlight3_Mode_ = spec.specEnum._red;

        if (this.doInfoEvent) this.infoEvent(912, false);
        if (this.doInfoPrintOutput) this.printOutput(912, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 932 and event "Tunnel_Traffictube2_Trafficlight3_Mode.c_yellow".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge932() {
        var guard = ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._red)) && ((spec.Tunnel_Traffictube2_Trafficlight3_Mode_) == (spec.specEnum._flash));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(913, true);
        if (this.doInfoEvent) this.infoEvent(913, true);

        spec.Tunnel_Traffictube2_Trafficlight3_Mode_ = spec.specEnum._yellow;

        if (this.doInfoEvent) this.infoEvent(913, false);
        if (this.doInfoPrintOutput) this.printOutput(913, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 933 and event "Tunnel_Traffictube2_Trafficlight3_TimerReleaseSignal.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge933() {
        var guard = ((spec.Tunnel_Traffictube2_Trafficlight3_Mode_) == (spec.specEnum._red)) && ((spec.Tunnel_Traffictube2_Trafficlight3_TimerReleaseSignal_) == (spec.specEnum._off));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(916, true);
        if (this.doInfoEvent) this.infoEvent(916, true);

        spec.Tunnel_Traffictube2_Trafficlight3_TimerReleaseSignal_ = spec.specEnum._running;

        if (this.doInfoEvent) this.infoEvent(916, false);
        if (this.doInfoPrintOutput) this.printOutput(916, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 934 and event "Tunnel_Traffictube2_Trafficlight3_TimerReleaseSignal.c_reset".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge934() {
        var guard = ((spec.Tunnel_Traffictube2_Trafficlight3_Mode_) != (spec.specEnum._red)) && (((spec.Tunnel_Traffictube2_Trafficlight3_TimerReleaseSignal_) == (spec.specEnum._running)) || ((spec.Tunnel_Traffictube2_Trafficlight3_TimerReleaseSignal_) == (spec.specEnum._finished)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(917, true);
        if (this.doInfoEvent) this.infoEvent(917, true);

        if ((spec.Tunnel_Traffictube2_Trafficlight3_TimerReleaseSignal_) == (spec.specEnum._running)) {
            spec.Tunnel_Traffictube2_Trafficlight3_TimerReleaseSignal_ = spec.specEnum._off;
        } else if ((spec.Tunnel_Traffictube2_Trafficlight3_TimerReleaseSignal_) == (spec.specEnum._finished)) {
            spec.Tunnel_Traffictube2_Trafficlight3_TimerReleaseSignal_ = spec.specEnum._off;
        }

        if (this.doInfoEvent) this.infoEvent(917, false);
        if (this.doInfoPrintOutput) this.printOutput(917, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 935 and event "Tunnel_Traffictube2_Ventilation.c_0".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge935() {
        var guard = (((((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto)) && ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational))) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_Smokedetection_setting_, 0))) || (((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonVentilation0_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube2_Ventilation_setting_, 0));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(919, true);
        if (this.doInfoEvent) this.infoEvent(919, true);

        spec.Tunnel_Traffictube2_Ventilation_setting_ = 0;

        if (this.doInfoEvent) this.infoEvent(919, false);
        if (this.doInfoPrintOutput) this.printOutput(919, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 936 and event "Tunnel_Traffictube2_Ventilation.c_1".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge936() {
        var guard = (((((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto)) && ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational))) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_Smokedetection_setting_, 1))) || (((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonVentilation1_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube2_Ventilation_setting_, 1));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(920, true);
        if (this.doInfoEvent) this.infoEvent(920, true);

        spec.Tunnel_Traffictube2_Ventilation_setting_ = 1;

        if (this.doInfoEvent) this.infoEvent(920, false);
        if (this.doInfoPrintOutput) this.printOutput(920, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 937 and event "Tunnel_Traffictube2_Ventilation.c_2".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge937() {
        var guard = (((((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto)) && ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational))) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_Smokedetection_setting_, 2))) || (((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonVentilation2_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube2_Ventilation_setting_, 2));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(921, true);
        if (this.doInfoEvent) this.infoEvent(921, true);

        spec.Tunnel_Traffictube2_Ventilation_setting_ = 2;

        if (this.doInfoEvent) this.infoEvent(921, false);
        if (this.doInfoPrintOutput) this.printOutput(921, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 938 and event "Tunnel_Traffictube2_Ventilation.c_3".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge938() {
        var guard = (((((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto)) && ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational))) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_Smokedetection_setting_, 3))) || (((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonVentilation3_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube2_Ventilation_setting_, 3));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(922, true);
        if (this.doInfoEvent) this.infoEvent(922, true);

        spec.Tunnel_Traffictube2_Ventilation_setting_ = 3;

        if (this.doInfoEvent) this.infoEvent(922, false);
        if (this.doInfoPrintOutput) this.printOutput(922, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 939 and event "Tunnel_Traffictube2_Ventilation.c_4".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge939() {
        var guard = ((((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto)) && ((((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational)) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_Smokedetection_setting_, 4))) || ((((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._maintenance))) && ((spec.Tunnel_Traffictube2_Smokedetection_setting_) < (5))))) || (((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonVentilation4_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube2_Ventilation_setting_, 4));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(923, true);
        if (this.doInfoEvent) this.infoEvent(923, true);

        spec.Tunnel_Traffictube2_Ventilation_setting_ = 4;

        if (this.doInfoEvent) this.infoEvent(923, false);
        if (this.doInfoPrintOutput) this.printOutput(923, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 940 and event "Tunnel_Traffictube2_Ventilation.c_5".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge940() {
        var guard = (((((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto)) && (((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery)))) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_Smokedetection_setting_, 5))) || (((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonVentilation5_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube2_Ventilation_setting_, 5));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(924, true);
        if (this.doInfoEvent) this.infoEvent(924, true);

        spec.Tunnel_Traffictube2_Ventilation_setting_ = 5;

        if (this.doInfoEvent) this.infoEvent(924, false);
        if (this.doInfoPrintOutput) this.printOutput(924, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 941 and event "Tunnel_Traffictube2_Ventilation.c_6".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge941() {
        var guard = ((((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto)) && (((((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery))) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_Smokedetection_setting_, 6))) || ((((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._support)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._standby))) && ((spec.Tunnel_Traffictube2_Smokedetection_setting_) < (7))))) || (((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonVentilation6_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube2_Ventilation_setting_, 6));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(925, true);
        if (this.doInfoEvent) this.infoEvent(925, true);

        spec.Tunnel_Traffictube2_Ventilation_setting_ = 6;

        if (this.doInfoEvent) this.infoEvent(925, false);
        if (this.doInfoPrintOutput) this.printOutput(925, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 942 and event "Tunnel_Traffictube2_Ventilation.c_7".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge942() {
        var guard = (((((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto)) && ((((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery))) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._support)))) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_Smokedetection_setting_, 7))) || (((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonVentilation7_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube2_Ventilation_setting_, 7));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(926, true);
        if (this.doInfoEvent) this.infoEvent(926, true);

        spec.Tunnel_Traffictube2_Ventilation_setting_ = 7;

        if (this.doInfoEvent) this.infoEvent(926, false);
        if (this.doInfoPrintOutput) this.printOutput(926, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 943 and event "Tunnel_Traffictube2_Ventilation.c_8".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge943() {
        var guard = ((((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto)) && (((((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery))) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._support))) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_Smokedetection_setting_, 8)))) || (((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._emergency)) || (((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonVentilation8_Observer_) == (spec.specEnum._pressed))))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube2_Ventilation_setting_, 8));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(927, true);
        if (this.doInfoEvent) this.infoEvent(927, true);

        spec.Tunnel_Traffictube2_Ventilation_setting_ = 8;

        if (this.doInfoEvent) this.infoEvent(927, false);
        if (this.doInfoPrintOutput) this.printOutput(927, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 944 and event "Tunnel_Traffictube2_VentilationDirection.c_againstDrivingDirection".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge944() {
        var guard = ((((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto)) && ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._support))) || (((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_Observer_) == (spec.specEnum._pressed)))) && ((spec.Tunnel_Traffictube2_VentilationDirection_) == (spec.specEnum._drivingDirection));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(928, true);
        if (this.doInfoEvent) this.infoEvent(928, true);

        spec.Tunnel_Traffictube2_VentilationDirection_ = spec.specEnum._againstDrivingDirection;

        if (this.doInfoEvent) this.infoEvent(928, false);
        if (this.doInfoPrintOutput) this.printOutput(928, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 945 and event "Tunnel_Traffictube2_VentilationDirection.c_drivingDirection".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge945() {
        var guard = ((((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto)) && ((spec.Tunnel_Traffictube2_ModeTraffictube_) != (spec.specEnum._support))) || (((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonVentilationDrivingDirection_Observer_) == (spec.specEnum._pressed)))) && ((spec.Tunnel_Traffictube2_VentilationDirection_) == (spec.specEnum._againstDrivingDirection));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(929, true);
        if (this.doInfoEvent) this.infoEvent(929, true);

        spec.Tunnel_Traffictube2_VentilationDirection_ = spec.specEnum._drivingDirection;

        if (this.doInfoEvent) this.infoEvent(929, false);
        if (this.doInfoPrintOutput) this.printOutput(929, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 946 and event "Tunnel_Traffictube2_VentilationEntrance.c_0".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge946() {
        var guard = ((((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto)) && ((((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational)) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_Smokedetection_setting_, 0))) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._support)))) || (((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonVentilation0_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube2_VentilationEntrance_setting_, 0));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(930, true);
        if (this.doInfoEvent) this.infoEvent(930, true);

        spec.Tunnel_Traffictube2_VentilationEntrance_setting_ = 0;

        if (this.doInfoEvent) this.infoEvent(930, false);
        if (this.doInfoPrintOutput) this.printOutput(930, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 947 and event "Tunnel_Traffictube2_VentilationEntrance.c_1".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge947() {
        var guard = (((((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto)) && ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational))) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_Smokedetection_setting_, 1))) || (((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonVentilation1_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube2_VentilationEntrance_setting_, 1));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(931, true);
        if (this.doInfoEvent) this.infoEvent(931, true);

        spec.Tunnel_Traffictube2_VentilationEntrance_setting_ = 1;

        if (this.doInfoEvent) this.infoEvent(931, false);
        if (this.doInfoPrintOutput) this.printOutput(931, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 948 and event "Tunnel_Traffictube2_VentilationEntrance.c_2".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge948() {
        var guard = (((((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto)) && ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational))) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_Smokedetection_setting_, 2))) || (((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonVentilation2_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube2_VentilationEntrance_setting_, 2));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(932, true);
        if (this.doInfoEvent) this.infoEvent(932, true);

        spec.Tunnel_Traffictube2_VentilationEntrance_setting_ = 2;

        if (this.doInfoEvent) this.infoEvent(932, false);
        if (this.doInfoPrintOutput) this.printOutput(932, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 949 and event "Tunnel_Traffictube2_VentilationEntrance.c_3".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge949() {
        var guard = (((((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto)) && ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational))) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_Smokedetection_setting_, 3))) || (((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonVentilation3_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube2_VentilationEntrance_setting_, 3));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(933, true);
        if (this.doInfoEvent) this.infoEvent(933, true);

        spec.Tunnel_Traffictube2_VentilationEntrance_setting_ = 3;

        if (this.doInfoEvent) this.infoEvent(933, false);
        if (this.doInfoPrintOutput) this.printOutput(933, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 950 and event "Tunnel_Traffictube2_VentilationEntrance.c_4".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge950() {
        var guard = ((((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto)) && ((((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational)) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_Smokedetection_setting_, 4))) || ((((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._maintenance))) && ((spec.Tunnel_Traffictube2_Smokedetection_setting_) < (5))))) || (((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonVentilation4_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube2_VentilationEntrance_setting_, 4));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(934, true);
        if (this.doInfoEvent) this.infoEvent(934, true);

        spec.Tunnel_Traffictube2_VentilationEntrance_setting_ = 4;

        if (this.doInfoEvent) this.infoEvent(934, false);
        if (this.doInfoPrintOutput) this.printOutput(934, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 951 and event "Tunnel_Traffictube2_VentilationEntrance.c_5".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge951() {
        var guard = (((((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto)) && (((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery)))) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_Smokedetection_setting_, 5))) || (((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonVentilation5_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube2_VentilationEntrance_setting_, 5));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(935, true);
        if (this.doInfoEvent) this.infoEvent(935, true);

        spec.Tunnel_Traffictube2_VentilationEntrance_setting_ = 5;

        if (this.doInfoEvent) this.infoEvent(935, false);
        if (this.doInfoPrintOutput) this.printOutput(935, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 952 and event "Tunnel_Traffictube2_VentilationEntrance.c_6".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge952() {
        var guard = ((((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto)) && ((((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery))) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_Smokedetection_setting_, 6)))) || ((((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._standby)) && ((spec.Tunnel_Traffictube2_Smokedetection_setting_) < (7))) || (((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonVentilation6_Observer_) == (spec.specEnum._pressed))))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube2_VentilationEntrance_setting_, 6));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(936, true);
        if (this.doInfoEvent) this.infoEvent(936, true);

        spec.Tunnel_Traffictube2_VentilationEntrance_setting_ = 6;

        if (this.doInfoEvent) this.infoEvent(936, false);
        if (this.doInfoPrintOutput) this.printOutput(936, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 953 and event "Tunnel_Traffictube2_VentilationEntrance.c_7".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge953() {
        var guard = (((((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto)) && (((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery)))) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_Smokedetection_setting_, 7))) || (((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonVentilation7_Observer_) == (spec.specEnum._pressed)))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube2_VentilationEntrance_setting_, 7));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(937, true);
        if (this.doInfoEvent) this.infoEvent(937, true);

        spec.Tunnel_Traffictube2_VentilationEntrance_setting_ = 7;

        if (this.doInfoEvent) this.infoEvent(937, false);
        if (this.doInfoPrintOutput) this.printOutput(937, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 954 and event "Tunnel_Traffictube2_VentilationEntrance.c_8".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge954() {
        var guard = ((((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto)) && ((((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery))) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_Smokedetection_setting_, 8)))) || (((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._emergency)) || (((spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_Traffictube2_ButtonVentilation8_Observer_) == (spec.specEnum._pressed))))) && (!specUtils.equalObjs(spec.Tunnel_Traffictube2_VentilationEntrance_setting_, 8));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(938, true);
        if (this.doInfoEvent) this.infoEvent(938, true);

        spec.Tunnel_Traffictube2_VentilationEntrance_setting_ = 8;

        if (this.doInfoEvent) this.infoEvent(938, false);
        if (this.doInfoPrintOutput) this.printOutput(938, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 955 and event "Tunnel_WatercellarFirehoses_ButtonExtinguish_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge955() {
        var guard = ((spec.Tunnel_WatercellarFirehoses_ButtonExtinguish_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_WatercellarFirehoses_ButtonExtinguish_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(948, true);
        if (this.doInfoEvent) this.infoEvent(948, true);

        spec.Tunnel_WatercellarFirehoses_ButtonExtinguish_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(948, false);
        if (this.doInfoPrintOutput) this.printOutput(948, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 956 and event "Tunnel_WatercellarFirehoses_ButtonExtinguish_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge956() {
        var guard = ((spec.Tunnel_WatercellarFirehoses_ButtonExtinguish_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_WatercellarFirehoses_ButtonExtinguish_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(949, true);
        if (this.doInfoEvent) this.infoEvent(949, true);

        spec.Tunnel_WatercellarFirehoses_ButtonExtinguish_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(949, false);
        if (this.doInfoPrintOutput) this.printOutput(949, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 957 and event "Tunnel_WatercellarFirehoses_ButtonGuard_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge957() {
        var guard = ((spec.Tunnel_WatercellarFirehoses_ButtonGuard_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_WatercellarFirehoses_ButtonGuard_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(951, true);
        if (this.doInfoEvent) this.infoEvent(951, true);

        spec.Tunnel_WatercellarFirehoses_ButtonGuard_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(951, false);
        if (this.doInfoPrintOutput) this.printOutput(951, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 958 and event "Tunnel_WatercellarFirehoses_ButtonGuard_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge958() {
        var guard = ((spec.Tunnel_WatercellarFirehoses_ButtonGuard_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_WatercellarFirehoses_ButtonGuard_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(952, true);
        if (this.doInfoEvent) this.infoEvent(952, true);

        spec.Tunnel_WatercellarFirehoses_ButtonGuard_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(952, false);
        if (this.doInfoPrintOutput) this.printOutput(952, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 959 and event "Tunnel_WatercellarFirehoses_Control_ButtonAuto_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge959() {
        var guard = ((spec.Tunnel_WatercellarFirehoses_Control_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_WatercellarFirehoses_Control_ButtonAuto_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(954, true);
        if (this.doInfoEvent) this.infoEvent(954, true);

        spec.Tunnel_WatercellarFirehoses_Control_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(954, false);
        if (this.doInfoPrintOutput) this.printOutput(954, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 960 and event "Tunnel_WatercellarFirehoses_Control_ButtonAuto_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge960() {
        var guard = ((spec.Tunnel_WatercellarFirehoses_Control_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_WatercellarFirehoses_Control_ButtonAuto_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(955, true);
        if (this.doInfoEvent) this.infoEvent(955, true);

        spec.Tunnel_WatercellarFirehoses_Control_ButtonAuto_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(955, false);
        if (this.doInfoPrintOutput) this.printOutput(955, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 961 and event "Tunnel_WatercellarFirehoses_Control_ButtonManual_Observer.c_cancel".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge961() {
        var guard = ((spec.Tunnel_WatercellarFirehoses_Control_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_WatercellarFirehoses_Control_ButtonManual_conditionCancel_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(957, true);
        if (this.doInfoEvent) this.infoEvent(957, true);

        spec.Tunnel_WatercellarFirehoses_Control_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(957, false);
        if (this.doInfoPrintOutput) this.printOutput(957, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 962 and event "Tunnel_WatercellarFirehoses_Control_ButtonManual_Observer.c_done".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge962() {
        var guard = ((spec.Tunnel_WatercellarFirehoses_Control_ButtonManual_Observer_) == (spec.specEnum._pressed)) && (spec.Tunnel_WatercellarFirehoses_Control_ButtonManual_conditionDone_());

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(958, true);
        if (this.doInfoEvent) this.infoEvent(958, true);

        spec.Tunnel_WatercellarFirehoses_Control_ButtonManual_Observer_ = spec.specEnum._unpressed;

        if (this.doInfoEvent) this.infoEvent(958, false);
        if (this.doInfoPrintOutput) this.printOutput(958, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 963 and event "Tunnel_WatercellarFirehoses_Control_Mode.c_auto".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge963() {
        var guard = ((spec.Tunnel_WatercellarFirehoses_Control_ButtonAuto_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_WatercellarFirehoses_Control_Mode_) == (spec.specEnum._manual));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(959, true);
        if (this.doInfoEvent) this.infoEvent(959, true);

        spec.Tunnel_WatercellarFirehoses_Control_Mode_ = spec.specEnum._auto;

        if (this.doInfoEvent) this.infoEvent(959, false);
        if (this.doInfoPrintOutput) this.printOutput(959, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 964 and event "Tunnel_WatercellarFirehoses_Control_Mode.c_manual".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge964() {
        var guard = ((spec.Tunnel_WatercellarFirehoses_Control_ButtonManual_Observer_) == (spec.specEnum._pressed)) && ((spec.Tunnel_WatercellarFirehoses_Control_Mode_) == (spec.specEnum._auto));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(960, true);
        if (this.doInfoEvent) this.infoEvent(960, true);

        spec.Tunnel_WatercellarFirehoses_Control_Mode_ = spec.specEnum._manual;

        if (this.doInfoEvent) this.infoEvent(960, false);
        if (this.doInfoPrintOutput) this.printOutput(960, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 965 and event "Tunnel_WatercellarFirehoses_Pump.c_off".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge965() {
        var guard = ((spec.Tunnel_WatercellarFirehoses_SensorHigh_) == (spec.specEnum._on)) && ((spec.Tunnel_WatercellarFirehoses_Pump_) == (spec.specEnum._on));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(961, true);
        if (this.doInfoEvent) this.infoEvent(961, true);

        spec.Tunnel_WatercellarFirehoses_Pump_ = spec.specEnum._off;

        if (this.doInfoEvent) this.infoEvent(961, false);
        if (this.doInfoPrintOutput) this.printOutput(961, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 966 and event "Tunnel_WatercellarFirehoses_Pump.c_on".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge966() {
        var guard = ((spec.Tunnel_WatercellarFirehoses_SensorHigh_) == (spec.specEnum._off)) && ((((spec.Tunnel_WatercellarFirehoses_Regime_) == (spec.specEnum._extinguish)) || (((spec.Tunnel_WatercellarFirehoses_Regime_) == (spec.specEnum._guard)) && ((spec.Tunnel_WatercellarFirehoses_SensorLow_) == (spec.specEnum._off)))) && ((spec.Tunnel_WatercellarFirehoses_Pump_) == (spec.specEnum._off)));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(962, true);
        if (this.doInfoEvent) this.infoEvent(962, true);

        spec.Tunnel_WatercellarFirehoses_Pump_ = spec.specEnum._on;

        if (this.doInfoEvent) this.infoEvent(962, false);
        if (this.doInfoPrintOutput) this.printOutput(962, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 967 and event "Tunnel_WatercellarFirehoses_Regime.c_extinguish".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge967() {
        var guard = ((((spec.Tunnel_WatercellarFirehoses_Control_Mode_) == (spec.specEnum._auto)) && (((((((spec.Tunnel_Traffictube1_EmergencyCabinetA_Firehose_) == (spec.specEnum._on)) || ((spec.Tunnel_Traffictube2_EmergencyCabinetA_Firehose_) == (spec.specEnum._on))) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._emergency))) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._evacuation))) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._emergency))) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._evacuation)))) || (((spec.Tunnel_WatercellarFirehoses_Control_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_WatercellarFirehoses_ButtonExtinguish_Observer_) == (spec.specEnum._pressed)))) && ((spec.Tunnel_WatercellarFirehoses_Regime_) == (spec.specEnum._guard));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(963, true);
        if (this.doInfoEvent) this.infoEvent(963, true);

        spec.Tunnel_WatercellarFirehoses_Regime_ = spec.specEnum._extinguish;

        if (this.doInfoEvent) this.infoEvent(963, false);
        if (this.doInfoPrintOutput) this.printOutput(963, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /**
     * Execute code for edge with index 968 and event "Tunnel_WatercellarFirehoses_Regime.c_guard".
     *
     * @return 'true' if the edge was executed, 'false' otherwise.
     */
    execEdge968() {
        var guard = (((((((((spec.Tunnel_WatercellarFirehoses_Control_Mode_) == (spec.specEnum._auto)) && ((spec.Tunnel_Traffictube1_EmergencyCabinetA_Firehose_) == (spec.specEnum._off))) && ((spec.Tunnel_Traffictube2_EmergencyCabinetA_Firehose_) == (spec.specEnum._off))) && ((spec.Tunnel_Traffictube1_ModeTraffictube_) != (spec.specEnum._emergency))) && ((spec.Tunnel_Traffictube1_ModeTraffictube_) != (spec.specEnum._evacuation))) && ((spec.Tunnel_Traffictube2_ModeTraffictube_) != (spec.specEnum._emergency))) && ((spec.Tunnel_Traffictube2_ModeTraffictube_) != (spec.specEnum._evacuation))) || (((spec.Tunnel_WatercellarFirehoses_Control_Mode_) == (spec.specEnum._manual)) && ((spec.Tunnel_WatercellarFirehoses_ButtonGuard_Observer_) == (spec.specEnum._pressed)))) && ((spec.Tunnel_WatercellarFirehoses_Regime_) == (spec.specEnum._extinguish));

        if (!guard) {
            return false;
        }

        if (this.doInfoPrintOutput) this.printOutput(964, true);
        if (this.doInfoEvent) this.infoEvent(964, true);

        spec.Tunnel_WatercellarFirehoses_Regime_ = spec.specEnum._guard;

        if (this.doInfoEvent) this.infoEvent(964, false);
        if (this.doInfoPrintOutput) this.printOutput(964, false);
        if (this.doStateOutput || this.doTransitionOutput) this.log('');
        return true;
    }

    /** Initializes the state. */
    initState() {
        // Initialize constants, if not yet done so.
        if (!this.constantsInitialized) {
            this.constantsInitialized = true;

        }

        // Initialize SVG input.
        this.svgInQueue = [];
        this.svgInId = null;
        this.svgInEvent = -1;

        // CIF model state variables.
        spec.Tunnel_BroadcastButtons1_ = spec.specEnum._off;
        spec.Tunnel_BroadcastButtons2_ = spec.specEnum._off;
        spec.Tunnel_HeadDrainCellar1_ButtonEmptying_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_HeadDrainCellar1_ButtonOff_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_HeadDrainCellar1_ButtonStoring_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_HeadDrainCellar1_Control_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_HeadDrainCellar1_Control_ButtonManual_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_HeadDrainCellar1_Control_Mode_ = spec.specEnum._auto;
        spec.Tunnel_HeadDrainCellar1_Pump1_ = spec.specEnum._off;
        spec.Tunnel_HeadDrainCellar1_Pump2_ = spec.specEnum._off;
        spec.Tunnel_HeadDrainCellar1_Regime_ = spec.specEnum._emptying;
        spec.Tunnel_HeadDrainCellar1_Sensor1_ = spec.specEnum._off;
        spec.Tunnel_HeadDrainCellar1_Sensor2_ = spec.specEnum._off;
        spec.Tunnel_HeadDrainCellar1_Sensor3_ = spec.specEnum._off;
        spec.Tunnel_HeadDrainCellar1_Sensor4_ = spec.specEnum._off;
        spec.Tunnel_HeadDrainCellar1_Sensor5_ = spec.specEnum._off;
        spec.Tunnel_HeadDrainCellar2_ButtonEmptying_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_HeadDrainCellar2_ButtonOff_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_HeadDrainCellar2_ButtonStoring_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_HeadDrainCellar2_Control_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_HeadDrainCellar2_Control_ButtonManual_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_HeadDrainCellar2_Control_Mode_ = spec.specEnum._auto;
        spec.Tunnel_HeadDrainCellar2_Pump1_ = spec.specEnum._off;
        spec.Tunnel_HeadDrainCellar2_Pump2_ = spec.specEnum._off;
        spec.Tunnel_HeadDrainCellar2_Regime_ = spec.specEnum._emptying;
        spec.Tunnel_HeadDrainCellar2_Sensor1_ = spec.specEnum._off;
        spec.Tunnel_HeadDrainCellar2_Sensor2_ = spec.specEnum._off;
        spec.Tunnel_HeadDrainCellar2_Sensor3_ = spec.specEnum._off;
        spec.Tunnel_HeadDrainCellar2_Sensor4_ = spec.specEnum._off;
        spec.Tunnel_HeadDrainCellar2_Sensor5_ = spec.specEnum._off;
        spec.Tunnel_MiddleDrainCellar_ButtonEmptying_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_MiddleDrainCellar_ButtonOff_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_MiddleDrainCellar_ButtonStoring_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_MiddleDrainCellar_Control_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_MiddleDrainCellar_Control_ButtonManual_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_MiddleDrainCellar_Control_Mode_ = spec.specEnum._auto;
        spec.Tunnel_MiddleDrainCellar_Pump1_ = spec.specEnum._off;
        spec.Tunnel_MiddleDrainCellar_Pump2_ = spec.specEnum._off;
        spec.Tunnel_MiddleDrainCellar_PumpDirection_ = spec.specEnum._headDrainCellar1;
        spec.Tunnel_MiddleDrainCellar_Regime_ = spec.specEnum._emptying;
        spec.Tunnel_MiddleDrainCellar_Sensor1_ = spec.specEnum._off;
        spec.Tunnel_MiddleDrainCellar_Sensor2_ = spec.specEnum._off;
        spec.Tunnel_MiddleDrainCellar_Sensor3_ = spec.specEnum._off;
        spec.Tunnel_MiddleDrainCellar_Sensor4_ = spec.specEnum._off;
        spec.Tunnel_MiddleDrainCellar_Sensor5_ = spec.specEnum._off;
        spec.Tunnel_MiddleTunnelChannel_Broadcast_ = spec.specEnum._off;
        spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_MiddleTunnelChannel_ButtonLightingOff_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_MiddleTunnelChannel_ButtonLightingOn_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_MiddleTunnelChannel_ButtonPressureLeft_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_MiddleTunnelChannel_ButtonPressureOff_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_MiddleTunnelChannel_ButtonPressureRight_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_MiddleTunnelChannel_ButtonStartMessage_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_MiddleTunnelChannel_ButtonStopMessage_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_Mode_ = spec.specEnum._auto;
        spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_MiddleTunnelChannel_ControlLighting_Mode_ = spec.specEnum._auto;
        spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_MiddleTunnelChannel_ControlPressure_Mode_ = spec.specEnum._auto;
        spec.Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication_ = spec.specEnum._off;
        spec.Tunnel_MiddleTunnelChannel_Lighting_ = spec.specEnum._off;
        spec.Tunnel_MiddleTunnelChannel_Pressure_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_AccessBoombarriers_ = spec.specEnum._stopped;
        spec.Tunnel_Traffictube1_AccessTrafficlights_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_Boombarrier1_ActuatorDown_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_Boombarrier1_ActuatorUp_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_Boombarrier1_ObstacleDetection_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_Boombarrier1_SensorClosed_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_Boombarrier1_SensorOpen_ = spec.specEnum._on;
        spec.Tunnel_Traffictube1_Boombarrier2_ActuatorDown_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_Boombarrier2_ActuatorUp_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_Boombarrier2_ObstacleDetection_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_Boombarrier2_SensorClosed_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_Boombarrier2_SensorOpen_ = spec.specEnum._on;
        spec.Tunnel_Traffictube1_Broadcast_ = spec.specEnum._message;
        spec.Tunnel_Traffictube1_ButtonCamera1_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonCamera2_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonCamera3_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonCamera4_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonCamera5_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonCamera6_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonCameraStopView_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonCameraView_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonCloseBoombarriers_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonEmergency_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonEvacuation_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonFlashTrafficlights_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonLighting0_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonLighting1_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonLighting2_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonLighting3_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonLighting4_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonLighting5_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonLighting6_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonLighting7_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonLighting8_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonLive_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonMaintenance_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonMessage_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonOffTrafficlights_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonOpenBoombarriers_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonOperational_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonRecovery_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonRedTrafficlights_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonStopBoombarriers_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonVentilation0_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonVentilation1_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonVentilation2_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonVentilation3_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonVentilation4_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonVentilation5_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonVentilation6_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonVentilation7_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonVentilation8_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ButtonVentilationDrivingDirection_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_CCTV_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ControlBoombarriers_Mode_ = spec.specEnum._auto;
        spec.Tunnel_Traffictube1_ControlLighting_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ControlLighting_ButtonManual_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ControlLighting_Mode_ = spec.specEnum._auto;
        spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ControlTrafficlights_Mode_ = spec.specEnum._auto;
        spec.Tunnel_Traffictube1_ControlVentilation_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ControlVentilation_ButtonManual_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_ControlVentilation_Mode_ = spec.specEnum._auto;
        spec.Tunnel_Traffictube1_EmergencyCabinetA_Firehose_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_EmergencyCabinetA_HandheldExtinguisher_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_EmergencyCabinetA_Phone_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_EmergencyCabinetA_SensorOpen_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_EmergencyCabinetC_HandheldExtinguisher_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_EmergencyCabinetC_Phone_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_EmergencyCabinetC_SensorOpen_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_EscapeDoor_Broadcast_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_Mode_ = spec.specEnum._auto;
        spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_Mode_ = spec.specEnum._auto;
        spec.Tunnel_Traffictube1_EscapeDoor_RouteIndication_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_J32_Mode_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_J32_TimerReleaseSignal_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_Lighting_setting_ = 0;
        spec.Tunnel_Traffictube1_Lightsensor_setting_ = 0;
        spec.Tunnel_Traffictube1_MatrixsignTrafficlight_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_MatrixsignUnpressed_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_ModeTraffictube_ = spec.specEnum._operational;
        spec.Tunnel_Traffictube1_PopUp_ButtonAccept_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_PopUp_ButtonReject_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube1_PopUp_Timer_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_PopUp_Window_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_Recorder_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_Smokedetection_setting_ = 0;
        spec.Tunnel_Traffictube1_Standstilldetection_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_SwitchTimerAudio_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_TimerCameraViewEven_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_TimerCameraViewUneven_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_Trafficlight1_Mode_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_Trafficlight1_ReleaseSignal_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_Trafficlight1_TimerReleaseSignal_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_Trafficlight2_Mode_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_Trafficlight2_ReleaseSignal_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_Trafficlight2_TimerReleaseSignal_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_Trafficlight3_Mode_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_Trafficlight3_ReleaseSignal_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_Trafficlight3_TimerReleaseSignal_ = spec.specEnum._off;
        spec.Tunnel_Traffictube1_Ventilation_setting_ = 0;
        spec.Tunnel_Traffictube1_VentilationDirection_ = spec.specEnum._drivingDirection;
        spec.Tunnel_Traffictube1_VentilationEntrance_setting_ = 0;
        spec.Tunnel_Traffictube2_AccessBoombarriers_ = spec.specEnum._stopped;
        spec.Tunnel_Traffictube2_AccessTrafficlights_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_Boombarrier1_ActuatorDown_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_Boombarrier1_ActuatorUp_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_Boombarrier1_ObstacleDetection_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_Boombarrier1_SensorClosed_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_Boombarrier1_SensorOpen_ = spec.specEnum._on;
        spec.Tunnel_Traffictube2_Boombarrier2_ActuatorDown_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_Boombarrier2_ActuatorUp_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_Boombarrier2_ObstacleDetection_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_Boombarrier2_SensorClosed_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_Boombarrier2_SensorOpen_ = spec.specEnum._on;
        spec.Tunnel_Traffictube2_Broadcast_ = spec.specEnum._message;
        spec.Tunnel_Traffictube2_ButtonCamera1_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonCamera2_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonCamera3_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonCamera4_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonCamera5_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonCamera6_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonCameraStopView_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonCameraView_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonCloseBoombarriers_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonEmergency_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonEvacuation_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonFlashTrafficlights_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonLighting0_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonLighting1_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonLighting2_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonLighting3_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonLighting4_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonLighting5_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonLighting6_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonLighting7_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonLighting8_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonLive_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonMaintenance_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonMessage_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonOffTrafficlights_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonOpenBoombarriers_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonOperational_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonRecovery_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonRedTrafficlights_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonStopBoombarriers_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonVentilation0_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonVentilation1_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonVentilation2_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonVentilation3_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonVentilation4_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonVentilation5_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonVentilation6_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonVentilation7_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonVentilation8_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ButtonVentilationDrivingDirection_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_CCTV_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ControlBoombarriers_Mode_ = spec.specEnum._auto;
        spec.Tunnel_Traffictube2_ControlLighting_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ControlLighting_ButtonManual_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ControlLighting_Mode_ = spec.specEnum._auto;
        spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ControlTrafficlights_Mode_ = spec.specEnum._auto;
        spec.Tunnel_Traffictube2_ControlVentilation_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ControlVentilation_ButtonManual_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_ControlVentilation_Mode_ = spec.specEnum._auto;
        spec.Tunnel_Traffictube2_EmergencyCabinetA_Firehose_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_EmergencyCabinetA_HandheldExtinguisher_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_EmergencyCabinetA_Phone_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_EmergencyCabinetA_SensorOpen_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_EmergencyCabinetC_HandheldExtinguisher_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_EmergencyCabinetC_Phone_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_EmergencyCabinetC_SensorOpen_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_EscapeDoor_Broadcast_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_Mode_ = spec.specEnum._auto;
        spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_Mode_ = spec.specEnum._auto;
        spec.Tunnel_Traffictube2_EscapeDoor_RouteIndication_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_J32_Mode_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_J32_TimerReleaseSignal_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_Lighting_setting_ = 0;
        spec.Tunnel_Traffictube2_Lightsensor_setting_ = 0;
        spec.Tunnel_Traffictube2_MatrixsignTrafficlight_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_MatrixsignUnpressed_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_ModeTraffictube_ = spec.specEnum._operational;
        spec.Tunnel_Traffictube2_PopUp_ButtonAccept_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_PopUp_ButtonReject_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_Traffictube2_PopUp_Timer_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_PopUp_Window_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_Recorder_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_Smokedetection_setting_ = 0;
        spec.Tunnel_Traffictube2_Standstilldetection_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_SwitchTimerAudio_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_TimerCameraViewEven_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_TimerCameraViewUneven_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_Trafficlight1_Mode_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_Trafficlight1_ReleaseSignal_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_Trafficlight1_TimerReleaseSignal_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_Trafficlight2_Mode_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_Trafficlight2_ReleaseSignal_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_Trafficlight2_TimerReleaseSignal_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_Trafficlight3_Mode_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_Trafficlight3_ReleaseSignal_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_Trafficlight3_TimerReleaseSignal_ = spec.specEnum._off;
        spec.Tunnel_Traffictube2_Ventilation_setting_ = 0;
        spec.Tunnel_Traffictube2_VentilationDirection_ = spec.specEnum._drivingDirection;
        spec.Tunnel_Traffictube2_VentilationEntrance_setting_ = 0;
        spec.Tunnel_WatercellarFirehoses_ButtonExtinguish_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_WatercellarFirehoses_ButtonGuard_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_WatercellarFirehoses_Control_ButtonAuto_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_WatercellarFirehoses_Control_ButtonManual_Observer_ = spec.specEnum._unpressed;
        spec.Tunnel_WatercellarFirehoses_Control_Mode_ = spec.specEnum._auto;
        spec.Tunnel_WatercellarFirehoses_Pump_ = spec.specEnum._off;
        spec.Tunnel_WatercellarFirehoses_Regime_ = spec.specEnum._guard;
        spec.Tunnel_WatercellarFirehoses_SensorHigh_ = spec.specEnum._on;
        spec.Tunnel_WatercellarFirehoses_SensorLow_ = spec.specEnum._on;
    }

    /**
     * Initializes the user interface, either when loading the page
     * or when resetting the simulation.
     */
    initUI() {


        // Apply SVG copies and moves, if not done so before.
        if (!this.svgCopiesAndMovesApplied) {
            this.svgCopiesAndMovesApplied = true;

            // Apply SVG copy declarations.


            // Apply SVG move declarations.

        }

        // Prepare SVG output.


        // Prepare SVG input.

    }

    /**
     * Updates the user interface based on the latest state of
     * the model. Is called at the end of each cycle.
     */
    updateUI() {
        // Apply CIF/SVG output mappings.

    }

    /**
     * Updates the values of the input variables. Other variables from the
     * state may not be accessed or modified.
     */
    updateInputs() {
        // Nothing is done here by default.
    }

    /** Logs a normal message. */
    log(message) {
        console.log(message);

    }

    /** Logs an warning message. */
    warning(message) {
        console.log(message);

    }

    /** Logs an error message. */
    error(message) {
        console.log(message);

    }

    /**
     * Informs about the duration of a single execution.
     *
     * @param duration The duration of the execution, in milliseconds.
     * @param cycleTime The desired maximum duration of the execution, in
     *      milliseconds, or '-1' if not available.
     */
    infoExec(duration, cycleTime) {
        // Nothing is done here by default.
    }

    /**
     * Informs that an event will be or has been executed.
     *
     * @param idx The 0-based index of the event.
     * @param pre Whether the event will be executed ('true') or has
     *      been executed ('false').
     */
    infoEvent(idx, pre) {
        if (pre) {
            if (this.doTransitionOutput) spec.log(specUtils.fmt('Transition: event %s', spec.getEventName(idx)));
        } else {
            if (this.doStateOutput) spec.log('State: ' + spec.getStateText());
        }
    }

    /**
     * Informs that the code is about to be executed. For the
     * {@link #firstExec} the state has not yet been initialized, except for
     * {@link #time}.
     */
    preExec() {
        // Nothing is done here by default.
    }

    /** Informs that the code was just executed. */
    postExec() {
        this.updateUI();
    }

    /**
     * Returns the name of an event.
     *
     * @param idx The 0-based index of the event.
     * @return The name of the event.
     */
    getEventName(idx) {
        return this.EVENT_NAMES[idx];
    }

    /**
     * Returns a single-line textual representation of the model state.
     *
     * @return The single-line textual representation of the model state.
     */
    getStateText() {
        var state = specUtils.fmt('time=%s', spec.time);
        state += specUtils.fmt(', Tunnel_BroadcastButtons1=%s', specUtils.valueToStr(spec.Tunnel_BroadcastButtons1_));
        state += specUtils.fmt(', Tunnel_BroadcastButtons2=%s', specUtils.valueToStr(spec.Tunnel_BroadcastButtons2_));
        state += specUtils.fmt(', Tunnel_HeadDrainCellar1_ButtonEmptying_Observer=%s', specUtils.valueToStr(spec.Tunnel_HeadDrainCellar1_ButtonEmptying_Observer_));
        state += specUtils.fmt(', Tunnel_HeadDrainCellar1_ButtonOff_Observer=%s', specUtils.valueToStr(spec.Tunnel_HeadDrainCellar1_ButtonOff_Observer_));
        state += specUtils.fmt(', Tunnel_HeadDrainCellar1_ButtonStoring_Observer=%s', specUtils.valueToStr(spec.Tunnel_HeadDrainCellar1_ButtonStoring_Observer_));
        state += specUtils.fmt(', Tunnel_HeadDrainCellar1_Control_ButtonAuto_Observer=%s', specUtils.valueToStr(spec.Tunnel_HeadDrainCellar1_Control_ButtonAuto_Observer_));
        state += specUtils.fmt(', Tunnel_HeadDrainCellar1_Control_ButtonManual_Observer=%s', specUtils.valueToStr(spec.Tunnel_HeadDrainCellar1_Control_ButtonManual_Observer_));
        state += specUtils.fmt(', Tunnel_HeadDrainCellar1_Control_Mode=%s', specUtils.valueToStr(spec.Tunnel_HeadDrainCellar1_Control_Mode_));
        state += specUtils.fmt(', Tunnel_HeadDrainCellar1_Pump1=%s', specUtils.valueToStr(spec.Tunnel_HeadDrainCellar1_Pump1_));
        state += specUtils.fmt(', Tunnel_HeadDrainCellar1_Pump2=%s', specUtils.valueToStr(spec.Tunnel_HeadDrainCellar1_Pump2_));
        state += specUtils.fmt(', Tunnel_HeadDrainCellar1_Regime=%s', specUtils.valueToStr(spec.Tunnel_HeadDrainCellar1_Regime_));
        state += specUtils.fmt(', Tunnel_HeadDrainCellar1_Sensor1=%s', specUtils.valueToStr(spec.Tunnel_HeadDrainCellar1_Sensor1_));
        state += specUtils.fmt(', Tunnel_HeadDrainCellar1_Sensor2=%s', specUtils.valueToStr(spec.Tunnel_HeadDrainCellar1_Sensor2_));
        state += specUtils.fmt(', Tunnel_HeadDrainCellar1_Sensor3=%s', specUtils.valueToStr(spec.Tunnel_HeadDrainCellar1_Sensor3_));
        state += specUtils.fmt(', Tunnel_HeadDrainCellar1_Sensor4=%s', specUtils.valueToStr(spec.Tunnel_HeadDrainCellar1_Sensor4_));
        state += specUtils.fmt(', Tunnel_HeadDrainCellar1_Sensor5=%s', specUtils.valueToStr(spec.Tunnel_HeadDrainCellar1_Sensor5_));
        state += specUtils.fmt(', Tunnel_HeadDrainCellar2_ButtonEmptying_Observer=%s', specUtils.valueToStr(spec.Tunnel_HeadDrainCellar2_ButtonEmptying_Observer_));
        state += specUtils.fmt(', Tunnel_HeadDrainCellar2_ButtonOff_Observer=%s', specUtils.valueToStr(spec.Tunnel_HeadDrainCellar2_ButtonOff_Observer_));
        state += specUtils.fmt(', Tunnel_HeadDrainCellar2_ButtonStoring_Observer=%s', specUtils.valueToStr(spec.Tunnel_HeadDrainCellar2_ButtonStoring_Observer_));
        state += specUtils.fmt(', Tunnel_HeadDrainCellar2_Control_ButtonAuto_Observer=%s', specUtils.valueToStr(spec.Tunnel_HeadDrainCellar2_Control_ButtonAuto_Observer_));
        state += specUtils.fmt(', Tunnel_HeadDrainCellar2_Control_ButtonManual_Observer=%s', specUtils.valueToStr(spec.Tunnel_HeadDrainCellar2_Control_ButtonManual_Observer_));
        state += specUtils.fmt(', Tunnel_HeadDrainCellar2_Control_Mode=%s', specUtils.valueToStr(spec.Tunnel_HeadDrainCellar2_Control_Mode_));
        state += specUtils.fmt(', Tunnel_HeadDrainCellar2_Pump1=%s', specUtils.valueToStr(spec.Tunnel_HeadDrainCellar2_Pump1_));
        state += specUtils.fmt(', Tunnel_HeadDrainCellar2_Pump2=%s', specUtils.valueToStr(spec.Tunnel_HeadDrainCellar2_Pump2_));
        state += specUtils.fmt(', Tunnel_HeadDrainCellar2_Regime=%s', specUtils.valueToStr(spec.Tunnel_HeadDrainCellar2_Regime_));
        state += specUtils.fmt(', Tunnel_HeadDrainCellar2_Sensor1=%s', specUtils.valueToStr(spec.Tunnel_HeadDrainCellar2_Sensor1_));
        state += specUtils.fmt(', Tunnel_HeadDrainCellar2_Sensor2=%s', specUtils.valueToStr(spec.Tunnel_HeadDrainCellar2_Sensor2_));
        state += specUtils.fmt(', Tunnel_HeadDrainCellar2_Sensor3=%s', specUtils.valueToStr(spec.Tunnel_HeadDrainCellar2_Sensor3_));
        state += specUtils.fmt(', Tunnel_HeadDrainCellar2_Sensor4=%s', specUtils.valueToStr(spec.Tunnel_HeadDrainCellar2_Sensor4_));
        state += specUtils.fmt(', Tunnel_HeadDrainCellar2_Sensor5=%s', specUtils.valueToStr(spec.Tunnel_HeadDrainCellar2_Sensor5_));
        state += specUtils.fmt(', Tunnel_MiddleDrainCellar_ButtonEmptying_Observer=%s', specUtils.valueToStr(spec.Tunnel_MiddleDrainCellar_ButtonEmptying_Observer_));
        state += specUtils.fmt(', Tunnel_MiddleDrainCellar_ButtonOff_Observer=%s', specUtils.valueToStr(spec.Tunnel_MiddleDrainCellar_ButtonOff_Observer_));
        state += specUtils.fmt(', Tunnel_MiddleDrainCellar_ButtonStoring_Observer=%s', specUtils.valueToStr(spec.Tunnel_MiddleDrainCellar_ButtonStoring_Observer_));
        state += specUtils.fmt(', Tunnel_MiddleDrainCellar_Control_ButtonAuto_Observer=%s', specUtils.valueToStr(spec.Tunnel_MiddleDrainCellar_Control_ButtonAuto_Observer_));
        state += specUtils.fmt(', Tunnel_MiddleDrainCellar_Control_ButtonManual_Observer=%s', specUtils.valueToStr(spec.Tunnel_MiddleDrainCellar_Control_ButtonManual_Observer_));
        state += specUtils.fmt(', Tunnel_MiddleDrainCellar_Control_Mode=%s', specUtils.valueToStr(spec.Tunnel_MiddleDrainCellar_Control_Mode_));
        state += specUtils.fmt(', Tunnel_MiddleDrainCellar_Pump1=%s', specUtils.valueToStr(spec.Tunnel_MiddleDrainCellar_Pump1_));
        state += specUtils.fmt(', Tunnel_MiddleDrainCellar_Pump2=%s', specUtils.valueToStr(spec.Tunnel_MiddleDrainCellar_Pump2_));
        state += specUtils.fmt(', Tunnel_MiddleDrainCellar_PumpDirection=%s', specUtils.valueToStr(spec.Tunnel_MiddleDrainCellar_PumpDirection_));
        state += specUtils.fmt(', Tunnel_MiddleDrainCellar_Regime=%s', specUtils.valueToStr(spec.Tunnel_MiddleDrainCellar_Regime_));
        state += specUtils.fmt(', Tunnel_MiddleDrainCellar_Sensor1=%s', specUtils.valueToStr(spec.Tunnel_MiddleDrainCellar_Sensor1_));
        state += specUtils.fmt(', Tunnel_MiddleDrainCellar_Sensor2=%s', specUtils.valueToStr(spec.Tunnel_MiddleDrainCellar_Sensor2_));
        state += specUtils.fmt(', Tunnel_MiddleDrainCellar_Sensor3=%s', specUtils.valueToStr(spec.Tunnel_MiddleDrainCellar_Sensor3_));
        state += specUtils.fmt(', Tunnel_MiddleDrainCellar_Sensor4=%s', specUtils.valueToStr(spec.Tunnel_MiddleDrainCellar_Sensor4_));
        state += specUtils.fmt(', Tunnel_MiddleDrainCellar_Sensor5=%s', specUtils.valueToStr(spec.Tunnel_MiddleDrainCellar_Sensor5_));
        state += specUtils.fmt(', Tunnel_MiddleTunnelChannel_Broadcast=%s', specUtils.valueToStr(spec.Tunnel_MiddleTunnelChannel_Broadcast_));
        state += specUtils.fmt(', Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_Observer=%s', specUtils.valueToStr(spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_Observer_));
        state += specUtils.fmt(', Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_Observer=%s', specUtils.valueToStr(spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_Observer_));
        state += specUtils.fmt(', Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_Observer=%s', specUtils.valueToStr(spec.Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_Observer_));
        state += specUtils.fmt(', Tunnel_MiddleTunnelChannel_ButtonLightingOff_Observer=%s', specUtils.valueToStr(spec.Tunnel_MiddleTunnelChannel_ButtonLightingOff_Observer_));
        state += specUtils.fmt(', Tunnel_MiddleTunnelChannel_ButtonLightingOn_Observer=%s', specUtils.valueToStr(spec.Tunnel_MiddleTunnelChannel_ButtonLightingOn_Observer_));
        state += specUtils.fmt(', Tunnel_MiddleTunnelChannel_ButtonPressureLeft_Observer=%s', specUtils.valueToStr(spec.Tunnel_MiddleTunnelChannel_ButtonPressureLeft_Observer_));
        state += specUtils.fmt(', Tunnel_MiddleTunnelChannel_ButtonPressureOff_Observer=%s', specUtils.valueToStr(spec.Tunnel_MiddleTunnelChannel_ButtonPressureOff_Observer_));
        state += specUtils.fmt(', Tunnel_MiddleTunnelChannel_ButtonPressureRight_Observer=%s', specUtils.valueToStr(spec.Tunnel_MiddleTunnelChannel_ButtonPressureRight_Observer_));
        state += specUtils.fmt(', Tunnel_MiddleTunnelChannel_ButtonStartMessage_Observer=%s', specUtils.valueToStr(spec.Tunnel_MiddleTunnelChannel_ButtonStartMessage_Observer_));
        state += specUtils.fmt(', Tunnel_MiddleTunnelChannel_ButtonStopMessage_Observer=%s', specUtils.valueToStr(spec.Tunnel_MiddleTunnelChannel_ButtonStopMessage_Observer_));
        state += specUtils.fmt(', Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_Observer=%s', specUtils.valueToStr(spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_Observer_));
        state += specUtils.fmt(', Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_Observer=%s', specUtils.valueToStr(spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_Observer_));
        state += specUtils.fmt(', Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_Mode=%s', specUtils.valueToStr(spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_Mode_));
        state += specUtils.fmt(', Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_Observer=%s', specUtils.valueToStr(spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_Observer_));
        state += specUtils.fmt(', Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_Observer=%s', specUtils.valueToStr(spec.Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_Observer_));
        state += specUtils.fmt(', Tunnel_MiddleTunnelChannel_ControlLighting_Mode=%s', specUtils.valueToStr(spec.Tunnel_MiddleTunnelChannel_ControlLighting_Mode_));
        state += specUtils.fmt(', Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_Observer=%s', specUtils.valueToStr(spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_Observer_));
        state += specUtils.fmt(', Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_Observer=%s', specUtils.valueToStr(spec.Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_Observer_));
        state += specUtils.fmt(', Tunnel_MiddleTunnelChannel_ControlPressure_Mode=%s', specUtils.valueToStr(spec.Tunnel_MiddleTunnelChannel_ControlPressure_Mode_));
        state += specUtils.fmt(', Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication=%s', specUtils.valueToStr(spec.Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication_));
        state += specUtils.fmt(', Tunnel_MiddleTunnelChannel_Lighting=%s', specUtils.valueToStr(spec.Tunnel_MiddleTunnelChannel_Lighting_));
        state += specUtils.fmt(', Tunnel_MiddleTunnelChannel_Pressure=%s', specUtils.valueToStr(spec.Tunnel_MiddleTunnelChannel_Pressure_));
        state += specUtils.fmt(', Tunnel_Traffictube1_AccessBoombarriers=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_AccessBoombarriers_));
        state += specUtils.fmt(', Tunnel_Traffictube1_AccessTrafficlights=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_AccessTrafficlights_));
        state += specUtils.fmt(', Tunnel_Traffictube1_Boombarrier1_ActuatorDown=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_Boombarrier1_ActuatorDown_));
        state += specUtils.fmt(', Tunnel_Traffictube1_Boombarrier1_ActuatorUp=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_Boombarrier1_ActuatorUp_));
        state += specUtils.fmt(', Tunnel_Traffictube1_Boombarrier1_ObstacleDetection=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_Boombarrier1_ObstacleDetection_));
        state += specUtils.fmt(', Tunnel_Traffictube1_Boombarrier1_SensorClosed=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_Boombarrier1_SensorClosed_));
        state += specUtils.fmt(', Tunnel_Traffictube1_Boombarrier1_SensorOpen=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_Boombarrier1_SensorOpen_));
        state += specUtils.fmt(', Tunnel_Traffictube1_Boombarrier2_ActuatorDown=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_Boombarrier2_ActuatorDown_));
        state += specUtils.fmt(', Tunnel_Traffictube1_Boombarrier2_ActuatorUp=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_Boombarrier2_ActuatorUp_));
        state += specUtils.fmt(', Tunnel_Traffictube1_Boombarrier2_ObstacleDetection=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_Boombarrier2_ObstacleDetection_));
        state += specUtils.fmt(', Tunnel_Traffictube1_Boombarrier2_SensorClosed=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_Boombarrier2_SensorClosed_));
        state += specUtils.fmt(', Tunnel_Traffictube1_Boombarrier2_SensorOpen=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_Boombarrier2_SensorOpen_));
        state += specUtils.fmt(', Tunnel_Traffictube1_Broadcast=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_Broadcast_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonCamera1_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonCamera1_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonCamera2_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonCamera2_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonCamera3_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonCamera3_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonCamera4_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonCamera4_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonCamera5_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonCamera5_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonCamera6_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonCamera6_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonCameraStopView_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonCameraStopView_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonCameraView_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonCameraView_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonCloseBoombarriers_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonCloseBoombarriers_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonEmergency_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonEmergency_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonEvacuation_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonEvacuation_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonFlashTrafficlights_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonFlashTrafficlights_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonLighting0_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonLighting0_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonLighting1_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonLighting1_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonLighting2_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonLighting2_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonLighting3_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonLighting3_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonLighting4_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonLighting4_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonLighting5_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonLighting5_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonLighting6_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonLighting6_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonLighting7_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonLighting7_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonLighting8_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonLighting8_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonLive_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonLive_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonMaintenance_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonMaintenance_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonMessage_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonMessage_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonOffTrafficlights_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonOffTrafficlights_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonOpenBoombarriers_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonOpenBoombarriers_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonOperational_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonOperational_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonRecovery_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonRecovery_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonRedTrafficlights_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonRedTrafficlights_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonStopBoombarriers_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonStopBoombarriers_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonVentilation0_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonVentilation0_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonVentilation1_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonVentilation1_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonVentilation2_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonVentilation2_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonVentilation3_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonVentilation3_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonVentilation4_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonVentilation4_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonVentilation5_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonVentilation5_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonVentilation6_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonVentilation6_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonVentilation7_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonVentilation7_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonVentilation8_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonVentilation8_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ButtonVentilationDrivingDirection_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ButtonVentilationDrivingDirection_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_CCTV=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_CCTV_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ControlBoombarriers_Mode=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ControlBoombarriers_Mode_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ControlLighting_ButtonAuto_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ControlLighting_ButtonAuto_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ControlLighting_ButtonManual_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ControlLighting_ButtonManual_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ControlLighting_Mode=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ControlLighting_Mode_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ControlTrafficlights_Mode=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ControlTrafficlights_Mode_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ControlVentilation_ButtonAuto_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ControlVentilation_ButtonAuto_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ControlVentilation_ButtonManual_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ControlVentilation_ButtonManual_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ControlVentilation_Mode=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ControlVentilation_Mode_));
        state += specUtils.fmt(', Tunnel_Traffictube1_EmergencyCabinetA_Firehose=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_EmergencyCabinetA_Firehose_));
        state += specUtils.fmt(', Tunnel_Traffictube1_EmergencyCabinetA_HandheldExtinguisher=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_EmergencyCabinetA_HandheldExtinguisher_));
        state += specUtils.fmt(', Tunnel_Traffictube1_EmergencyCabinetA_Phone=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_EmergencyCabinetA_Phone_));
        state += specUtils.fmt(', Tunnel_Traffictube1_EmergencyCabinetA_SensorOpen=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_EmergencyCabinetA_SensorOpen_));
        state += specUtils.fmt(', Tunnel_Traffictube1_EmergencyCabinetC_HandheldExtinguisher=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_EmergencyCabinetC_HandheldExtinguisher_));
        state += specUtils.fmt(', Tunnel_Traffictube1_EmergencyCabinetC_Phone=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_EmergencyCabinetC_Phone_));
        state += specUtils.fmt(', Tunnel_Traffictube1_EmergencyCabinetC_SensorOpen=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_EmergencyCabinetC_SensorOpen_));
        state += specUtils.fmt(', Tunnel_Traffictube1_EscapeDoor_Broadcast=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_EscapeDoor_Broadcast_));
        state += specUtils.fmt(', Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_Mode=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_Mode_));
        state += specUtils.fmt(', Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_Mode=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_Mode_));
        state += specUtils.fmt(', Tunnel_Traffictube1_EscapeDoor_RouteIndication=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_EscapeDoor_RouteIndication_));
        state += specUtils.fmt(', Tunnel_Traffictube1_J32_Mode=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_J32_Mode_));
        state += specUtils.fmt(', Tunnel_Traffictube1_J32_TimerReleaseSignal=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_J32_TimerReleaseSignal_));
        state += specUtils.fmt(', Tunnel_Traffictube1_Lighting.setting=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_Lighting_setting_));
        state += specUtils.fmt(', Tunnel_Traffictube1_Lightsensor.setting=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_Lightsensor_setting_));
        state += specUtils.fmt(', Tunnel_Traffictube1_MatrixsignTrafficlight=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_MatrixsignTrafficlight_));
        state += specUtils.fmt(', Tunnel_Traffictube1_MatrixsignUnpressed=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_MatrixsignUnpressed_));
        state += specUtils.fmt(', Tunnel_Traffictube1_ModeTraffictube=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_ModeTraffictube_));
        state += specUtils.fmt(', Tunnel_Traffictube1_PopUp_ButtonAccept_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_PopUp_ButtonAccept_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_PopUp_ButtonReject_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_PopUp_ButtonReject_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_PopUp_Timer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_PopUp_Timer_));
        state += specUtils.fmt(', Tunnel_Traffictube1_PopUp_Window=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_PopUp_Window_));
        state += specUtils.fmt(', Tunnel_Traffictube1_Recorder=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_Recorder_));
        state += specUtils.fmt(', Tunnel_Traffictube1_Smokedetection.setting=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_Smokedetection_setting_));
        state += specUtils.fmt(', Tunnel_Traffictube1_Standstilldetection=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_Standstilldetection_));
        state += specUtils.fmt(', Tunnel_Traffictube1_SwitchTimerAudio=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_SwitchTimerAudio_));
        state += specUtils.fmt(', Tunnel_Traffictube1_TimerCameraViewEven=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_TimerCameraViewEven_));
        state += specUtils.fmt(', Tunnel_Traffictube1_TimerCameraViewUneven=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_TimerCameraViewUneven_));
        state += specUtils.fmt(', Tunnel_Traffictube1_Trafficlight1_Mode=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_Trafficlight1_Mode_));
        state += specUtils.fmt(', Tunnel_Traffictube1_Trafficlight1_ReleaseSignal=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_Trafficlight1_ReleaseSignal_));
        state += specUtils.fmt(', Tunnel_Traffictube1_Trafficlight1_TimerReleaseSignal=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_Trafficlight1_TimerReleaseSignal_));
        state += specUtils.fmt(', Tunnel_Traffictube1_Trafficlight2_Mode=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_Trafficlight2_Mode_));
        state += specUtils.fmt(', Tunnel_Traffictube1_Trafficlight2_ReleaseSignal=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_Trafficlight2_ReleaseSignal_));
        state += specUtils.fmt(', Tunnel_Traffictube1_Trafficlight2_TimerReleaseSignal=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_Trafficlight2_TimerReleaseSignal_));
        state += specUtils.fmt(', Tunnel_Traffictube1_Trafficlight3_Mode=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_Trafficlight3_Mode_));
        state += specUtils.fmt(', Tunnel_Traffictube1_Trafficlight3_ReleaseSignal=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_Trafficlight3_ReleaseSignal_));
        state += specUtils.fmt(', Tunnel_Traffictube1_Trafficlight3_TimerReleaseSignal=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_Trafficlight3_TimerReleaseSignal_));
        state += specUtils.fmt(', Tunnel_Traffictube1_Ventilation.setting=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_Ventilation_setting_));
        state += specUtils.fmt(', Tunnel_Traffictube1_VentilationDirection=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_VentilationDirection_));
        state += specUtils.fmt(', Tunnel_Traffictube1_VentilationEntrance.setting=%s', specUtils.valueToStr(spec.Tunnel_Traffictube1_VentilationEntrance_setting_));
        state += specUtils.fmt(', Tunnel_Traffictube2_AccessBoombarriers=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_AccessBoombarriers_));
        state += specUtils.fmt(', Tunnel_Traffictube2_AccessTrafficlights=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_AccessTrafficlights_));
        state += specUtils.fmt(', Tunnel_Traffictube2_Boombarrier1_ActuatorDown=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_Boombarrier1_ActuatorDown_));
        state += specUtils.fmt(', Tunnel_Traffictube2_Boombarrier1_ActuatorUp=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_Boombarrier1_ActuatorUp_));
        state += specUtils.fmt(', Tunnel_Traffictube2_Boombarrier1_ObstacleDetection=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_Boombarrier1_ObstacleDetection_));
        state += specUtils.fmt(', Tunnel_Traffictube2_Boombarrier1_SensorClosed=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_Boombarrier1_SensorClosed_));
        state += specUtils.fmt(', Tunnel_Traffictube2_Boombarrier1_SensorOpen=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_Boombarrier1_SensorOpen_));
        state += specUtils.fmt(', Tunnel_Traffictube2_Boombarrier2_ActuatorDown=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_Boombarrier2_ActuatorDown_));
        state += specUtils.fmt(', Tunnel_Traffictube2_Boombarrier2_ActuatorUp=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_Boombarrier2_ActuatorUp_));
        state += specUtils.fmt(', Tunnel_Traffictube2_Boombarrier2_ObstacleDetection=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_Boombarrier2_ObstacleDetection_));
        state += specUtils.fmt(', Tunnel_Traffictube2_Boombarrier2_SensorClosed=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_Boombarrier2_SensorClosed_));
        state += specUtils.fmt(', Tunnel_Traffictube2_Boombarrier2_SensorOpen=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_Boombarrier2_SensorOpen_));
        state += specUtils.fmt(', Tunnel_Traffictube2_Broadcast=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_Broadcast_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonCamera1_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonCamera1_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonCamera2_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonCamera2_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonCamera3_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonCamera3_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonCamera4_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonCamera4_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonCamera5_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonCamera5_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonCamera6_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonCamera6_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonCameraStopView_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonCameraStopView_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonCameraView_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonCameraView_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonCloseBoombarriers_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonCloseBoombarriers_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonEmergency_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonEmergency_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonEvacuation_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonEvacuation_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonFlashTrafficlights_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonFlashTrafficlights_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonLighting0_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonLighting0_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonLighting1_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonLighting1_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonLighting2_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonLighting2_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonLighting3_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonLighting3_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonLighting4_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonLighting4_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonLighting5_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonLighting5_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonLighting6_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonLighting6_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonLighting7_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonLighting7_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonLighting8_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonLighting8_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonLive_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonLive_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonMaintenance_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonMaintenance_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonMessage_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonMessage_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonOffTrafficlights_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonOffTrafficlights_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonOpenBoombarriers_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonOpenBoombarriers_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonOperational_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonOperational_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonRecovery_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonRecovery_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonRedTrafficlights_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonRedTrafficlights_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonStopBoombarriers_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonStopBoombarriers_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonVentilation0_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonVentilation0_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonVentilation1_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonVentilation1_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonVentilation2_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonVentilation2_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonVentilation3_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonVentilation3_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonVentilation4_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonVentilation4_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonVentilation5_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonVentilation5_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonVentilation6_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonVentilation6_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonVentilation7_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonVentilation7_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonVentilation8_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonVentilation8_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ButtonVentilationDrivingDirection_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ButtonVentilationDrivingDirection_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_CCTV=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_CCTV_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ControlBoombarriers_Mode=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ControlBoombarriers_Mode_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ControlLighting_ButtonAuto_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ControlLighting_ButtonAuto_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ControlLighting_ButtonManual_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ControlLighting_ButtonManual_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ControlLighting_Mode=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ControlLighting_Mode_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ControlTrafficlights_Mode=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ControlTrafficlights_Mode_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ControlVentilation_ButtonAuto_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ControlVentilation_ButtonAuto_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ControlVentilation_ButtonManual_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ControlVentilation_ButtonManual_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ControlVentilation_Mode=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ControlVentilation_Mode_));
        state += specUtils.fmt(', Tunnel_Traffictube2_EmergencyCabinetA_Firehose=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_EmergencyCabinetA_Firehose_));
        state += specUtils.fmt(', Tunnel_Traffictube2_EmergencyCabinetA_HandheldExtinguisher=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_EmergencyCabinetA_HandheldExtinguisher_));
        state += specUtils.fmt(', Tunnel_Traffictube2_EmergencyCabinetA_Phone=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_EmergencyCabinetA_Phone_));
        state += specUtils.fmt(', Tunnel_Traffictube2_EmergencyCabinetA_SensorOpen=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_EmergencyCabinetA_SensorOpen_));
        state += specUtils.fmt(', Tunnel_Traffictube2_EmergencyCabinetC_HandheldExtinguisher=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_EmergencyCabinetC_HandheldExtinguisher_));
        state += specUtils.fmt(', Tunnel_Traffictube2_EmergencyCabinetC_Phone=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_EmergencyCabinetC_Phone_));
        state += specUtils.fmt(', Tunnel_Traffictube2_EmergencyCabinetC_SensorOpen=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_EmergencyCabinetC_SensorOpen_));
        state += specUtils.fmt(', Tunnel_Traffictube2_EscapeDoor_Broadcast=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_EscapeDoor_Broadcast_));
        state += specUtils.fmt(', Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_Mode=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_Mode_));
        state += specUtils.fmt(', Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_Mode=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_Mode_));
        state += specUtils.fmt(', Tunnel_Traffictube2_EscapeDoor_RouteIndication=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_EscapeDoor_RouteIndication_));
        state += specUtils.fmt(', Tunnel_Traffictube2_J32_Mode=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_J32_Mode_));
        state += specUtils.fmt(', Tunnel_Traffictube2_J32_TimerReleaseSignal=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_J32_TimerReleaseSignal_));
        state += specUtils.fmt(', Tunnel_Traffictube2_Lighting.setting=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_Lighting_setting_));
        state += specUtils.fmt(', Tunnel_Traffictube2_Lightsensor.setting=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_Lightsensor_setting_));
        state += specUtils.fmt(', Tunnel_Traffictube2_MatrixsignTrafficlight=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_MatrixsignTrafficlight_));
        state += specUtils.fmt(', Tunnel_Traffictube2_MatrixsignUnpressed=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_MatrixsignUnpressed_));
        state += specUtils.fmt(', Tunnel_Traffictube2_ModeTraffictube=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_ModeTraffictube_));
        state += specUtils.fmt(', Tunnel_Traffictube2_PopUp_ButtonAccept_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_PopUp_ButtonAccept_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_PopUp_ButtonReject_Observer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_PopUp_ButtonReject_Observer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_PopUp_Timer=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_PopUp_Timer_));
        state += specUtils.fmt(', Tunnel_Traffictube2_PopUp_Window=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_PopUp_Window_));
        state += specUtils.fmt(', Tunnel_Traffictube2_Recorder=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_Recorder_));
        state += specUtils.fmt(', Tunnel_Traffictube2_Smokedetection.setting=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_Smokedetection_setting_));
        state += specUtils.fmt(', Tunnel_Traffictube2_Standstilldetection=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_Standstilldetection_));
        state += specUtils.fmt(', Tunnel_Traffictube2_SwitchTimerAudio=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_SwitchTimerAudio_));
        state += specUtils.fmt(', Tunnel_Traffictube2_TimerCameraViewEven=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_TimerCameraViewEven_));
        state += specUtils.fmt(', Tunnel_Traffictube2_TimerCameraViewUneven=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_TimerCameraViewUneven_));
        state += specUtils.fmt(', Tunnel_Traffictube2_Trafficlight1_Mode=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_Trafficlight1_Mode_));
        state += specUtils.fmt(', Tunnel_Traffictube2_Trafficlight1_ReleaseSignal=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_Trafficlight1_ReleaseSignal_));
        state += specUtils.fmt(', Tunnel_Traffictube2_Trafficlight1_TimerReleaseSignal=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_Trafficlight1_TimerReleaseSignal_));
        state += specUtils.fmt(', Tunnel_Traffictube2_Trafficlight2_Mode=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_Trafficlight2_Mode_));
        state += specUtils.fmt(', Tunnel_Traffictube2_Trafficlight2_ReleaseSignal=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_Trafficlight2_ReleaseSignal_));
        state += specUtils.fmt(', Tunnel_Traffictube2_Trafficlight2_TimerReleaseSignal=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_Trafficlight2_TimerReleaseSignal_));
        state += specUtils.fmt(', Tunnel_Traffictube2_Trafficlight3_Mode=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_Trafficlight3_Mode_));
        state += specUtils.fmt(', Tunnel_Traffictube2_Trafficlight3_ReleaseSignal=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_Trafficlight3_ReleaseSignal_));
        state += specUtils.fmt(', Tunnel_Traffictube2_Trafficlight3_TimerReleaseSignal=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_Trafficlight3_TimerReleaseSignal_));
        state += specUtils.fmt(', Tunnel_Traffictube2_Ventilation.setting=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_Ventilation_setting_));
        state += specUtils.fmt(', Tunnel_Traffictube2_VentilationDirection=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_VentilationDirection_));
        state += specUtils.fmt(', Tunnel_Traffictube2_VentilationEntrance.setting=%s', specUtils.valueToStr(spec.Tunnel_Traffictube2_VentilationEntrance_setting_));
        state += specUtils.fmt(', Tunnel_WatercellarFirehoses_ButtonExtinguish_Observer=%s', specUtils.valueToStr(spec.Tunnel_WatercellarFirehoses_ButtonExtinguish_Observer_));
        state += specUtils.fmt(', Tunnel_WatercellarFirehoses_ButtonGuard_Observer=%s', specUtils.valueToStr(spec.Tunnel_WatercellarFirehoses_ButtonGuard_Observer_));
        state += specUtils.fmt(', Tunnel_WatercellarFirehoses_Control_ButtonAuto_Observer=%s', specUtils.valueToStr(spec.Tunnel_WatercellarFirehoses_Control_ButtonAuto_Observer_));
        state += specUtils.fmt(', Tunnel_WatercellarFirehoses_Control_ButtonManual_Observer=%s', specUtils.valueToStr(spec.Tunnel_WatercellarFirehoses_Control_ButtonManual_Observer_));
        state += specUtils.fmt(', Tunnel_WatercellarFirehoses_Control_Mode=%s', specUtils.valueToStr(spec.Tunnel_WatercellarFirehoses_Control_Mode_));
        state += specUtils.fmt(', Tunnel_WatercellarFirehoses_Pump=%s', specUtils.valueToStr(spec.Tunnel_WatercellarFirehoses_Pump_));
        state += specUtils.fmt(', Tunnel_WatercellarFirehoses_Regime=%s', specUtils.valueToStr(spec.Tunnel_WatercellarFirehoses_Regime_));
        state += specUtils.fmt(', Tunnel_WatercellarFirehoses_SensorHigh=%s', specUtils.valueToStr(spec.Tunnel_WatercellarFirehoses_SensorHigh_));
        state += specUtils.fmt(', Tunnel_WatercellarFirehoses_SensorLow=%s', specUtils.valueToStr(spec.Tunnel_WatercellarFirehoses_SensorLow_));
        return state;
    }


    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_setCameraButtonPressed".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_setCameraButtonPressed_() {
        return ((((((spec.Tunnel_Traffictube1_ButtonCamera1_Observer_) == (spec.specEnum._pressed)) || ((spec.Tunnel_Traffictube1_ButtonCamera2_Observer_) == (spec.specEnum._pressed))) || ((spec.Tunnel_Traffictube1_ButtonCamera3_Observer_) == (spec.specEnum._pressed))) || ((spec.Tunnel_Traffictube1_ButtonCamera4_Observer_) == (spec.specEnum._pressed))) || ((spec.Tunnel_Traffictube1_ButtonCamera5_Observer_) == (spec.specEnum._pressed))) || ((spec.Tunnel_Traffictube1_ButtonCamera6_Observer_) == (spec.specEnum._pressed));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Boombarrier1_open".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Boombarrier1_open_() {
        return (((spec.Tunnel_Traffictube1_Boombarrier1_SensorOpen_) == (spec.specEnum._on)) && ((spec.Tunnel_Traffictube1_Boombarrier1_ActuatorUp_) == (spec.specEnum._off))) && ((spec.Tunnel_Traffictube1_Boombarrier1_ActuatorDown_) == (spec.specEnum._off));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Boombarrier1_closed".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Boombarrier1_closed_() {
        return (((spec.Tunnel_Traffictube1_Boombarrier1_SensorClosed_) == (spec.specEnum._on)) && ((spec.Tunnel_Traffictube1_Boombarrier1_ActuatorUp_) == (spec.specEnum._off))) && ((spec.Tunnel_Traffictube1_Boombarrier1_ActuatorDown_) == (spec.specEnum._off));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Boombarrier2_open".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Boombarrier2_open_() {
        return (((spec.Tunnel_Traffictube1_Boombarrier2_SensorOpen_) == (spec.specEnum._on)) && ((spec.Tunnel_Traffictube1_Boombarrier2_ActuatorUp_) == (spec.specEnum._off))) && ((spec.Tunnel_Traffictube1_Boombarrier2_ActuatorDown_) == (spec.specEnum._off));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Boombarrier2_closed".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Boombarrier2_closed_() {
        return (((spec.Tunnel_Traffictube1_Boombarrier2_SensorClosed_) == (spec.specEnum._on)) && ((spec.Tunnel_Traffictube1_Boombarrier2_ActuatorUp_) == (spec.specEnum._off))) && ((spec.Tunnel_Traffictube1_Boombarrier2_ActuatorDown_) == (spec.specEnum._off));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlBoombarriers_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_conditionDone_() {
        return (spec.Tunnel_Traffictube1_ControlBoombarriers_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ControlBoombarriers_ButtonManual_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlBoombarriers_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_conditionDone_() {
        return (spec.Tunnel_Traffictube1_ControlBoombarriers_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ControlBoombarriers_ButtonAuto_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonStopBoombarriers_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonStopBoombarriers_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlBoombarriers_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonStopBoombarriers_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonStopBoombarriers_conditionDone_() {
        return (spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._stopped);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonStopBoombarriers_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonStopBoombarriers_conditionCancel_() {
        return (spec.Tunnel_Traffictube1_ControlBoombarriers_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonOpenBoombarriers_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonOpenBoombarriers_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlBoombarriers_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonOpenBoombarriers_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonOpenBoombarriers_conditionDone_() {
        return (spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._opening);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonOpenBoombarriers_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonOpenBoombarriers_conditionCancel_() {
        return (spec.Tunnel_Traffictube1_ControlBoombarriers_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonCloseBoombarriers_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonCloseBoombarriers_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlBoombarriers_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonCloseBoombarriers_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonCloseBoombarriers_conditionDone_() {
        return (spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._closing);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonCloseBoombarriers_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonCloseBoombarriers_conditionCancel_() {
        return (spec.Tunnel_Traffictube1_ControlBoombarriers_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlBoombarriers_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_conditionDone_() {
        return (spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonCloseUnconditionalBoombarriers_conditionCancel_() {
        return (spec.Tunnel_Traffictube1_ControlBoombarriers_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlTrafficlights_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_conditionDone_() {
        return (spec.Tunnel_Traffictube1_ControlTrafficlights_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ControlTrafficlights_ButtonManual_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlTrafficlights_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_conditionDone_() {
        return (spec.Tunnel_Traffictube1_ControlTrafficlights_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ControlTrafficlights_ButtonAuto_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonRedTrafficlights_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonRedTrafficlights_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlTrafficlights_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonRedTrafficlights_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonRedTrafficlights_conditionDone_() {
        return (spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._red);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonRedTrafficlights_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonRedTrafficlights_conditionCancel_() {
        return (((spec.Tunnel_Traffictube1_ControlTrafficlights_Mode_) == (spec.specEnum._auto)) || ((spec.Tunnel_Traffictube1_ButtonFlashTrafficlights_Observer_) == (spec.specEnum._pressed))) || ((spec.Tunnel_Traffictube1_ButtonOffTrafficlights_Observer_) == (spec.specEnum._pressed));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonFlashTrafficlights_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonFlashTrafficlights_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlTrafficlights_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonFlashTrafficlights_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonFlashTrafficlights_conditionDone_() {
        return (spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._flash);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonFlashTrafficlights_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonFlashTrafficlights_conditionCancel_() {
        return (((spec.Tunnel_Traffictube1_ControlTrafficlights_Mode_) == (spec.specEnum._auto)) || ((spec.Tunnel_Traffictube1_ButtonRedTrafficlights_Observer_) == (spec.specEnum._pressed))) || ((spec.Tunnel_Traffictube1_ButtonOffTrafficlights_Observer_) == (spec.specEnum._pressed));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonOffTrafficlights_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonOffTrafficlights_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlTrafficlights_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonOffTrafficlights_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonOffTrafficlights_conditionDone_() {
        return (spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._off);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonOffTrafficlights_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonOffTrafficlights_conditionCancel_() {
        return (spec.Tunnel_Traffictube1_ControlTrafficlights_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_conditionPush_() {
        return (spec.Tunnel_Traffictube1_AccessTrafficlights_) != (spec.specEnum._red);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_conditionDone_() {
        return (spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._red);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonPrimaryRedTrafficlights_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_conditionPush_() {
        return (spec.Tunnel_Traffictube1_AccessTrafficlights_) != (spec.specEnum._off);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_conditionDone_() {
        return (spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._off);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonPrimaryOffTrafficlights_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_conditionPush_() {
        return ((spec.Tunnel_Traffictube1_AccessTrafficlights_) != (spec.specEnum._red)) || ((spec.Tunnel_Traffictube1_AccessBoombarriers_) != (spec.specEnum._closing));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_conditionDone_() {
        return ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._red)) && ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._closing));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonPrimaryCloseTraffictube_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_conditionPush_() {
        return ((spec.Tunnel_Traffictube1_AccessTrafficlights_) != (spec.specEnum._off)) || ((spec.Tunnel_Traffictube1_AccessBoombarriers_) != (spec.specEnum._opening));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_conditionDone_() {
        return ((spec.Tunnel_Traffictube1_AccessTrafficlights_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube1_AccessBoombarriers_) == (spec.specEnum._opening));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonPrimaryOpenTraffictube_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ControlVentilation_ButtonManual_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ControlVentilation_ButtonManual_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ControlVentilation_ButtonManual_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ControlVentilation_ButtonManual_conditionDone_() {
        return (spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ControlVentilation_ButtonManual_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ControlVentilation_ButtonManual_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ControlVentilation_ButtonAuto_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ControlVentilation_ButtonAuto_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ControlVentilation_ButtonAuto_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ControlVentilation_ButtonAuto_conditionDone_() {
        return (spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ControlVentilation_ButtonAuto_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ControlVentilation_ButtonAuto_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilationDrivingDirection_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilationDrivingDirection_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilationDrivingDirection_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilationDrivingDirection_conditionDone_() {
        return (spec.Tunnel_Traffictube1_VentilationDirection_) == (spec.specEnum._drivingDirection);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilationDrivingDirection_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilationDrivingDirection_conditionCancel_() {
        return (spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_conditionDone_() {
        return (spec.Tunnel_Traffictube1_VentilationDirection_) == (spec.specEnum._againstDrivingDirection);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilationAgainstDrivingDirection_conditionCancel_() {
        return (spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilation0_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilation0_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilation0_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilation0_conditionDone_() {
        return (specUtils.equalObjs(spec.Tunnel_Traffictube1_Ventilation_setting_, 0)) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_VentilationEntrance_setting_, 0));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilation0_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilation0_conditionCancel_() {
        return (spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilation1_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilation1_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilation1_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilation1_conditionDone_() {
        return (specUtils.equalObjs(spec.Tunnel_Traffictube1_Ventilation_setting_, 1)) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_VentilationEntrance_setting_, 1));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilation1_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilation1_conditionCancel_() {
        return (spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilation2_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilation2_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilation2_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilation2_conditionDone_() {
        return (specUtils.equalObjs(spec.Tunnel_Traffictube1_Ventilation_setting_, 2)) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_VentilationEntrance_setting_, 2));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilation2_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilation2_conditionCancel_() {
        return (spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilation3_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilation3_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilation3_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilation3_conditionDone_() {
        return (specUtils.equalObjs(spec.Tunnel_Traffictube1_Ventilation_setting_, 3)) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_VentilationEntrance_setting_, 3));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilation3_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilation3_conditionCancel_() {
        return (spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilation4_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilation4_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilation4_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilation4_conditionDone_() {
        return (specUtils.equalObjs(spec.Tunnel_Traffictube1_Ventilation_setting_, 4)) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_VentilationEntrance_setting_, 4));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilation4_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilation4_conditionCancel_() {
        return (spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilation5_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilation5_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilation5_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilation5_conditionDone_() {
        return (specUtils.equalObjs(spec.Tunnel_Traffictube1_Ventilation_setting_, 5)) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_VentilationEntrance_setting_, 5));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilation5_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilation5_conditionCancel_() {
        return (spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilation6_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilation6_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilation6_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilation6_conditionDone_() {
        return (specUtils.equalObjs(spec.Tunnel_Traffictube1_Ventilation_setting_, 6)) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_VentilationEntrance_setting_, 6));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilation6_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilation6_conditionCancel_() {
        return (spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilation7_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilation7_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilation7_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilation7_conditionDone_() {
        return (specUtils.equalObjs(spec.Tunnel_Traffictube1_Ventilation_setting_, 7)) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_VentilationEntrance_setting_, 7));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilation7_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilation7_conditionCancel_() {
        return (spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilation8_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilation8_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilation8_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilation8_conditionDone_() {
        return (specUtils.equalObjs(spec.Tunnel_Traffictube1_Ventilation_setting_, 8)) && (specUtils.equalObjs(spec.Tunnel_Traffictube1_VentilationEntrance_setting_, 8));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonVentilation8_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonVentilation8_conditionCancel_() {
        return (spec.Tunnel_Traffictube1_ControlVentilation_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ControlLighting_ButtonManual_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ControlLighting_ButtonManual_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ControlLighting_ButtonManual_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ControlLighting_ButtonManual_conditionDone_() {
        return (spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ControlLighting_ButtonManual_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ControlLighting_ButtonManual_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ControlLighting_ButtonAuto_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ControlLighting_ButtonAuto_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ControlLighting_ButtonAuto_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ControlLighting_ButtonAuto_conditionDone_() {
        return (spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ControlLighting_ButtonAuto_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ControlLighting_ButtonAuto_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonLighting0_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonLighting0_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonLighting0_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonLighting0_conditionDone_() {
        return specUtils.equalObjs(spec.Tunnel_Traffictube1_Lighting_setting_, 0);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonLighting0_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonLighting0_conditionCancel_() {
        return (spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonLighting1_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonLighting1_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonLighting1_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonLighting1_conditionDone_() {
        return specUtils.equalObjs(spec.Tunnel_Traffictube1_Lighting_setting_, 1);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonLighting1_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonLighting1_conditionCancel_() {
        return (spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonLighting2_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonLighting2_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonLighting2_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonLighting2_conditionDone_() {
        return specUtils.equalObjs(spec.Tunnel_Traffictube1_Lighting_setting_, 2);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonLighting2_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonLighting2_conditionCancel_() {
        return (spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonLighting3_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonLighting3_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonLighting3_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonLighting3_conditionDone_() {
        return specUtils.equalObjs(spec.Tunnel_Traffictube1_Lighting_setting_, 3);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonLighting3_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonLighting3_conditionCancel_() {
        return (spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonLighting4_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonLighting4_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonLighting4_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonLighting4_conditionDone_() {
        return specUtils.equalObjs(spec.Tunnel_Traffictube1_Lighting_setting_, 4);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonLighting4_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonLighting4_conditionCancel_() {
        return (spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonLighting5_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonLighting5_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonLighting5_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonLighting5_conditionDone_() {
        return specUtils.equalObjs(spec.Tunnel_Traffictube1_Lighting_setting_, 5);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonLighting5_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonLighting5_conditionCancel_() {
        return (spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonLighting6_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonLighting6_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonLighting6_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonLighting6_conditionDone_() {
        return specUtils.equalObjs(spec.Tunnel_Traffictube1_Lighting_setting_, 6);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonLighting6_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonLighting6_conditionCancel_() {
        return (spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonLighting7_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonLighting7_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonLighting7_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonLighting7_conditionDone_() {
        return specUtils.equalObjs(spec.Tunnel_Traffictube1_Lighting_setting_, 7);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonLighting7_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonLighting7_conditionCancel_() {
        return (spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonLighting8_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonLighting8_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonLighting8_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonLighting8_conditionDone_() {
        return specUtils.equalObjs(spec.Tunnel_Traffictube1_Lighting_setting_, 8);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonLighting8_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonLighting8_conditionCancel_() {
        return (spec.Tunnel_Traffictube1_ControlLighting_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonCamera1_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonCamera1_conditionPush_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonCamera1_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonCamera1_conditionDone_() {
        return ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera1)) && ((spec.Tunnel_Traffictube1_ButtonCameraView_Observer_) == (spec.specEnum._unpressed));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonCamera1_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonCamera1_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonCamera2_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonCamera2_conditionPush_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonCamera2_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonCamera2_conditionDone_() {
        return ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera2)) && ((spec.Tunnel_Traffictube1_ButtonCameraView_Observer_) == (spec.specEnum._unpressed));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonCamera2_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonCamera2_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonCamera3_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonCamera3_conditionPush_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonCamera3_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonCamera3_conditionDone_() {
        return ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera3)) && ((spec.Tunnel_Traffictube1_ButtonCameraView_Observer_) == (spec.specEnum._unpressed));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonCamera3_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonCamera3_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonCamera4_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonCamera4_conditionPush_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonCamera4_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonCamera4_conditionDone_() {
        return ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera4)) && ((spec.Tunnel_Traffictube1_ButtonCameraView_Observer_) == (spec.specEnum._unpressed));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonCamera4_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonCamera4_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonCamera5_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonCamera5_conditionPush_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonCamera5_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonCamera5_conditionDone_() {
        return ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera5)) && ((spec.Tunnel_Traffictube1_ButtonCameraView_Observer_) == (spec.specEnum._unpressed));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonCamera5_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonCamera5_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonCamera6_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonCamera6_conditionPush_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonCamera6_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonCamera6_conditionDone_() {
        return ((spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._camera6)) && ((spec.Tunnel_Traffictube1_ButtonCameraView_Observer_) == (spec.specEnum._unpressed));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonCamera6_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonCamera6_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonCameraView_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonCameraView_conditionPush_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonCameraView_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonCameraView_conditionDone_() {
        return (spec.Tunnel_Traffictube1_ButtonCameraStopView_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonCameraView_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonCameraView_conditionCancel_() {
        return spec.Tunnel_Traffictube1_setCameraButtonPressed_();
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonCameraStopView_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonCameraStopView_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ButtonCameraView_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonCameraStopView_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonCameraStopView_conditionDone_() {
        return (spec.Tunnel_Traffictube1_CCTV_) == (spec.specEnum._off);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonCameraStopView_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonCameraStopView_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonMessage_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonMessage_conditionPush_() {
        return (spec.Tunnel_Traffictube1_Broadcast_) == (spec.specEnum._live);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonMessage_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonMessage_conditionDone_() {
        return ((spec.Tunnel_Traffictube1_Broadcast_) == (spec.specEnum._message)) && ((spec.Tunnel_Traffictube1_SwitchTimerAudio_) == (spec.specEnum._off));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonMessage_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonMessage_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonLive_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonLive_conditionPush_() {
        return (spec.Tunnel_Traffictube1_Broadcast_) != (spec.specEnum._live);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonLive_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonLive_conditionDone_() {
        return (spec.Tunnel_Traffictube1_Broadcast_) == (spec.specEnum._live);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonLive_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonLive_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_conditionPush_() {
        return (spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_conditionDone_() {
        return (spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonManual_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_conditionPush_() {
        return (spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_conditionDone_() {
        return (spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_ButtonAuto_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_conditionPush_() {
        return (spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_conditionDone_() {
        return ((spec.Tunnel_Traffictube1_EscapeDoor_Broadcast_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube1_SwitchTimerAudio_) == (spec.specEnum._off));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_conditionCancel_() {
        return (spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_conditionPush_() {
        return (spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_conditionDone_() {
        return (spec.Tunnel_Traffictube1_EscapeDoor_Broadcast_) == (spec.specEnum._on);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_conditionCancel_() {
        return (spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_conditionPush_() {
        return (spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_conditionDone_() {
        return (spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonManual_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_conditionPush_() {
        return (spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_conditionDone_() {
        return (spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_ButtonAuto_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_conditionPush_() {
        return (spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_conditionDone_() {
        return (spec.Tunnel_Traffictube1_EscapeDoor_RouteIndication_) == (spec.specEnum._off);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_conditionCancel_() {
        return (spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_conditionPush_() {
        return (spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_conditionDone_() {
        return (spec.Tunnel_Traffictube1_EscapeDoor_RouteIndication_) == (spec.specEnum._on);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_conditionCancel_() {
        return (spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_PopUp_ButtonAccept_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_PopUp_ButtonAccept_conditionPush_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_PopUp_ButtonAccept_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_PopUp_ButtonAccept_conditionDone_() {
        return ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._emergency)) && ((spec.Tunnel_Traffictube1_PopUp_Window_) == (spec.specEnum._off));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_PopUp_ButtonAccept_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_PopUp_ButtonAccept_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_PopUp_ButtonReject_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_PopUp_ButtonReject_conditionPush_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_PopUp_ButtonReject_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_PopUp_ButtonReject_conditionDone_() {
        return ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational)) && ((spec.Tunnel_Traffictube1_PopUp_Window_) == (spec.specEnum._off));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_PopUp_ButtonReject_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_PopUp_ButtonReject_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonOperational_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonOperational_conditionPush_() {
        return (((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._standby))) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._maintenance));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonOperational_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonOperational_conditionDone_() {
        return (spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonOperational_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonOperational_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonEmergency_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonEmergency_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ModeTraffictube_) != (spec.specEnum._support);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonEmergency_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonEmergency_conditionDone_() {
        return ((spec.Tunnel_Traffictube1_PopUp_Window_) == (spec.specEnum._on)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._emergency));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonEmergency_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonEmergency_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonEvacuation_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonEvacuation_conditionPush_() {
        return (spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._emergency);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonEvacuation_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonEvacuation_conditionDone_() {
        return ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._evacuation)) && ((spec.Tunnel_Traffictube1_SwitchTimerAudio_) != (spec.specEnum._off));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonEvacuation_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonEvacuation_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonRecovery_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonRecovery_conditionPush_() {
        return ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._emergency)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._maintenance));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonRecovery_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonRecovery_conditionDone_() {
        return (spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonRecovery_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonRecovery_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonMaintenance_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonMaintenance_conditionPush_() {
        return ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._recovery));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonMaintenance_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonMaintenance_conditionDone_() {
        return (spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._maintenance);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_ButtonMaintenance_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_ButtonMaintenance_conditionCancel_() {
        return ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._standby)) || ((spec.Tunnel_Traffictube1_ModeTraffictube_) == (spec.specEnum._emergency));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_RequirementsBoombarrier1_obstacleDetectionOn".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_RequirementsBoombarrier1_obstacleDetectionOn_() {
        return (spec.Tunnel_Traffictube1_Boombarrier1_ObstacleDetection_) == (spec.specEnum._on);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_RequirementsBoombarrier2_obstacleDetectionOn".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_RequirementsBoombarrier2_obstacleDetectionOn_() {
        return (spec.Tunnel_Traffictube1_Boombarrier2_ObstacleDetection_) == (spec.specEnum._on);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_RequirementsTrafficlight1_red".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_RequirementsTrafficlight1_red_() {
        return (spec.Tunnel_Traffictube1_Trafficlight1_Mode_) == (spec.specEnum._red);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_RequirementsTrafficlight1_off".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_RequirementsTrafficlight1_off_() {
        return (spec.Tunnel_Traffictube1_Trafficlight1_Mode_) == (spec.specEnum._off);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_RequirementsTrafficlight2_red".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_RequirementsTrafficlight2_red_() {
        return (spec.Tunnel_Traffictube1_Trafficlight2_Mode_) == (spec.specEnum._red);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_RequirementsTrafficlight2_off".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_RequirementsTrafficlight2_off_() {
        return (spec.Tunnel_Traffictube1_Trafficlight2_Mode_) == (spec.specEnum._off);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_RequirementsTrafficlight3_red".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_RequirementsTrafficlight3_red_() {
        return (spec.Tunnel_Traffictube1_Trafficlight3_Mode_) == (spec.specEnum._red);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_RequirementsTrafficlight3_off".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_RequirementsTrafficlight3_off_() {
        return (spec.Tunnel_Traffictube1_Trafficlight3_Mode_) == (spec.specEnum._off);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_RequirementsCamera1_cameraButtonPressed".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_RequirementsCamera1_cameraButtonPressed_() {
        return (spec.Tunnel_Traffictube1_ButtonCamera1_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_RequirementsCamera1_cameraButtonUnpressed".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_RequirementsCamera1_cameraButtonUnpressed_() {
        return (spec.Tunnel_Traffictube1_ButtonCamera1_Observer_) == (spec.specEnum._unpressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_RequirementsCamera2_cameraButtonPressed".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_RequirementsCamera2_cameraButtonPressed_() {
        return (spec.Tunnel_Traffictube1_ButtonCamera2_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_RequirementsCamera2_cameraButtonUnpressed".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_RequirementsCamera2_cameraButtonUnpressed_() {
        return (spec.Tunnel_Traffictube1_ButtonCamera2_Observer_) == (spec.specEnum._unpressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_RequirementsCamera3_cameraButtonPressed".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_RequirementsCamera3_cameraButtonPressed_() {
        return (spec.Tunnel_Traffictube1_ButtonCamera3_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_RequirementsCamera3_cameraButtonUnpressed".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_RequirementsCamera3_cameraButtonUnpressed_() {
        return (spec.Tunnel_Traffictube1_ButtonCamera3_Observer_) == (spec.specEnum._unpressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_RequirementsCamera4_cameraButtonPressed".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_RequirementsCamera4_cameraButtonPressed_() {
        return (spec.Tunnel_Traffictube1_ButtonCamera4_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_RequirementsCamera4_cameraButtonUnpressed".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_RequirementsCamera4_cameraButtonUnpressed_() {
        return (spec.Tunnel_Traffictube1_ButtonCamera4_Observer_) == (spec.specEnum._unpressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_RequirementsCamera5_cameraButtonPressed".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_RequirementsCamera5_cameraButtonPressed_() {
        return (spec.Tunnel_Traffictube1_ButtonCamera5_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_RequirementsCamera5_cameraButtonUnpressed".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_RequirementsCamera5_cameraButtonUnpressed_() {
        return (spec.Tunnel_Traffictube1_ButtonCamera5_Observer_) == (spec.specEnum._unpressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_RequirementsCamera6_cameraButtonPressed".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_RequirementsCamera6_cameraButtonPressed_() {
        return (spec.Tunnel_Traffictube1_ButtonCamera6_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_RequirementsCamera6_cameraButtonUnpressed".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_RequirementsCamera6_cameraButtonUnpressed_() {
        return (spec.Tunnel_Traffictube1_ButtonCamera6_Observer_) == (spec.specEnum._unpressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_RequirementsEscapeDoor1_routeIndicationAuto".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_RequirementsEscapeDoor1_routeIndicationAuto_() {
        return (spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_RequirementsEscapeDoor1_routeIndicationManual".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_RequirementsEscapeDoor1_routeIndicationManual_() {
        return (spec.Tunnel_Traffictube1_EscapeDoor_ControlRouteIndication_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_RequirementsEscapeDoor1_buttonRouteIndicationOn".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_RequirementsEscapeDoor1_buttonRouteIndicationOn_() {
        return (spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOn_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_RequirementsEscapeDoor1_buttonRouteIndicationOff".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_RequirementsEscapeDoor1_buttonRouteIndicationOff_() {
        return (spec.Tunnel_Traffictube1_EscapeDoor_ButtonRouteIndicationOff_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_RequirementsEscapeDoor1_broadcastAuto".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_RequirementsEscapeDoor1_broadcastAuto_() {
        return (spec.Tunnel_Traffictube1_EscapeDoor_ControlBroadcast_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_RequirementsEscapeDoor1_buttonBroadcastOff".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_RequirementsEscapeDoor1_buttonBroadcastOff_() {
        return (spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOff_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_RequirementsEscapeDoor1_buttonBroadcastOn".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_RequirementsEscapeDoor1_buttonBroadcastOn_() {
        return (spec.Tunnel_Traffictube1_EscapeDoor_ButtonBroadcastOn_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_setCameraButtonPressed".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_setCameraButtonPressed_() {
        return ((((((spec.Tunnel_Traffictube2_ButtonCamera1_Observer_) == (spec.specEnum._pressed)) || ((spec.Tunnel_Traffictube2_ButtonCamera2_Observer_) == (spec.specEnum._pressed))) || ((spec.Tunnel_Traffictube2_ButtonCamera3_Observer_) == (spec.specEnum._pressed))) || ((spec.Tunnel_Traffictube2_ButtonCamera4_Observer_) == (spec.specEnum._pressed))) || ((spec.Tunnel_Traffictube2_ButtonCamera5_Observer_) == (spec.specEnum._pressed))) || ((spec.Tunnel_Traffictube2_ButtonCamera6_Observer_) == (spec.specEnum._pressed));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Boombarrier1_open".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Boombarrier1_open_() {
        return (((spec.Tunnel_Traffictube2_Boombarrier1_SensorOpen_) == (spec.specEnum._on)) && ((spec.Tunnel_Traffictube2_Boombarrier1_ActuatorUp_) == (spec.specEnum._off))) && ((spec.Tunnel_Traffictube2_Boombarrier1_ActuatorDown_) == (spec.specEnum._off));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Boombarrier1_closed".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Boombarrier1_closed_() {
        return (((spec.Tunnel_Traffictube2_Boombarrier1_SensorClosed_) == (spec.specEnum._on)) && ((spec.Tunnel_Traffictube2_Boombarrier1_ActuatorUp_) == (spec.specEnum._off))) && ((spec.Tunnel_Traffictube2_Boombarrier1_ActuatorDown_) == (spec.specEnum._off));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Boombarrier2_open".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Boombarrier2_open_() {
        return (((spec.Tunnel_Traffictube2_Boombarrier2_SensorOpen_) == (spec.specEnum._on)) && ((spec.Tunnel_Traffictube2_Boombarrier2_ActuatorUp_) == (spec.specEnum._off))) && ((spec.Tunnel_Traffictube2_Boombarrier2_ActuatorDown_) == (spec.specEnum._off));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Boombarrier2_closed".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Boombarrier2_closed_() {
        return (((spec.Tunnel_Traffictube2_Boombarrier2_SensorClosed_) == (spec.specEnum._on)) && ((spec.Tunnel_Traffictube2_Boombarrier2_ActuatorUp_) == (spec.specEnum._off))) && ((spec.Tunnel_Traffictube2_Boombarrier2_ActuatorDown_) == (spec.specEnum._off));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlBoombarriers_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_conditionDone_() {
        return (spec.Tunnel_Traffictube2_ControlBoombarriers_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ControlBoombarriers_ButtonManual_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlBoombarriers_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_conditionDone_() {
        return (spec.Tunnel_Traffictube2_ControlBoombarriers_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ControlBoombarriers_ButtonAuto_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonStopBoombarriers_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonStopBoombarriers_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlBoombarriers_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonStopBoombarriers_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonStopBoombarriers_conditionDone_() {
        return (spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._stopped);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonStopBoombarriers_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonStopBoombarriers_conditionCancel_() {
        return (spec.Tunnel_Traffictube2_ControlBoombarriers_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonOpenBoombarriers_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonOpenBoombarriers_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlBoombarriers_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonOpenBoombarriers_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonOpenBoombarriers_conditionDone_() {
        return (spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._opening);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonOpenBoombarriers_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonOpenBoombarriers_conditionCancel_() {
        return (spec.Tunnel_Traffictube2_ControlBoombarriers_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonCloseBoombarriers_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonCloseBoombarriers_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlBoombarriers_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonCloseBoombarriers_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonCloseBoombarriers_conditionDone_() {
        return (spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._closing);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonCloseBoombarriers_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonCloseBoombarriers_conditionCancel_() {
        return (spec.Tunnel_Traffictube2_ControlBoombarriers_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlBoombarriers_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_conditionDone_() {
        return (spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._closingUnconditionally);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonCloseUnconditionalBoombarriers_conditionCancel_() {
        return (spec.Tunnel_Traffictube2_ControlBoombarriers_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlTrafficlights_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_conditionDone_() {
        return (spec.Tunnel_Traffictube2_ControlTrafficlights_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ControlTrafficlights_ButtonManual_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlTrafficlights_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_conditionDone_() {
        return (spec.Tunnel_Traffictube2_ControlTrafficlights_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ControlTrafficlights_ButtonAuto_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonRedTrafficlights_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonRedTrafficlights_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlTrafficlights_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonRedTrafficlights_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonRedTrafficlights_conditionDone_() {
        return (spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._red);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonRedTrafficlights_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonRedTrafficlights_conditionCancel_() {
        return (((spec.Tunnel_Traffictube2_ControlTrafficlights_Mode_) == (spec.specEnum._auto)) || ((spec.Tunnel_Traffictube2_ButtonFlashTrafficlights_Observer_) == (spec.specEnum._pressed))) || ((spec.Tunnel_Traffictube2_ButtonOffTrafficlights_Observer_) == (spec.specEnum._pressed));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonFlashTrafficlights_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonFlashTrafficlights_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlTrafficlights_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonFlashTrafficlights_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonFlashTrafficlights_conditionDone_() {
        return (spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._flash);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonFlashTrafficlights_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonFlashTrafficlights_conditionCancel_() {
        return (((spec.Tunnel_Traffictube2_ControlTrafficlights_Mode_) == (spec.specEnum._auto)) || ((spec.Tunnel_Traffictube2_ButtonRedTrafficlights_Observer_) == (spec.specEnum._pressed))) || ((spec.Tunnel_Traffictube2_ButtonOffTrafficlights_Observer_) == (spec.specEnum._pressed));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonOffTrafficlights_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonOffTrafficlights_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlTrafficlights_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonOffTrafficlights_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonOffTrafficlights_conditionDone_() {
        return (spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._off);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonOffTrafficlights_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonOffTrafficlights_conditionCancel_() {
        return (spec.Tunnel_Traffictube2_ControlTrafficlights_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_conditionPush_() {
        return (spec.Tunnel_Traffictube2_AccessTrafficlights_) != (spec.specEnum._red);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_conditionDone_() {
        return (spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._red);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonPrimaryRedTrafficlights_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_conditionPush_() {
        return (spec.Tunnel_Traffictube2_AccessTrafficlights_) != (spec.specEnum._off);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_conditionDone_() {
        return (spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._off);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonPrimaryOffTrafficlights_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_conditionPush_() {
        return ((spec.Tunnel_Traffictube2_AccessTrafficlights_) != (spec.specEnum._red)) || ((spec.Tunnel_Traffictube2_AccessBoombarriers_) != (spec.specEnum._closing));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_conditionDone_() {
        return ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._red)) && ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._closing));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonPrimaryCloseTraffictube_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_conditionPush_() {
        return ((spec.Tunnel_Traffictube2_AccessTrafficlights_) != (spec.specEnum._off)) || ((spec.Tunnel_Traffictube2_AccessBoombarriers_) != (spec.specEnum._opening));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_conditionDone_() {
        return ((spec.Tunnel_Traffictube2_AccessTrafficlights_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube2_AccessBoombarriers_) == (spec.specEnum._opening));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonPrimaryOpenTraffictube_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ControlVentilation_ButtonManual_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ControlVentilation_ButtonManual_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ControlVentilation_ButtonManual_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ControlVentilation_ButtonManual_conditionDone_() {
        return (spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ControlVentilation_ButtonManual_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ControlVentilation_ButtonManual_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ControlVentilation_ButtonAuto_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ControlVentilation_ButtonAuto_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ControlVentilation_ButtonAuto_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ControlVentilation_ButtonAuto_conditionDone_() {
        return (spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ControlVentilation_ButtonAuto_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ControlVentilation_ButtonAuto_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilationDrivingDirection_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilationDrivingDirection_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilationDrivingDirection_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilationDrivingDirection_conditionDone_() {
        return (spec.Tunnel_Traffictube2_VentilationDirection_) == (spec.specEnum._drivingDirection);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilationDrivingDirection_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilationDrivingDirection_conditionCancel_() {
        return (spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_conditionDone_() {
        return (spec.Tunnel_Traffictube2_VentilationDirection_) == (spec.specEnum._againstDrivingDirection);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilationAgainstDrivingDirection_conditionCancel_() {
        return (spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilation0_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilation0_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilation0_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilation0_conditionDone_() {
        return (specUtils.equalObjs(spec.Tunnel_Traffictube2_Ventilation_setting_, 0)) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_VentilationEntrance_setting_, 0));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilation0_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilation0_conditionCancel_() {
        return (spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilation1_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilation1_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilation1_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilation1_conditionDone_() {
        return (specUtils.equalObjs(spec.Tunnel_Traffictube2_Ventilation_setting_, 1)) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_VentilationEntrance_setting_, 1));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilation1_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilation1_conditionCancel_() {
        return (spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilation2_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilation2_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilation2_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilation2_conditionDone_() {
        return (specUtils.equalObjs(spec.Tunnel_Traffictube2_Ventilation_setting_, 2)) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_VentilationEntrance_setting_, 2));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilation2_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilation2_conditionCancel_() {
        return (spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilation3_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilation3_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilation3_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilation3_conditionDone_() {
        return (specUtils.equalObjs(spec.Tunnel_Traffictube2_Ventilation_setting_, 3)) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_VentilationEntrance_setting_, 3));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilation3_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilation3_conditionCancel_() {
        return (spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilation4_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilation4_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilation4_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilation4_conditionDone_() {
        return (specUtils.equalObjs(spec.Tunnel_Traffictube2_Ventilation_setting_, 4)) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_VentilationEntrance_setting_, 4));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilation4_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilation4_conditionCancel_() {
        return (spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilation5_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilation5_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilation5_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilation5_conditionDone_() {
        return (specUtils.equalObjs(spec.Tunnel_Traffictube2_Ventilation_setting_, 5)) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_VentilationEntrance_setting_, 5));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilation5_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilation5_conditionCancel_() {
        return (spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilation6_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilation6_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilation6_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilation6_conditionDone_() {
        return (specUtils.equalObjs(spec.Tunnel_Traffictube2_Ventilation_setting_, 6)) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_VentilationEntrance_setting_, 6));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilation6_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilation6_conditionCancel_() {
        return (spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilation7_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilation7_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilation7_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilation7_conditionDone_() {
        return (specUtils.equalObjs(spec.Tunnel_Traffictube2_Ventilation_setting_, 7)) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_VentilationEntrance_setting_, 7));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilation7_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilation7_conditionCancel_() {
        return (spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilation8_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilation8_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilation8_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilation8_conditionDone_() {
        return (specUtils.equalObjs(spec.Tunnel_Traffictube2_Ventilation_setting_, 8)) && (specUtils.equalObjs(spec.Tunnel_Traffictube2_VentilationEntrance_setting_, 8));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonVentilation8_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonVentilation8_conditionCancel_() {
        return (spec.Tunnel_Traffictube2_ControlVentilation_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ControlLighting_ButtonManual_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ControlLighting_ButtonManual_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ControlLighting_ButtonManual_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ControlLighting_ButtonManual_conditionDone_() {
        return (spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ControlLighting_ButtonManual_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ControlLighting_ButtonManual_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ControlLighting_ButtonAuto_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ControlLighting_ButtonAuto_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ControlLighting_ButtonAuto_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ControlLighting_ButtonAuto_conditionDone_() {
        return (spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ControlLighting_ButtonAuto_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ControlLighting_ButtonAuto_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonLighting0_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonLighting0_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonLighting0_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonLighting0_conditionDone_() {
        return specUtils.equalObjs(spec.Tunnel_Traffictube2_Lighting_setting_, 0);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonLighting0_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonLighting0_conditionCancel_() {
        return (spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonLighting1_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonLighting1_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonLighting1_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonLighting1_conditionDone_() {
        return specUtils.equalObjs(spec.Tunnel_Traffictube2_Lighting_setting_, 1);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonLighting1_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonLighting1_conditionCancel_() {
        return (spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonLighting2_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonLighting2_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonLighting2_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonLighting2_conditionDone_() {
        return specUtils.equalObjs(spec.Tunnel_Traffictube2_Lighting_setting_, 2);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonLighting2_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonLighting2_conditionCancel_() {
        return (spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonLighting3_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonLighting3_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonLighting3_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonLighting3_conditionDone_() {
        return specUtils.equalObjs(spec.Tunnel_Traffictube2_Lighting_setting_, 3);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonLighting3_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonLighting3_conditionCancel_() {
        return (spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonLighting4_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonLighting4_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonLighting4_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonLighting4_conditionDone_() {
        return specUtils.equalObjs(spec.Tunnel_Traffictube2_Lighting_setting_, 4);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonLighting4_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonLighting4_conditionCancel_() {
        return (spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonLighting5_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonLighting5_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonLighting5_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonLighting5_conditionDone_() {
        return specUtils.equalObjs(spec.Tunnel_Traffictube2_Lighting_setting_, 5);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonLighting5_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonLighting5_conditionCancel_() {
        return (spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonLighting6_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonLighting6_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonLighting6_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonLighting6_conditionDone_() {
        return specUtils.equalObjs(spec.Tunnel_Traffictube2_Lighting_setting_, 6);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonLighting6_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonLighting6_conditionCancel_() {
        return (spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonLighting7_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonLighting7_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonLighting7_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonLighting7_conditionDone_() {
        return specUtils.equalObjs(spec.Tunnel_Traffictube2_Lighting_setting_, 7);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonLighting7_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonLighting7_conditionCancel_() {
        return (spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonLighting8_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonLighting8_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonLighting8_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonLighting8_conditionDone_() {
        return specUtils.equalObjs(spec.Tunnel_Traffictube2_Lighting_setting_, 8);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonLighting8_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonLighting8_conditionCancel_() {
        return (spec.Tunnel_Traffictube2_ControlLighting_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonCamera1_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonCamera1_conditionPush_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonCamera1_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonCamera1_conditionDone_() {
        return ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera1)) && ((spec.Tunnel_Traffictube2_ButtonCameraView_Observer_) == (spec.specEnum._unpressed));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonCamera1_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonCamera1_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonCamera2_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonCamera2_conditionPush_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonCamera2_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonCamera2_conditionDone_() {
        return ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera2)) && ((spec.Tunnel_Traffictube2_ButtonCameraView_Observer_) == (spec.specEnum._unpressed));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonCamera2_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonCamera2_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonCamera3_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonCamera3_conditionPush_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonCamera3_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonCamera3_conditionDone_() {
        return ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera3)) && ((spec.Tunnel_Traffictube2_ButtonCameraView_Observer_) == (spec.specEnum._unpressed));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonCamera3_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonCamera3_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonCamera4_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonCamera4_conditionPush_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonCamera4_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonCamera4_conditionDone_() {
        return ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera4)) && ((spec.Tunnel_Traffictube2_ButtonCameraView_Observer_) == (spec.specEnum._unpressed));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonCamera4_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonCamera4_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonCamera5_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonCamera5_conditionPush_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonCamera5_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonCamera5_conditionDone_() {
        return ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera5)) && ((spec.Tunnel_Traffictube2_ButtonCameraView_Observer_) == (spec.specEnum._unpressed));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonCamera5_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonCamera5_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonCamera6_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonCamera6_conditionPush_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonCamera6_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonCamera6_conditionDone_() {
        return ((spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._camera6)) && ((spec.Tunnel_Traffictube2_ButtonCameraView_Observer_) == (spec.specEnum._unpressed));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonCamera6_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonCamera6_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonCameraView_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonCameraView_conditionPush_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonCameraView_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonCameraView_conditionDone_() {
        return (spec.Tunnel_Traffictube2_ButtonCameraStopView_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonCameraView_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonCameraView_conditionCancel_() {
        return spec.Tunnel_Traffictube2_setCameraButtonPressed_();
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonCameraStopView_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonCameraStopView_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ButtonCameraView_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonCameraStopView_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonCameraStopView_conditionDone_() {
        return (spec.Tunnel_Traffictube2_CCTV_) == (spec.specEnum._off);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonCameraStopView_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonCameraStopView_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonMessage_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonMessage_conditionPush_() {
        return (spec.Tunnel_Traffictube2_Broadcast_) == (spec.specEnum._live);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonMessage_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonMessage_conditionDone_() {
        return ((spec.Tunnel_Traffictube2_Broadcast_) == (spec.specEnum._message)) && ((spec.Tunnel_Traffictube2_SwitchTimerAudio_) == (spec.specEnum._off));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonMessage_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonMessage_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonLive_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonLive_conditionPush_() {
        return (spec.Tunnel_Traffictube2_Broadcast_) != (spec.specEnum._live);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonLive_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonLive_conditionDone_() {
        return (spec.Tunnel_Traffictube2_Broadcast_) == (spec.specEnum._live);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonLive_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonLive_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_conditionPush_() {
        return (spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_conditionDone_() {
        return (spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonManual_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_conditionPush_() {
        return (spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_conditionDone_() {
        return (spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_ButtonAuto_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_conditionPush_() {
        return (spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_conditionDone_() {
        return ((spec.Tunnel_Traffictube2_EscapeDoor_Broadcast_) == (spec.specEnum._off)) && ((spec.Tunnel_Traffictube2_SwitchTimerAudio_) == (spec.specEnum._off));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_conditionCancel_() {
        return (spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_conditionPush_() {
        return (spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_conditionDone_() {
        return (spec.Tunnel_Traffictube2_EscapeDoor_Broadcast_) == (spec.specEnum._on);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_conditionCancel_() {
        return (spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_conditionPush_() {
        return (spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_conditionDone_() {
        return (spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonManual_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_conditionPush_() {
        return (spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_conditionDone_() {
        return (spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_ButtonAuto_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_conditionPush_() {
        return (spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_conditionDone_() {
        return (spec.Tunnel_Traffictube2_EscapeDoor_RouteIndication_) == (spec.specEnum._off);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_conditionCancel_() {
        return (spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_conditionPush_() {
        return (spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_conditionDone_() {
        return (spec.Tunnel_Traffictube2_EscapeDoor_RouteIndication_) == (spec.specEnum._on);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_conditionCancel_() {
        return (spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_PopUp_ButtonAccept_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_PopUp_ButtonAccept_conditionPush_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_PopUp_ButtonAccept_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_PopUp_ButtonAccept_conditionDone_() {
        return ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._emergency)) && ((spec.Tunnel_Traffictube2_PopUp_Window_) == (spec.specEnum._off));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_PopUp_ButtonAccept_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_PopUp_ButtonAccept_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_PopUp_ButtonReject_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_PopUp_ButtonReject_conditionPush_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_PopUp_ButtonReject_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_PopUp_ButtonReject_conditionDone_() {
        return ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational)) && ((spec.Tunnel_Traffictube2_PopUp_Window_) == (spec.specEnum._off));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_PopUp_ButtonReject_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_PopUp_ButtonReject_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonOperational_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonOperational_conditionPush_() {
        return (((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._standby))) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._maintenance));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonOperational_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonOperational_conditionDone_() {
        return (spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonOperational_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonOperational_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonEmergency_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonEmergency_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ModeTraffictube_) != (spec.specEnum._support);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonEmergency_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonEmergency_conditionDone_() {
        return ((spec.Tunnel_Traffictube2_PopUp_Window_) == (spec.specEnum._on)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._emergency));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonEmergency_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonEmergency_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonEvacuation_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonEvacuation_conditionPush_() {
        return (spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._emergency);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonEvacuation_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonEvacuation_conditionDone_() {
        return ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._evacuation)) && ((spec.Tunnel_Traffictube2_SwitchTimerAudio_) != (spec.specEnum._off));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonEvacuation_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonEvacuation_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonRecovery_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonRecovery_conditionPush_() {
        return ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._emergency)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._maintenance));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonRecovery_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonRecovery_conditionDone_() {
        return (spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonRecovery_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonRecovery_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonMaintenance_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonMaintenance_conditionPush_() {
        return ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._operational)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._recovery));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonMaintenance_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonMaintenance_conditionDone_() {
        return (spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._maintenance);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_ButtonMaintenance_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_ButtonMaintenance_conditionCancel_() {
        return ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._standby)) || ((spec.Tunnel_Traffictube2_ModeTraffictube_) == (spec.specEnum._emergency));
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_RequirementsBoombarrier1_obstacleDetectionOn".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_RequirementsBoombarrier1_obstacleDetectionOn_() {
        return (spec.Tunnel_Traffictube2_Boombarrier1_ObstacleDetection_) == (spec.specEnum._on);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_RequirementsBoombarrier2_obstacleDetectionOn".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_RequirementsBoombarrier2_obstacleDetectionOn_() {
        return (spec.Tunnel_Traffictube2_Boombarrier2_ObstacleDetection_) == (spec.specEnum._on);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_RequirementsTrafficlight1_red".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_RequirementsTrafficlight1_red_() {
        return (spec.Tunnel_Traffictube2_Trafficlight1_Mode_) == (spec.specEnum._red);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_RequirementsTrafficlight1_off".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_RequirementsTrafficlight1_off_() {
        return (spec.Tunnel_Traffictube2_Trafficlight1_Mode_) == (spec.specEnum._off);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_RequirementsTrafficlight2_red".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_RequirementsTrafficlight2_red_() {
        return (spec.Tunnel_Traffictube2_Trafficlight2_Mode_) == (spec.specEnum._red);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_RequirementsTrafficlight2_off".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_RequirementsTrafficlight2_off_() {
        return (spec.Tunnel_Traffictube2_Trafficlight2_Mode_) == (spec.specEnum._off);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_RequirementsTrafficlight3_red".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_RequirementsTrafficlight3_red_() {
        return (spec.Tunnel_Traffictube2_Trafficlight3_Mode_) == (spec.specEnum._red);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_RequirementsTrafficlight3_off".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_RequirementsTrafficlight3_off_() {
        return (spec.Tunnel_Traffictube2_Trafficlight3_Mode_) == (spec.specEnum._off);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_RequirementsCamera1_cameraButtonPressed".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_RequirementsCamera1_cameraButtonPressed_() {
        return (spec.Tunnel_Traffictube2_ButtonCamera1_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_RequirementsCamera1_cameraButtonUnpressed".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_RequirementsCamera1_cameraButtonUnpressed_() {
        return (spec.Tunnel_Traffictube2_ButtonCamera1_Observer_) == (spec.specEnum._unpressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_RequirementsCamera2_cameraButtonPressed".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_RequirementsCamera2_cameraButtonPressed_() {
        return (spec.Tunnel_Traffictube2_ButtonCamera2_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_RequirementsCamera2_cameraButtonUnpressed".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_RequirementsCamera2_cameraButtonUnpressed_() {
        return (spec.Tunnel_Traffictube2_ButtonCamera2_Observer_) == (spec.specEnum._unpressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_RequirementsCamera3_cameraButtonPressed".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_RequirementsCamera3_cameraButtonPressed_() {
        return (spec.Tunnel_Traffictube2_ButtonCamera3_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_RequirementsCamera3_cameraButtonUnpressed".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_RequirementsCamera3_cameraButtonUnpressed_() {
        return (spec.Tunnel_Traffictube2_ButtonCamera3_Observer_) == (spec.specEnum._unpressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_RequirementsCamera4_cameraButtonPressed".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_RequirementsCamera4_cameraButtonPressed_() {
        return (spec.Tunnel_Traffictube2_ButtonCamera4_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_RequirementsCamera4_cameraButtonUnpressed".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_RequirementsCamera4_cameraButtonUnpressed_() {
        return (spec.Tunnel_Traffictube2_ButtonCamera4_Observer_) == (spec.specEnum._unpressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_RequirementsCamera5_cameraButtonPressed".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_RequirementsCamera5_cameraButtonPressed_() {
        return (spec.Tunnel_Traffictube2_ButtonCamera5_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_RequirementsCamera5_cameraButtonUnpressed".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_RequirementsCamera5_cameraButtonUnpressed_() {
        return (spec.Tunnel_Traffictube2_ButtonCamera5_Observer_) == (spec.specEnum._unpressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_RequirementsCamera6_cameraButtonPressed".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_RequirementsCamera6_cameraButtonPressed_() {
        return (spec.Tunnel_Traffictube2_ButtonCamera6_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_RequirementsCamera6_cameraButtonUnpressed".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_RequirementsCamera6_cameraButtonUnpressed_() {
        return (spec.Tunnel_Traffictube2_ButtonCamera6_Observer_) == (spec.specEnum._unpressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_RequirementsEscapeDoor1_routeIndicationAuto".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_RequirementsEscapeDoor1_routeIndicationAuto_() {
        return (spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_RequirementsEscapeDoor1_routeIndicationManual".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_RequirementsEscapeDoor1_routeIndicationManual_() {
        return (spec.Tunnel_Traffictube2_EscapeDoor_ControlRouteIndication_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_RequirementsEscapeDoor1_buttonRouteIndicationOn".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_RequirementsEscapeDoor1_buttonRouteIndicationOn_() {
        return (spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOn_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_RequirementsEscapeDoor1_buttonRouteIndicationOff".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_RequirementsEscapeDoor1_buttonRouteIndicationOff_() {
        return (spec.Tunnel_Traffictube2_EscapeDoor_ButtonRouteIndicationOff_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_RequirementsEscapeDoor1_broadcastAuto".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_RequirementsEscapeDoor1_broadcastAuto_() {
        return (spec.Tunnel_Traffictube2_EscapeDoor_ControlBroadcast_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_RequirementsEscapeDoor1_buttonBroadcastOff".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_RequirementsEscapeDoor1_buttonBroadcastOff_() {
        return (spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOff_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_RequirementsEscapeDoor1_buttonBroadcastOn".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_RequirementsEscapeDoor1_buttonBroadcastOn_() {
        return (spec.Tunnel_Traffictube2_EscapeDoor_ButtonBroadcastOn_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_conditionPush_() {
        return (spec.Tunnel_MiddleTunnelChannel_ControlPressure_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_conditionDone_() {
        return (spec.Tunnel_MiddleTunnelChannel_ControlPressure_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ControlPressure_ButtonManual_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_conditionPush_() {
        return (spec.Tunnel_MiddleTunnelChannel_ControlPressure_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_conditionDone_() {
        return (spec.Tunnel_MiddleTunnelChannel_ControlPressure_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ControlPressure_ButtonAuto_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ButtonPressureOff_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ButtonPressureOff_conditionPush_() {
        return (spec.Tunnel_MiddleTunnelChannel_ControlPressure_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ButtonPressureOff_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ButtonPressureOff_conditionDone_() {
        return (spec.Tunnel_MiddleTunnelChannel_Pressure_) == (spec.specEnum._off);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ButtonPressureOff_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ButtonPressureOff_conditionCancel_() {
        return (spec.Tunnel_MiddleTunnelChannel_ControlPressure_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ButtonPressureLeft_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ButtonPressureLeft_conditionPush_() {
        return (spec.Tunnel_MiddleTunnelChannel_ControlPressure_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ButtonPressureLeft_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ButtonPressureLeft_conditionDone_() {
        return (spec.Tunnel_MiddleTunnelChannel_Pressure_) == (spec.specEnum._left);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ButtonPressureLeft_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ButtonPressureLeft_conditionCancel_() {
        return (spec.Tunnel_MiddleTunnelChannel_ControlPressure_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ButtonPressureRight_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ButtonPressureRight_conditionPush_() {
        return (spec.Tunnel_MiddleTunnelChannel_ControlPressure_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ButtonPressureRight_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ButtonPressureRight_conditionDone_() {
        return (spec.Tunnel_MiddleTunnelChannel_Pressure_) == (spec.specEnum._right);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ButtonPressureRight_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ButtonPressureRight_conditionCancel_() {
        return (spec.Tunnel_MiddleTunnelChannel_ControlPressure_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_conditionPush_() {
        return (spec.Tunnel_MiddleTunnelChannel_ControlLighting_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_conditionDone_() {
        return (spec.Tunnel_MiddleTunnelChannel_ControlLighting_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ControlLighting_ButtonManual_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_conditionPush_() {
        return (spec.Tunnel_MiddleTunnelChannel_ControlLighting_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_conditionDone_() {
        return (spec.Tunnel_MiddleTunnelChannel_ControlLighting_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ControlLighting_ButtonAuto_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ButtonLightingOff_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ButtonLightingOff_conditionPush_() {
        return (spec.Tunnel_MiddleTunnelChannel_ControlLighting_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ButtonLightingOff_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ButtonLightingOff_conditionDone_() {
        return (spec.Tunnel_MiddleTunnelChannel_Lighting_) == (spec.specEnum._off);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ButtonLightingOff_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ButtonLightingOff_conditionCancel_() {
        return (spec.Tunnel_MiddleTunnelChannel_ControlLighting_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ButtonLightingOn_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ButtonLightingOn_conditionPush_() {
        return (spec.Tunnel_MiddleTunnelChannel_ControlLighting_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ButtonLightingOn_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ButtonLightingOn_conditionDone_() {
        return (spec.Tunnel_MiddleTunnelChannel_Lighting_) == (spec.specEnum._on);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ButtonLightingOn_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ButtonLightingOn_conditionCancel_() {
        return (spec.Tunnel_MiddleTunnelChannel_ControlLighting_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_conditionPush_() {
        return (spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_conditionDone_() {
        return (spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonManual_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_conditionPush_() {
        return (spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_conditionDone_() {
        return (spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_ButtonAuto_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_conditionPush_() {
        return (spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_conditionDone_() {
        return (spec.Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication_) == (spec.specEnum._off);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationOff_conditionCancel_() {
        return (spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_conditionPush_() {
        return (spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_conditionDone_() {
        return (spec.Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication_) == (spec.specEnum._upward);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationUpward_conditionCancel_() {
        return (spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_conditionPush_() {
        return (spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_conditionDone_() {
        return (spec.Tunnel_MiddleTunnelChannel_DynamicEscaperouteIndication_) == (spec.specEnum._downward);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ButtonDynamicEscaperouteIndicationDownward_conditionCancel_() {
        return (spec.Tunnel_MiddleTunnelChannel_ControlDynamicEscaperouteIndication_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ButtonStartMessage_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ButtonStartMessage_conditionPush_() {
        return ((spec.Tunnel_MiddleTunnelChannel_Broadcast_) == (spec.specEnum._off)) || ((spec.Tunnel_MiddleTunnelChannel_Broadcast_) == (spec.specEnum._suppressedManual));
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ButtonStartMessage_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ButtonStartMessage_conditionDone_() {
        return (spec.Tunnel_MiddleTunnelChannel_Broadcast_) == (spec.specEnum._on);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ButtonStartMessage_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ButtonStartMessage_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ButtonStopMessage_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ButtonStopMessage_conditionPush_() {
        return (spec.Tunnel_MiddleTunnelChannel_Broadcast_) == (spec.specEnum._on);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ButtonStopMessage_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ButtonStopMessage_conditionDone_() {
        return ((spec.Tunnel_MiddleTunnelChannel_Broadcast_) == (spec.specEnum._off)) || ((spec.Tunnel_MiddleTunnelChannel_Broadcast_) == (spec.specEnum._suppressedManual));
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_ButtonStopMessage_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_ButtonStopMessage_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_WatercellarFirehoses_Control_ButtonManual_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_WatercellarFirehoses_Control_ButtonManual_conditionPush_() {
        return (spec.Tunnel_WatercellarFirehoses_Control_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_WatercellarFirehoses_Control_ButtonManual_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_WatercellarFirehoses_Control_ButtonManual_conditionDone_() {
        return (spec.Tunnel_WatercellarFirehoses_Control_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_WatercellarFirehoses_Control_ButtonManual_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_WatercellarFirehoses_Control_ButtonManual_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_WatercellarFirehoses_Control_ButtonAuto_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_WatercellarFirehoses_Control_ButtonAuto_conditionPush_() {
        return (spec.Tunnel_WatercellarFirehoses_Control_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_WatercellarFirehoses_Control_ButtonAuto_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_WatercellarFirehoses_Control_ButtonAuto_conditionDone_() {
        return (spec.Tunnel_WatercellarFirehoses_Control_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_WatercellarFirehoses_Control_ButtonAuto_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_WatercellarFirehoses_Control_ButtonAuto_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_WatercellarFirehoses_ButtonExtinguish_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_WatercellarFirehoses_ButtonExtinguish_conditionPush_() {
        return (spec.Tunnel_WatercellarFirehoses_Control_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_WatercellarFirehoses_ButtonExtinguish_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_WatercellarFirehoses_ButtonExtinguish_conditionDone_() {
        return (spec.Tunnel_WatercellarFirehoses_Regime_) == (spec.specEnum._extinguish);
    }

    /**
     * Evaluates algebraic variable "Tunnel_WatercellarFirehoses_ButtonExtinguish_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_WatercellarFirehoses_ButtonExtinguish_conditionCancel_() {
        return (spec.Tunnel_WatercellarFirehoses_Control_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_WatercellarFirehoses_ButtonGuard_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_WatercellarFirehoses_ButtonGuard_conditionPush_() {
        return (spec.Tunnel_WatercellarFirehoses_Control_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_WatercellarFirehoses_ButtonGuard_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_WatercellarFirehoses_ButtonGuard_conditionDone_() {
        return (spec.Tunnel_WatercellarFirehoses_Regime_) == (spec.specEnum._guard);
    }

    /**
     * Evaluates algebraic variable "Tunnel_WatercellarFirehoses_ButtonGuard_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_WatercellarFirehoses_ButtonGuard_conditionCancel_() {
        return (spec.Tunnel_WatercellarFirehoses_Control_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_Control_ButtonManual_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_Control_ButtonManual_conditionPush_() {
        return (spec.Tunnel_MiddleDrainCellar_Control_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_Control_ButtonManual_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_Control_ButtonManual_conditionDone_() {
        return (spec.Tunnel_MiddleDrainCellar_Control_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_Control_ButtonManual_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_Control_ButtonManual_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_Control_ButtonAuto_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_Control_ButtonAuto_conditionPush_() {
        return (spec.Tunnel_MiddleDrainCellar_Control_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_Control_ButtonAuto_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_Control_ButtonAuto_conditionDone_() {
        return (spec.Tunnel_MiddleDrainCellar_Control_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_Control_ButtonAuto_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_Control_ButtonAuto_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_ButtonStoring_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_ButtonStoring_conditionPush_() {
        return (spec.Tunnel_MiddleDrainCellar_Control_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_ButtonStoring_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_ButtonStoring_conditionDone_() {
        return (spec.Tunnel_MiddleDrainCellar_Regime_) == (spec.specEnum._storing);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_ButtonStoring_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_ButtonStoring_conditionCancel_() {
        return (spec.Tunnel_MiddleDrainCellar_Control_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_ButtonEmptying_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_ButtonEmptying_conditionPush_() {
        return (spec.Tunnel_MiddleDrainCellar_Control_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_ButtonEmptying_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_ButtonEmptying_conditionDone_() {
        return (spec.Tunnel_MiddleDrainCellar_Regime_) == (spec.specEnum._emptying);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_ButtonEmptying_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_ButtonEmptying_conditionCancel_() {
        return (spec.Tunnel_MiddleDrainCellar_Control_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_ButtonOff_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_ButtonOff_conditionPush_() {
        return (spec.Tunnel_MiddleDrainCellar_Control_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_ButtonOff_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_ButtonOff_conditionDone_() {
        return (spec.Tunnel_MiddleDrainCellar_Regime_) == (spec.specEnum._off);
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_ButtonOff_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_ButtonOff_conditionCancel_() {
        return (spec.Tunnel_MiddleDrainCellar_Control_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_Control_ButtonManual_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_Control_ButtonManual_conditionPush_() {
        return (spec.Tunnel_HeadDrainCellar1_Control_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_Control_ButtonManual_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_Control_ButtonManual_conditionDone_() {
        return (spec.Tunnel_HeadDrainCellar1_Control_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_Control_ButtonManual_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_Control_ButtonManual_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_Control_ButtonAuto_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_Control_ButtonAuto_conditionPush_() {
        return (spec.Tunnel_HeadDrainCellar1_Control_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_Control_ButtonAuto_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_Control_ButtonAuto_conditionDone_() {
        return (spec.Tunnel_HeadDrainCellar1_Control_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_Control_ButtonAuto_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_Control_ButtonAuto_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_ButtonStoring_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_ButtonStoring_conditionPush_() {
        return (spec.Tunnel_HeadDrainCellar1_Control_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_ButtonStoring_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_ButtonStoring_conditionDone_() {
        return (spec.Tunnel_HeadDrainCellar1_Regime_) == (spec.specEnum._storing);
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_ButtonStoring_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_ButtonStoring_conditionCancel_() {
        return (spec.Tunnel_HeadDrainCellar1_Control_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_ButtonEmptying_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_ButtonEmptying_conditionPush_() {
        return (spec.Tunnel_HeadDrainCellar1_Control_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_ButtonEmptying_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_ButtonEmptying_conditionDone_() {
        return (spec.Tunnel_HeadDrainCellar1_Regime_) == (spec.specEnum._emptying);
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_ButtonEmptying_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_ButtonEmptying_conditionCancel_() {
        return (spec.Tunnel_HeadDrainCellar1_Control_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_ButtonOff_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_ButtonOff_conditionPush_() {
        return (spec.Tunnel_HeadDrainCellar1_Control_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_ButtonOff_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_ButtonOff_conditionDone_() {
        return (spec.Tunnel_HeadDrainCellar1_Regime_) == (spec.specEnum._off);
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_ButtonOff_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_ButtonOff_conditionCancel_() {
        return (spec.Tunnel_HeadDrainCellar1_Control_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_Control_ButtonManual_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_Control_ButtonManual_conditionPush_() {
        return (spec.Tunnel_HeadDrainCellar2_Control_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_Control_ButtonManual_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_Control_ButtonManual_conditionDone_() {
        return (spec.Tunnel_HeadDrainCellar2_Control_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_Control_ButtonManual_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_Control_ButtonManual_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_Control_ButtonAuto_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_Control_ButtonAuto_conditionPush_() {
        return (spec.Tunnel_HeadDrainCellar2_Control_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_Control_ButtonAuto_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_Control_ButtonAuto_conditionDone_() {
        return (spec.Tunnel_HeadDrainCellar2_Control_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_Control_ButtonAuto_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_Control_ButtonAuto_conditionCancel_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_ButtonStoring_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_ButtonStoring_conditionPush_() {
        return (spec.Tunnel_HeadDrainCellar2_Control_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_ButtonStoring_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_ButtonStoring_conditionDone_() {
        return (spec.Tunnel_HeadDrainCellar2_Regime_) == (spec.specEnum._storing);
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_ButtonStoring_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_ButtonStoring_conditionCancel_() {
        return (spec.Tunnel_HeadDrainCellar2_Control_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_ButtonEmptying_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_ButtonEmptying_conditionPush_() {
        return (spec.Tunnel_HeadDrainCellar2_Control_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_ButtonEmptying_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_ButtonEmptying_conditionDone_() {
        return (spec.Tunnel_HeadDrainCellar2_Regime_) == (spec.specEnum._emptying);
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_ButtonEmptying_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_ButtonEmptying_conditionCancel_() {
        return (spec.Tunnel_HeadDrainCellar2_Control_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_ButtonOff_conditionPush".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_ButtonOff_conditionPush_() {
        return (spec.Tunnel_HeadDrainCellar2_Control_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_ButtonOff_conditionDone".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_ButtonOff_conditionDone_() {
        return (spec.Tunnel_HeadDrainCellar2_Regime_) == (spec.specEnum._off);
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_ButtonOff_conditionCancel".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_ButtonOff_conditionCancel_() {
        return (spec.Tunnel_HeadDrainCellar2_Control_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_RequirementsMiddleDrainCellar_control_auto".
     *
     * @return The evaluation result.
     */
    Tunnel_RequirementsMiddleDrainCellar_control_auto_() {
        return (spec.Tunnel_MiddleDrainCellar_Control_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_RequirementsMiddleDrainCellar_control_manual".
     *
     * @return The evaluation result.
     */
    Tunnel_RequirementsMiddleDrainCellar_control_manual_() {
        return (spec.Tunnel_MiddleDrainCellar_Control_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_RequirementsMiddleDrainCellar_button_store".
     *
     * @return The evaluation result.
     */
    Tunnel_RequirementsMiddleDrainCellar_button_store_() {
        return (spec.Tunnel_MiddleDrainCellar_ButtonStoring_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_RequirementsMiddleDrainCellar_button_empty".
     *
     * @return The evaluation result.
     */
    Tunnel_RequirementsMiddleDrainCellar_button_empty_() {
        return (spec.Tunnel_MiddleDrainCellar_ButtonEmptying_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_RequirementsMiddleDrainCellar_button_off".
     *
     * @return The evaluation result.
     */
    Tunnel_RequirementsMiddleDrainCellar_button_off_() {
        return (spec.Tunnel_MiddleDrainCellar_ButtonOff_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_RequirementsHeadDrainCellar1_control_auto".
     *
     * @return The evaluation result.
     */
    Tunnel_RequirementsHeadDrainCellar1_control_auto_() {
        return (spec.Tunnel_HeadDrainCellar1_Control_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_RequirementsHeadDrainCellar1_control_manual".
     *
     * @return The evaluation result.
     */
    Tunnel_RequirementsHeadDrainCellar1_control_manual_() {
        return (spec.Tunnel_HeadDrainCellar1_Control_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_RequirementsHeadDrainCellar1_button_store".
     *
     * @return The evaluation result.
     */
    Tunnel_RequirementsHeadDrainCellar1_button_store_() {
        return (spec.Tunnel_HeadDrainCellar1_ButtonStoring_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_RequirementsHeadDrainCellar1_button_empty".
     *
     * @return The evaluation result.
     */
    Tunnel_RequirementsHeadDrainCellar1_button_empty_() {
        return (spec.Tunnel_HeadDrainCellar1_ButtonEmptying_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_RequirementsHeadDrainCellar1_button_off".
     *
     * @return The evaluation result.
     */
    Tunnel_RequirementsHeadDrainCellar1_button_off_() {
        return (spec.Tunnel_HeadDrainCellar1_ButtonOff_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_RequirementsHeadDrainCellar2_control_auto".
     *
     * @return The evaluation result.
     */
    Tunnel_RequirementsHeadDrainCellar2_control_auto_() {
        return (spec.Tunnel_HeadDrainCellar2_Control_Mode_) == (spec.specEnum._auto);
    }

    /**
     * Evaluates algebraic variable "Tunnel_RequirementsHeadDrainCellar2_control_manual".
     *
     * @return The evaluation result.
     */
    Tunnel_RequirementsHeadDrainCellar2_control_manual_() {
        return (spec.Tunnel_HeadDrainCellar2_Control_Mode_) == (spec.specEnum._manual);
    }

    /**
     * Evaluates algebraic variable "Tunnel_RequirementsHeadDrainCellar2_button_store".
     *
     * @return The evaluation result.
     */
    Tunnel_RequirementsHeadDrainCellar2_button_store_() {
        return (spec.Tunnel_HeadDrainCellar2_ButtonStoring_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_RequirementsHeadDrainCellar2_button_empty".
     *
     * @return The evaluation result.
     */
    Tunnel_RequirementsHeadDrainCellar2_button_empty_() {
        return (spec.Tunnel_HeadDrainCellar2_ButtonEmptying_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_RequirementsHeadDrainCellar2_button_off".
     *
     * @return The evaluation result.
     */
    Tunnel_RequirementsHeadDrainCellar2_button_off_() {
        return (spec.Tunnel_HeadDrainCellar2_ButtonOff_Observer_) == (spec.specEnum._pressed);
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Boombarrier1_ActuatorUp.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Boombarrier1_ActuatorUp_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Boombarrier1_ActuatorUp.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Boombarrier1_ActuatorUp_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Boombarrier1_ActuatorDown.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Boombarrier1_ActuatorDown_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Boombarrier1_ActuatorDown.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Boombarrier1_ActuatorDown_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Boombarrier1_SensorOpen.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Boombarrier1_SensorOpen_offInitial_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Boombarrier1_SensorOpen.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Boombarrier1_SensorOpen_offMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Boombarrier1_SensorOpen.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Boombarrier1_SensorOpen_onMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Boombarrier1_SensorClosed.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Boombarrier1_SensorClosed_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Boombarrier1_SensorClosed.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Boombarrier1_SensorClosed_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Boombarrier1_SensorClosed.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Boombarrier1_SensorClosed_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Boombarrier1_ObstacleDetection.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Boombarrier1_ObstacleDetection_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Boombarrier1_ObstacleDetection.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Boombarrier1_ObstacleDetection_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Boombarrier1_ObstacleDetection.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Boombarrier1_ObstacleDetection_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Boombarrier2_ActuatorUp.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Boombarrier2_ActuatorUp_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Boombarrier2_ActuatorUp.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Boombarrier2_ActuatorUp_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Boombarrier2_ActuatorDown.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Boombarrier2_ActuatorDown_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Boombarrier2_ActuatorDown.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Boombarrier2_ActuatorDown_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Boombarrier2_SensorOpen.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Boombarrier2_SensorOpen_offInitial_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Boombarrier2_SensorOpen.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Boombarrier2_SensorOpen_offMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Boombarrier2_SensorOpen.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Boombarrier2_SensorOpen_onMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Boombarrier2_SensorClosed.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Boombarrier2_SensorClosed_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Boombarrier2_SensorClosed.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Boombarrier2_SensorClosed_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Boombarrier2_SensorClosed.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Boombarrier2_SensorClosed_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Boombarrier2_ObstacleDetection.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Boombarrier2_ObstacleDetection_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Boombarrier2_ObstacleDetection.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Boombarrier2_ObstacleDetection_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Boombarrier2_ObstacleDetection.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Boombarrier2_ObstacleDetection_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Trafficlight1_ReleaseSignal.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Trafficlight1_ReleaseSignal_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Trafficlight1_ReleaseSignal.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Trafficlight1_ReleaseSignal_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Trafficlight1_ReleaseSignal.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Trafficlight1_ReleaseSignal_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Trafficlight2_ReleaseSignal.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Trafficlight2_ReleaseSignal_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Trafficlight2_ReleaseSignal.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Trafficlight2_ReleaseSignal_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Trafficlight2_ReleaseSignal.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Trafficlight2_ReleaseSignal_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Trafficlight3_ReleaseSignal.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Trafficlight3_ReleaseSignal_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Trafficlight3_ReleaseSignal.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Trafficlight3_ReleaseSignal_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Trafficlight3_ReleaseSignal.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Trafficlight3_ReleaseSignal_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_J32_Mode.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_J32_Mode_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_J32_Mode.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_J32_Mode_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_MatrixsignTrafficlight.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_MatrixsignTrafficlight_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_MatrixsignTrafficlight.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_MatrixsignTrafficlight_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_MatrixsignUnpressed.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_MatrixsignUnpressed_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_MatrixsignUnpressed.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_MatrixsignUnpressed_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EmergencyCabinetA_SensorOpen.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EmergencyCabinetA_SensorOpen_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EmergencyCabinetA_SensorOpen.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EmergencyCabinetA_SensorOpen_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EmergencyCabinetA_SensorOpen.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EmergencyCabinetA_SensorOpen_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EmergencyCabinetA_Phone.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EmergencyCabinetA_Phone_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EmergencyCabinetA_Phone.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EmergencyCabinetA_Phone_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EmergencyCabinetA_Phone.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EmergencyCabinetA_Phone_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EmergencyCabinetA_HandheldExtinguisher.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EmergencyCabinetA_HandheldExtinguisher_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EmergencyCabinetA_HandheldExtinguisher.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EmergencyCabinetA_HandheldExtinguisher_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EmergencyCabinetA_HandheldExtinguisher.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EmergencyCabinetA_HandheldExtinguisher_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EmergencyCabinetA_Firehose.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EmergencyCabinetA_Firehose_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EmergencyCabinetA_Firehose.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EmergencyCabinetA_Firehose_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EmergencyCabinetA_Firehose.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EmergencyCabinetA_Firehose_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EmergencyCabinetC_SensorOpen.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EmergencyCabinetC_SensorOpen_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EmergencyCabinetC_SensorOpen.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EmergencyCabinetC_SensorOpen_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EmergencyCabinetC_SensorOpen.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EmergencyCabinetC_SensorOpen_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EmergencyCabinetC_Phone.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EmergencyCabinetC_Phone_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EmergencyCabinetC_Phone.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EmergencyCabinetC_Phone_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EmergencyCabinetC_Phone.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EmergencyCabinetC_Phone_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EmergencyCabinetC_HandheldExtinguisher.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EmergencyCabinetC_HandheldExtinguisher_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EmergencyCabinetC_HandheldExtinguisher.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EmergencyCabinetC_HandheldExtinguisher_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EmergencyCabinetC_HandheldExtinguisher.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EmergencyCabinetC_HandheldExtinguisher_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Recorder.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Recorder_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_Recorder.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_Recorder_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EscapeDoor_RouteIndication.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EscapeDoor_RouteIndication_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_EscapeDoor_RouteIndication.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_EscapeDoor_RouteIndication_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_PopUp_Window.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_PopUp_Window_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube1_PopUp_Window.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube1_PopUp_Window_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Boombarrier1_ActuatorUp.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Boombarrier1_ActuatorUp_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Boombarrier1_ActuatorUp.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Boombarrier1_ActuatorUp_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Boombarrier1_ActuatorDown.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Boombarrier1_ActuatorDown_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Boombarrier1_ActuatorDown.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Boombarrier1_ActuatorDown_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Boombarrier1_SensorOpen.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Boombarrier1_SensorOpen_offInitial_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Boombarrier1_SensorOpen.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Boombarrier1_SensorOpen_offMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Boombarrier1_SensorOpen.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Boombarrier1_SensorOpen_onMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Boombarrier1_SensorClosed.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Boombarrier1_SensorClosed_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Boombarrier1_SensorClosed.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Boombarrier1_SensorClosed_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Boombarrier1_SensorClosed.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Boombarrier1_SensorClosed_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Boombarrier1_ObstacleDetection.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Boombarrier1_ObstacleDetection_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Boombarrier1_ObstacleDetection.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Boombarrier1_ObstacleDetection_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Boombarrier1_ObstacleDetection.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Boombarrier1_ObstacleDetection_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Boombarrier2_ActuatorUp.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Boombarrier2_ActuatorUp_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Boombarrier2_ActuatorUp.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Boombarrier2_ActuatorUp_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Boombarrier2_ActuatorDown.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Boombarrier2_ActuatorDown_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Boombarrier2_ActuatorDown.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Boombarrier2_ActuatorDown_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Boombarrier2_SensorOpen.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Boombarrier2_SensorOpen_offInitial_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Boombarrier2_SensorOpen.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Boombarrier2_SensorOpen_offMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Boombarrier2_SensorOpen.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Boombarrier2_SensorOpen_onMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Boombarrier2_SensorClosed.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Boombarrier2_SensorClosed_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Boombarrier2_SensorClosed.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Boombarrier2_SensorClosed_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Boombarrier2_SensorClosed.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Boombarrier2_SensorClosed_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Boombarrier2_ObstacleDetection.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Boombarrier2_ObstacleDetection_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Boombarrier2_ObstacleDetection.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Boombarrier2_ObstacleDetection_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Boombarrier2_ObstacleDetection.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Boombarrier2_ObstacleDetection_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Trafficlight1_ReleaseSignal.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Trafficlight1_ReleaseSignal_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Trafficlight1_ReleaseSignal.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Trafficlight1_ReleaseSignal_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Trafficlight1_ReleaseSignal.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Trafficlight1_ReleaseSignal_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Trafficlight2_ReleaseSignal.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Trafficlight2_ReleaseSignal_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Trafficlight2_ReleaseSignal.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Trafficlight2_ReleaseSignal_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Trafficlight2_ReleaseSignal.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Trafficlight2_ReleaseSignal_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Trafficlight3_ReleaseSignal.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Trafficlight3_ReleaseSignal_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Trafficlight3_ReleaseSignal.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Trafficlight3_ReleaseSignal_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Trafficlight3_ReleaseSignal.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Trafficlight3_ReleaseSignal_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_J32_Mode.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_J32_Mode_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_J32_Mode.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_J32_Mode_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_MatrixsignTrafficlight.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_MatrixsignTrafficlight_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_MatrixsignTrafficlight.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_MatrixsignTrafficlight_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_MatrixsignUnpressed.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_MatrixsignUnpressed_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_MatrixsignUnpressed.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_MatrixsignUnpressed_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EmergencyCabinetA_SensorOpen.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EmergencyCabinetA_SensorOpen_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EmergencyCabinetA_SensorOpen.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EmergencyCabinetA_SensorOpen_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EmergencyCabinetA_SensorOpen.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EmergencyCabinetA_SensorOpen_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EmergencyCabinetA_Phone.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EmergencyCabinetA_Phone_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EmergencyCabinetA_Phone.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EmergencyCabinetA_Phone_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EmergencyCabinetA_Phone.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EmergencyCabinetA_Phone_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EmergencyCabinetA_HandheldExtinguisher.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EmergencyCabinetA_HandheldExtinguisher_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EmergencyCabinetA_HandheldExtinguisher.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EmergencyCabinetA_HandheldExtinguisher_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EmergencyCabinetA_HandheldExtinguisher.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EmergencyCabinetA_HandheldExtinguisher_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EmergencyCabinetA_Firehose.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EmergencyCabinetA_Firehose_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EmergencyCabinetA_Firehose.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EmergencyCabinetA_Firehose_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EmergencyCabinetA_Firehose.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EmergencyCabinetA_Firehose_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EmergencyCabinetC_SensorOpen.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EmergencyCabinetC_SensorOpen_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EmergencyCabinetC_SensorOpen.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EmergencyCabinetC_SensorOpen_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EmergencyCabinetC_SensorOpen.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EmergencyCabinetC_SensorOpen_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EmergencyCabinetC_Phone.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EmergencyCabinetC_Phone_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EmergencyCabinetC_Phone.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EmergencyCabinetC_Phone_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EmergencyCabinetC_Phone.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EmergencyCabinetC_Phone_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EmergencyCabinetC_HandheldExtinguisher.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EmergencyCabinetC_HandheldExtinguisher_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EmergencyCabinetC_HandheldExtinguisher.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EmergencyCabinetC_HandheldExtinguisher_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EmergencyCabinetC_HandheldExtinguisher.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EmergencyCabinetC_HandheldExtinguisher_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Recorder.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Recorder_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_Recorder.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_Recorder_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EscapeDoor_RouteIndication.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EscapeDoor_RouteIndication_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_EscapeDoor_RouteIndication.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_EscapeDoor_RouteIndication_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_PopUp_Window.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_PopUp_Window_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_Traffictube2_PopUp_Window.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_Traffictube2_PopUp_Window_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_Lighting.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_Lighting_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleTunnelChannel_Lighting.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleTunnelChannel_Lighting_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_WatercellarFirehoses_SensorLow.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_WatercellarFirehoses_SensorLow_offInitial_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_WatercellarFirehoses_SensorLow.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_WatercellarFirehoses_SensorLow_offMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_WatercellarFirehoses_SensorLow.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_WatercellarFirehoses_SensorLow_onMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_WatercellarFirehoses_SensorHigh.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_WatercellarFirehoses_SensorHigh_offInitial_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_WatercellarFirehoses_SensorHigh.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_WatercellarFirehoses_SensorHigh_offMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_WatercellarFirehoses_SensorHigh.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_WatercellarFirehoses_SensorHigh_onMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_WatercellarFirehoses_Pump.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_WatercellarFirehoses_Pump_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_WatercellarFirehoses_Pump.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_WatercellarFirehoses_Pump_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_Sensor1.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_Sensor1_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_Sensor1.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_Sensor1_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_Sensor1.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_Sensor1_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_Sensor2.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_Sensor2_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_Sensor2.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_Sensor2_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_Sensor2.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_Sensor2_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_Sensor3.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_Sensor3_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_Sensor3.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_Sensor3_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_Sensor3.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_Sensor3_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_Sensor4.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_Sensor4_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_Sensor4.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_Sensor4_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_Sensor4.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_Sensor4_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_Sensor5.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_Sensor5_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_Sensor5.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_Sensor5_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_Sensor5.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_Sensor5_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_Pump1.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_Pump1_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_Pump1.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_Pump1_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_Pump2.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_Pump2_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_MiddleDrainCellar_Pump2.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_MiddleDrainCellar_Pump2_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_Sensor1.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_Sensor1_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_Sensor1.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_Sensor1_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_Sensor1.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_Sensor1_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_Sensor2.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_Sensor2_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_Sensor2.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_Sensor2_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_Sensor2.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_Sensor2_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_Sensor3.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_Sensor3_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_Sensor3.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_Sensor3_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_Sensor3.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_Sensor3_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_Sensor4.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_Sensor4_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_Sensor4.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_Sensor4_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_Sensor4.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_Sensor4_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_Sensor5.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_Sensor5_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_Sensor5.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_Sensor5_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_Sensor5.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_Sensor5_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_Pump1.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_Pump1_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_Pump1.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_Pump1_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_Pump2.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_Pump2_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar1_Pump2.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar1_Pump2_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_Sensor1.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_Sensor1_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_Sensor1.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_Sensor1_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_Sensor1.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_Sensor1_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_Sensor2.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_Sensor2_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_Sensor2.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_Sensor2_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_Sensor2.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_Sensor2_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_Sensor3.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_Sensor3_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_Sensor3.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_Sensor3_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_Sensor3.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_Sensor3_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_Sensor4.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_Sensor4_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_Sensor4.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_Sensor4_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_Sensor4.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_Sensor4_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_Sensor5.offInitial".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_Sensor5_offInitial_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_Sensor5.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_Sensor5_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_Sensor5.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_Sensor5_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_Pump1.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_Pump1_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_Pump1.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_Pump1_onMarked_() {
        return false;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_Pump2.offMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_Pump2_offMarked_() {
        return true;
    }

    /**
     * Evaluates algebraic variable "Tunnel_HeadDrainCellar2_Pump2.onMarked".
     *
     * @return The evaluation result.
     */
    Tunnel_HeadDrainCellar2_Pump2_onMarked_() {
        return false;
    }



    /**
     * Print output for all relevant print declarations.
     *
     * @param idx The 0-based event index of the transition, or '-2' for
     *      time transitions, or '-3' for the 'initial' transition.
     * @param pre Whether to print output for the pre/source state of the
     *      transition ('true') or for the post/target state of the
     *      transition ('false').
     */
    printOutput(idx, pre) {
        // No print declarations.
    }

    /**
     * Informs that new print output is available.
     *
     * @param text The text being printed.
     * @param target The file or special target to which text is to be printed.
     *      If printed to a file, an absolute or relative local file system
     *      path is given. Paths may contain both '/' and '\\'
     *      as file separators. Use {@link specUtils#normalizePrintTarget}
     *      to normalize the path to use '/' file separators. There are two
     *      special targets: ':stdout' to print to the standard output stream,
     *      and ':stderr' to print to the standard error stream.
     */
    infoPrintOutput(text, target) {
        if (target == ':stdout') {
            spec.log(text);
        } else if (target == ':stderr') {
            spec.error(text);
        } else {
            var path = specUtils.normalizePrintTarget(target);
            spec.infoPrintOutput(path + ': ' + text, ':stdout');
        }
    }
}
